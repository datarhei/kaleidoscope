"use strict";function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _classCallCheck2(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _inherits2(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf2(e,t)}function _setPrototypeOf2(e,t){return _setPrototypeOf2=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},_setPrototypeOf2(e,t)}function _createSuper2(e){var t=_isNativeReflectConstruct2();return function(){var r=_getPrototypeOf2(e),a;if(t){var i=_getPrototypeOf2(this).constructor;a=Reflect.construct(r,arguments,i)}else a=r.apply(this,arguments);return _possibleConstructorReturn2(this,a)}}function _possibleConstructorReturn2(e,t){return t&&("object"===_typeof(t)||"function"==typeof t)?t:_assertThisInitialized2(e)}function _assertThisInitialized2(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _isNativeReflectConstruct2(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function _getPrototypeOf2(e){return _getPrototypeOf2=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},_getPrototypeOf2(e)}function _typeof(e){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)}(function(e,t){"object"===("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):(e=e||self,t(e.Kaleidoscope={}))})(void 0,function(e){'use strict';var ho=Math.tan,yo=Math.atan,vo=Math.acos,xo=Math.round,_o=Math.ceil,bo=Math.sign,Mo=Number.EPSILON,So=Math.sin,To=Math.atan2,Eo=Math.PI,wo=Math.sqrt,Lo=Math.LN2,Ao=Math.log,Ro=Math.cos,Po=Math.floor,Co=Number.isInteger,Do=Math.pow,Io=Math.min,No=Math.max,zo=Math.abs;function t(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){for(var r=0,a;r<t.length;r++)a=t[r],a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}function n(e,t,a){return t&&r(e.prototype,t),a&&r(e,a),e}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}function l(e,t){return l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},l(e,t)}function d(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function p(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function c(e,t){return t&&("object"===_typeof(t)||"function"==typeof t)?t:p(e)}function u(e){var t=d();return function(){var r=s(e),a;if(t){var i=s(this).constructor;a=Reflect.construct(r,arguments,i)}else a=r.apply(this,arguments);return c(this,a)}}function m(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&(e=s(e),null!==e););return e}function g(e,t,r){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var a=m(e,t);if(a){var i=Object.getOwnPropertyDescriptor(a,t);return i.get?i.get.call(r):i.value}},g(e,t,r||e)}// Polyfills
/**
   * https://github.com/mrdoob/eventdispatcher.js/
   */function f(){}/**
   * @author mrdoob / http://mrdoob.com/
   * @author philogb / http://blog.thejit.org/
   * @author egraether / http://egraether.com/
   * @author zz85 / http://www.lab4games.net/zz85/blog
   */function h(e,t){this.x=e||0,this.y=t||0}/**
   * @author alteredq / http://alteredqualia.com/
   * @author WestLangley / http://github.com/WestLangley
   * @author bhouston / http://clara.io
   * @author tschw
   */function y(){this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}function v(e,t,r,a,i,n,o,s,l,d){// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)
// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.
//
// Also changing the encoding after already used by a Material will not automatically make the Material
// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.
Object.defineProperty(this,"id",{value:ls++}),this.uuid=os.generateUUID(),this.name="",this.image=e===void 0?v.DEFAULT_IMAGE:e,this.mipmaps=[],this.mapping=t===void 0?v.DEFAULT_MAPPING:t,this.wrapS=r===void 0?1001:r,this.wrapT=a===void 0?1001:a,this.magFilter=i===void 0?1006:i,this.minFilter=n===void 0?1008:n,this.anisotropy=l===void 0?1:l,this.format=o===void 0?1023:o,this.internalFormat=null,this.type=s===void 0?1009:s,this.offset=new h(0,0),this.repeat=new h(1,1),this.center=new h(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new y,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=d===void 0?3000:d,this.version=0,this.onUpdate=null}/**
   * @author supereggbert / http://www.paulbrunt.co.uk/
   * @author philogb / http://blog.thejit.org/
   * @author mikael emtinger / http://gomo.se/
   * @author egraether / http://egraether.com/
   * @author WestLangley / http://github.com/WestLangley
   */function x(e,t,r,a){this.x=e||0,this.y=t||0,this.z=r||0,this.w=a===void 0?1:a}/**
   * @author szimek / https://github.com/szimek/
   * @author alteredq / http://alteredqualia.com/
   * @author Marius Kintel / https://github.com/kintel
   */ /*
   In options, we can specify:
   * Texture parameters for an auto-generated target texture
   * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers
  */function _(e,t,r){this.width=e,this.height=t,this.scissor=new x(0,0,e,t),this.scissorTest=!1,this.viewport=new x(0,0,e,t),r=r||{},this.texture=new v(void 0,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=r.generateMipmaps!==void 0&&r.generateMipmaps,this.texture.minFilter=r.minFilter===void 0?1006:r.minFilter,this.depthBuffer=!(r.depthBuffer!==void 0)||r.depthBuffer,this.stencilBuffer=!(r.stencilBuffer!==void 0)||r.stencilBuffer,this.depthTexture=r.depthTexture===void 0?null:r.depthTexture}/**
   * @author Mugen87 / https://github.com/Mugen87
   * @author Matt DesLauriers / @mattdesl
   */function b(e,t,r){_.call(this,e,t,r),this.samples=4}/**
   * @author mikael emtinger / http://gomo.se/
   * @author alteredq / http://alteredqualia.com/
   * @author WestLangley / http://github.com/WestLangley
   * @author bhouston / http://clara.io
   */function M(e,t,r,a){this._x=e||0,this._y=t||0,this._z=r||0,this._w=a===void 0?1:a}function S(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0}/**
   * @author mrdoob / http://mrdoob.com/
   * @author supereggbert / http://www.paulbrunt.co.uk/
   * @author philogb / http://blog.thejit.org/
   * @author jordi_ros / http://plattsoft.com
   * @author D1plo1d / http://github.com/D1plo1d
   * @author alteredq / http://alteredqualia.com/
   * @author mikael emtinger / http://gomo.se/
   * @author timknip / http://www.floorplanner.com/
   * @author bhouston / http://clara.io
   * @author WestLangley / http://github.com/WestLangley
   */function T(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}function E(e,t,r,a){this._x=e||0,this._y=t||0,this._z=r||0,this._order=a||E.DefaultOrder}/**
   * @author mrdoob / http://mrdoob.com/
   */function w(){this.mask=1}/**
   * @author mrdoob / http://mrdoob.com/
   * @author mikael emtinger / http://gomo.se/
   * @author alteredq / http://alteredqualia.com/
   * @author WestLangley / http://github.com/WestLangley
   * @author elephantatwork / www.elephantatwork.ch
   */function L(){Object.defineProperty(this,"id",{value:xs++}),this.uuid=os.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=L.DefaultUp.clone();var e=new S,t=new E,r=new M,a=new S(1,1,1);t._onChange(function(){r.setFromEuler(t,!1)}),r._onChange(function(){t.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:a},modelViewMatrix:{value:new T},normalMatrix:{value:new y}}),this.matrix=new T,this.matrixWorld=new T,this.matrixAutoUpdate=L.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new w,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}/**
   * @author mrdoob / http://mrdoob.com/
   */function A(){L.call(this),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}/**
   * @author bhouston / http://clara.io
   * @author WestLangley / http://github.com/WestLangley
   */function R(e,t){this.min=e===void 0?new S(+Infinity,+Infinity,+Infinity):e,this.max=t===void 0?new S(-Infinity,-Infinity,-Infinity):t}function P(e,t,a,n,o){var s,l;for(s=0,l=e.length-3;s<=l;s+=3){Ws.fromArray(e,s);// project the aabb onto the seperating axis
var d=o.x*zo(Ws.x)+o.y*zo(Ws.y)+o.z*zo(Ws.z),r=t.dot(Ws),p=a.dot(Ws),c=n.dot(Ws);// project all 3 vertices of the triangle onto the seperating axis
// actual test, basically see if either of the most extreme of the triangle points intersects r
if(No(-No(r,p,c),Io(r,p,c))>d)// points of the projected triangle are outside the projected half-length of the aabb
// the axis is seperating and we can exit
return!1}return!0}/**
   * @author bhouston / http://clara.io
   * @author mrdoob / http://mrdoob.com/
   */function C(e,t){this.center=e===void 0?new S:e,this.radius=t===void 0?0:t}/**
   * @author bhouston / http://clara.io
   */function D(e,t){this.origin=e===void 0?new S:e,this.direction=t===void 0?new S(0,0,-1):t}function I(e,t){// normal is assumed to be normalized
this.normal=e===void 0?new S(1,0,0):e,this.constant=t===void 0?0:t}function N(e,t,r){this.a=e===void 0?new S:e,this.b=t===void 0?new S:t,this.c=r===void 0?new S:r}function U(e,t,r){return void 0===t&&void 0===r?this.set(e):this.setRGB(e,t,r)}function B(e,r,a){return 0>a&&(a+=1),1<a&&(a-=1),a<1/6?e+6*(r-e)*a:a<1/2?r:a<2/3?e+6*(r-e)*(2/3-a):e}function F(e){return .04045>e?.0773993808*e:Do(.9478672986*e+.0521327014,2.4)}function O(e){return .0031308>e?12.92*e:1.055*Do(e,.41666)-.055}/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   */function G(e,t,r,a,i,n){this.a=e,this.b=t,this.c=r,this.normal=a&&a.isVector3?a:new S,this.vertexNormals=Array.isArray(a)?a:[],this.color=i&&i.isColor?i:new U,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=n===void 0?0:n}function H(){// override the renderer's default precision for this material
Object.defineProperty(this,"id",{value:fl++}),this.uuid=os.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   *
   * parameters = {
   *  color: <hex>,
   *  opacity: <float>,
   *  map: new THREE.Texture( <Image> ),
   *
   *  lightMap: new THREE.Texture( <Image> ),
   *  lightMapIntensity: <float>
   *
   *  aoMap: new THREE.Texture( <Image> ),
   *  aoMapIntensity: <float>
   *
   *  specularMap: new THREE.Texture( <Image> ),
   *
   *  alphaMap: new THREE.Texture( <Image> ),
   *
   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
   *  combine: THREE.Multiply,
   *  reflectivity: <float>,
   *  refractionRatio: <float>,
   *
   *  depthTest: <bool>,
   *  depthWrite: <bool>,
   *
   *  wireframe: <boolean>,
   *  wireframeLinewidth: <float>,
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>
   * }
   */function V(e){// emissive
H.call(this),this.type="MeshBasicMaterial",this.color=new U(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}function k(e,t,r){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e===void 0?0:e.length/t,this.normalized=!0===r,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}//
function W(e,t,r){k.call(this,new Int8Array(e),t,r)}function j(e,t,r){k.call(this,new Uint8Array(e),t,r)}function q(e,t,r){k.call(this,new Uint8ClampedArray(e),t,r)}function X(e,t,r){k.call(this,new Int16Array(e),t,r)}function Y(e,t,r){k.call(this,new Uint16Array(e),t,r)}function Z(e,t,r){k.call(this,new Int32Array(e),t,r)}function J(e,t,r){k.call(this,new Uint32Array(e),t,r)}function Q(e,t,r){k.call(this,new Float32Array(e),t,r)}function K(e,t,r){k.call(this,new Float64Array(e),t,r)}/**
   * @author mrdoob / http://mrdoob.com/
   */function $(){// this.lineDistances = [];
// update flags
this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}/**
   * @author mrdoob / http://mrdoob.com/
   */function ee(e){if(0===e.length)return-Infinity;for(var t=e[0],r=1,a=e.length;r<a;++r)e[r]>t&&(t=e[r]);return t}/**
   * @author alteredq / http://alteredqualia.com/
   * @author mrdoob / http://mrdoob.com/
   */function te(){Object.defineProperty(this,"id",{value:yl+=2}),this.uuid=os.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}function re(e,t){L.call(this),this.type="Mesh",this.geometry=e===void 0?new te:e,this.material=t===void 0?new V:t,this.updateMorphTargets()}function ae(e,t,r,a,i,n,o,s){var l;if(l=1===t.side?a.intersectTriangle(o,n,i,!0,s):a.intersectTriangle(i,n,o,2!==t.side,s),null===l)return null;Gl.copy(s),Gl.applyMatrix4(e.matrixWorld);var d=r.ray.origin.distanceTo(Gl);return d<r.near||d>r.far?null:{distance:d,point:Gl.clone(),object:e}}function ie(e,t,r,n,o,s,l,d,p,u,a,m){Ll.fromBufferAttribute(o,u),Al.fromBufferAttribute(o,a),Rl.fromBufferAttribute(o,m);var c=e.morphTargetInfluences;if(t.morphTargets&&s&&c){Il.set(0,0,0),Nl.set(0,0,0),zl.set(0,0,0);for(var g=0,f=s.length;g<f;g++){var y=c[g],v=s[g];0===y||(Pl.fromBufferAttribute(v,u),Cl.fromBufferAttribute(v,a),Dl.fromBufferAttribute(v,m),l?(Il.addScaledVector(Pl,y),Nl.addScaledVector(Cl,y),zl.addScaledVector(Dl,y)):(Il.addScaledVector(Pl.sub(Ll),y),Nl.addScaledVector(Cl.sub(Al),y),zl.addScaledVector(Dl.sub(Rl),y)))}Ll.add(Il),Al.add(Nl),Rl.add(zl)}var x=ae(e,t,r,n,Ll,Al,Rl,Ol);if(x){d&&(Ul.fromBufferAttribute(d,u),Bl.fromBufferAttribute(d,a),Fl.fromBufferAttribute(d,m),x.uv=N.getUV(Ol,Ll,Al,Rl,Ul,Bl,Fl,new h)),p&&(Ul.fromBufferAttribute(p,u),Bl.fromBufferAttribute(p,a),Fl.fromBufferAttribute(p,m),x.uv2=N.getUV(Ol,Ll,Al,Rl,Ul,Bl,Fl,new h));var _=new G(u,a,m);N.getNormal(Ll,Al,Rl,_.normal),x.face=_}return x}/**
   * @author mrdoob / http://mrdoob.com/
   * @author kile / http://kile.stravaganza.org/
   * @author alteredq / http://alteredqualia.com/
   * @author mikael emtinger / http://gomo.se/
   * @author zz85 / http://www.lab4games.net/zz85/blog
   * @author bhouston / http://clara.io
   */function ne(){// update flags
Object.defineProperty(this,"id",{value:Hl+=2}),this.uuid=os.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}/**
   * Uniform Utilities
   */function oe(e){var t={};for(var r in e)for(var a in t[r]={},e[r]){var i=e[r][a];t[r][a]=i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?i.clone():Array.isArray(i)?i.slice():i}return t}function se(e){for(var t={},r=0,a;r<e.length;r++)for(var i in a=oe(e[r]),a)t[i]=a[i];return t}// Legacy
/**
   * @author alteredq / http://alteredqualia.com/
   *
   * parameters = {
   *  defines: { "label" : "value" },
   *  uniforms: { "parameter1": { value: 1.0 }, "parameter2": { value2: 2 } },
   *
   *  fragmentShader: <string>,
   *  vertexShader: <string>,
   *
   *  wireframe: <boolean>,
   *  wireframeLinewidth: <float>,
   *
   *  lights: <bool>,
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>,
   *  morphNormals: <bool>
   * }
   */function le(e){// set to use scene fog
// set to use scene lights
// set to use user-defined clipping planes
// set to use skinning attribute streams
// set to use morph targets
// set to use morph normals
// When rendered geometry doesn't include these attributes but the material does,
// use these default values in WebGL. This avoids errors when buffer data is missing.
H.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,// set to use derivatives
fragDepth:!1,// set to use fragment depth values
drawBuffers:!1,// set to use draw buffers
shaderTextureLOD:!1// set to use shader texture LOD
},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}/**
   * @author mrdoob / http://mrdoob.com/
   * @author mikael emtinger / http://gomo.se/
   * @author WestLangley / http://github.com/WestLangley
  */function de(){L.call(this),this.type="Camera",this.matrixWorldInverse=new T,this.projectionMatrix=new T,this.projectionMatrixInverse=new T}/**
   * @author mrdoob / http://mrdoob.com/
   * @author greggman / http://games.greggman.com/
   * @author zz85 / http://www.lab4games.net/zz85/blog
   * @author tschw
   */function pe(e,t,r,a){// width of the film (default in millimeters)
// horizontal film offset (same unit as gauge)
de.call(this),this.type="PerspectiveCamera",this.fov=e===void 0?50:e,this.zoom=1,this.near=r===void 0?.1:r,this.far=a===void 0?2e3:a,this.focus=10,this.aspect=t===void 0?1:t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function ce(e,t,r,a){L.call(this),this.type="CubeCamera";var i=new pe(90,1,e,t);i.up.set(0,-1,0),i.lookAt(new S(1,0,0)),this.add(i);var n=new pe(90,1,e,t);n.up.set(0,-1,0),n.lookAt(new S(-1,0,0)),this.add(n);var o=new pe(90,1,e,t);o.up.set(0,0,1),o.lookAt(new S(0,1,0)),this.add(o);var s=new pe(90,1,e,t);s.up.set(0,0,-1),s.lookAt(new S(0,-1,0)),this.add(s);var l=new pe(90,1,e,t);l.up.set(0,-1,0),l.lookAt(new S(0,0,1)),this.add(l);var d=new pe(90,1,e,t);d.up.set(0,-1,0),d.lookAt(new S(0,0,-1)),this.add(d),a=a||{format:1022,magFilter:1006,minFilter:1006},this.renderTarget=new ue(r,a),this.renderTarget.texture.name="CubeCamera",this.update=function(e,t){null===this.parent&&this.updateMatrixWorld();var r=e.getRenderTarget(),a=this.renderTarget,p=a.texture.generateMipmaps;a.texture.generateMipmaps=!1,e.setRenderTarget(a,0),e.render(t,i),e.setRenderTarget(a,1),e.render(t,n),e.setRenderTarget(a,2),e.render(t,o),e.setRenderTarget(a,3),e.render(t,s),e.setRenderTarget(a,4),e.render(t,l),a.texture.generateMipmaps=p,e.setRenderTarget(a,5),e.render(t,d),e.setRenderTarget(r)},this.clear=function(e,t,r,a){for(var n=e.getRenderTarget(),o=this.renderTarget,s=0;6>s;s++)e.setRenderTarget(o,s),e.clear(t,r,a);e.setRenderTarget(n)}}/**
   * @author alteredq / http://alteredqualia.com
   * @author WestLangley / http://github.com/WestLangley
   */function ue(e,t,r){Co(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=r),_.call(this,e,e,t)}/**
   * @author alteredq / http://alteredqualia.com/
   */function me(e,t,r,a,i,n,o,s,l,d,p,c){v.call(this,null,n,o,s,l,d,a,i,p,c),this.image={data:e||null,width:t||1,height:r||1},this.magFilter=l===void 0?1003:l,this.minFilter=d===void 0?1003:d,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}function ge(e,t,r,a,i,n){this.planes=[e===void 0?new I:e,t===void 0?new I:t,r===void 0?new I:r,a===void 0?new I:a,i===void 0?new I:i,n===void 0?new I:n]}/**
   * @author mrdoob / http://mrdoob.com/
   */function fe(){function e(i,n){!1===r||(a(i,n),t.requestAnimationFrame(e))}var t=null,r=!1,a=null;return{start:function start(){!0===r||null===a||(t.requestAnimationFrame(e),r=!0)},stop:function stop(){r=!1},setAnimationLoop:function setAnimationLoop(e){a=e},setContext:function setContext(e){t=e}}}/**
   * @author mrdoob / http://mrdoob.com/
   */function he(e,t){function r(t,r){var a=t.array,i=t.usage,n=e.createBuffer();e.bindBuffer(r,n),e.bufferData(r,a,i),t.onUploadCallback();var o=5126;return a instanceof Float32Array?o=5126:a instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):a instanceof Uint16Array?o=5123:a instanceof Int16Array?o=5122:a instanceof Uint32Array?o=5125:a instanceof Int32Array?o=5124:a instanceof Int8Array?o=5120:a instanceof Uint8Array&&(o=5121),{buffer:n,type:o,bytesPerElement:a.BYTES_PER_ELEMENT,version:t.version}}function a(t,r,a){var n=r.array,o=r.updateRange;e.bindBuffer(a,t),-1===o.count?e.bufferSubData(a,0,n):(i?e.bufferSubData(a,o.offset*n.BYTES_PER_ELEMENT,n,o.offset,o.count):e.bufferSubData(a,o.offset*n.BYTES_PER_ELEMENT,n.subarray(o.offset,o.offset+o.count)),o.count=-1)}//
var i=t.isWebGL2,n=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),n.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);var r=n.get(t);r&&(e.deleteBuffer(r.buffer),n["delete"](t))},update:function(e,t){e.isInterleavedBufferAttribute&&(e=e.data);var i=n.get(e);i===void 0?n.set(e,r(e,t)):i.version<e.version&&(a(i.buffer,e,t),i.version=e.version)}}}/**
   * @author mrdoob / http://mrdoob.com/
   * @author Mugen87 / https://github.com/Mugen87
   */ // PlaneGeometry
function ye(e,t,r,a){ne.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:a},this.fromBufferGeometry(new ve(e,t,r,a)),this.mergeVertices()}// PlaneBufferGeometry
function ve(e,t,r,i){te.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:i},e=e||1,t=t||1;var n=e/2,o=t/2,s=Po(r)||1,l=Po(i)||1,p=s+1,u=e/s,m=t/l,g=[],f=[],h=[],v=[],_,M;// generate vertices, normals and uvs
for(M=0;M<l+1;M++){var S=M*m-o;for(_=0;_<p;_++){var y=_*u-n;f.push(y,-S,0),h.push(0,0,1),v.push(_/s),v.push(1-M/l)}}// indices
for(M=0;M<l;M++)for(_=0;_<s;_++){var x=_+p*M,a=_+p*(M+1),b=_+1+p*(M+1),c=_+1+p*M;// faces
g.push(x,a,c),g.push(a,b,c)}// build geometry
this.setIndex(g),this.setAttribute("position",new Q(f,3)),this.setAttribute("normal",new Q(h,3)),this.setAttribute("uv",new Q(v,2))}/**
   * @author mrdoob / http://mrdoob.com/
   */function xe(e,t,r,a){function i(t,a,i,m){var g=a.background,f=e.xr,h=f.getSession&&f.getSession();// Ignore background in AR
// TODO: Reconsider this.
if(h&&"additive"===h.environmentBlendMode&&(g=null),null===g?n(o,s):g&&g.isColor&&(n(g,1),m=!0),(e.autoClear||m)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),g&&(g.isCubeTexture||g.isWebGLCubeRenderTarget||306===g.mapping)){void 0===u&&(u=new re(new ql(1,1,1),new le({type:"BackgroundCubeMaterial",uniforms:oe(Kl.cube.uniforms),vertexShader:Kl.cube.vertexShader,fragmentShader:Kl.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function get(){return this.uniforms.envMap.value}}),r.update(u));var y=g.isWebGLCubeRenderTarget?g.texture:g;u.material.uniforms.envMap.value=y,u.material.uniforms.flipEnvMap.value=y.isCubeTexture?-1:1,(l!==g||d!==y.version||p!==e.toneMapping)&&(u.material.needsUpdate=!0,l=g,d=y.version,p=e.toneMapping),t.unshift(u,u.geometry,u.material,0,0,null)}else g&&g.isTexture&&(// push to the pre-sorted opaque render list
void 0===c&&(c=new re(new ve(2,2),new le({type:"BackgroundMaterial",uniforms:oe(Kl.background.uniforms),vertexShader:Kl.background.vertexShader,fragmentShader:Kl.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function get(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=g,!0===g.matrixAutoUpdate&&g.updateMatrix(),c.material.uniforms.uvTransform.value.copy(g.matrix),(l!==g||d!==g.version||p!==e.toneMapping)&&(c.material.needsUpdate=!0,l=g,d=g.version,p=e.toneMapping),t.unshift(c,c.geometry,c.material,0,0,null))}function n(e,r){t.buffers.color.setClear(e.r,e.g,e.b,r,a)}var o=new U(0),s=0,l=null,d=0,p=null,c,u;return{getClearColor:function getClearColor(){return o},setClearColor:function setClearColor(e,t){o.set(e),s=t===void 0?1:t,n(o,s)},getClearAlpha:function getClearAlpha(){return s},setClearAlpha:function setClearAlpha(e){s=e,n(o,s)},render:i}}/**
   * @author mrdoob / http://mrdoob.com/
   */function _e(e,t,r,a){function i(t,a){e.drawArrays(s,t,a),r.update(a,s)}function n(a,i,n,l){if(0!==l){var d,p;if(o)d=e,p="drawArraysInstanced";else if(d=t.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",null===d)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");d[p](s,i,n,l),r.update(n,s,l)}}//
var o=a.isWebGL2,s;this.setMode=function(e){s=e},this.render=i,this.renderInstances=n}/**
   * @author mrdoob / http://mrdoob.com/
   */function be(e,t,r){function a(){if(void 0!==l)return l;var r=t.get("EXT_texture_filter_anisotropic");return l=null===r?0:e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT),l}function i(t){if("highp"===t){if(0<e.getShaderPrecisionFormat(35633,36338).precision&&0<e.getShaderPrecisionFormat(35632,36338).precision)return"highp";t="mediump"}return"mediump"===t&&0<e.getShaderPrecisionFormat(35633,36337).precision&&0<e.getShaderPrecisionFormat(35632,36337).precision?"mediump":"lowp"}/* eslint-disable no-undef */var n="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext,o=r.precision===void 0?"highp":r.precision,s=i(o),l;s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);var d=!0===r.logarithmicDepthBuffer,p=e.getParameter(34930),c=e.getParameter(35660),u=e.getParameter(3379),m=e.getParameter(34076),g=e.getParameter(34921),f=e.getParameter(36347),h=e.getParameter(36348),y=e.getParameter(36349),v=0<c,x=n||!!t.get("OES_texture_float"),_=n?e.getParameter(36183):0;return{isWebGL2:n,getMaxAnisotropy:a,getMaxPrecision:i,precision:o,logarithmicDepthBuffer:d,maxTextures:p,maxVertexTextures:c,maxTextureSize:u,maxCubemapSize:m,maxAttributes:g,maxVertexUniforms:f,maxVaryings:h,maxFragmentUniforms:y,vertexTextures:v,floatFragmentTextures:x,floatVertexTextures:v&&x,maxSamples:_}}/**
   * @author tschw
   */function Me(){function e(){p.value!==a&&(p.value=a,p.needsUpdate=0<n),r.numPlanes=n,r.numIntersection=0}function t(e,t,a,n){var o=null===e?0:e.length,s=null;if(0!==o){if(s=p.value,!0!==n||null===s){var c=a+4*o,u=t.matrixWorldInverse;d.getNormalMatrix(u),(null===s||s.length<c)&&(s=new Float32Array(c));for(var m=0,g=a;m!==o;++m,g+=4)l.copy(e[m]).applyMatrix4(u,d),l.normal.toArray(s,g),s[g+3]=l.constant}p.value=s,p.needsUpdate=!0}return r.numPlanes=o,r.numIntersection=0,s}var r=this,a=null,n=0,o=!1,s=!1,l=new I,d=new y,p={value:null,needsUpdate:!1};this.uniform=p,this.numPlanes=0,this.numIntersection=0,this.init=function(e,r,i){var s=0!==e.length||r||// enable state of previous frame - the clipping code has to
// run another frame in order to reset the state:
0!==n||o;return o=r,a=t(e,i,0),n=e.length,s},this.beginShadows=function(){s=!0,t(null)},this.endShadows=function(){s=!1,e()},this.setState=function(r,l,d,c,u,m){if(!o||null===r||0===r.length||s&&!d)s?t(null):e();else{var g=s?0:n,f=4*g,h=u.clippingState||null;p.value=h,h=t(r,c,f,m);for(var y=0;y!=f;++y)h[y]=a[y];u.clippingState=h,this.numIntersection=l?this.numPlanes:0,this.numPlanes+=g}}}/**
   * @author mrdoob / http://mrdoob.com/
   */function Se(e){var t={};return{get:function get(r){if(void 0!==t[r])return t[r];var a;return a="WEBGL_depth_texture"===r?e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture"):"EXT_texture_filter_anisotropic"===r?e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic"):"WEBGL_compressed_texture_s3tc"===r?e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"):"WEBGL_compressed_texture_pvrtc"===r?e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"):e.getExtension(r),null===a&&console.warn("THREE.WebGLRenderer: "+r+" extension not supported."),t[r]=a,a}}}/**
   * @author mrdoob / http://mrdoob.com/
   */function Te(e,t,r){function a(e){var i=e.target,n=o.get(i);for(var l in null!==n.index&&t.remove(n.index),n.attributes)t.remove(n.attributes[l]);i.removeEventListener("dispose",a),o["delete"](i);var d=s.get(n);d&&(t.remove(d),s["delete"](n)),r.memory.geometries--}function i(e){var r=e.index,a=e.attributes;for(var n in null!==r&&t.update(r,34963),a)t.update(a[n],34962);// morph targets
var o=e.morphAttributes;for(var n in o)for(var s=o[n],d=0,p=s.length;d<p;d++)t.update(s[d],34962)}function n(e){var r=[],n=e.index,o=e.attributes.position,d=0;if(null!==n){var p=n.array;d=n.version;for(var u=0,m=p.length;u<m;u+=3){var g=p[u+0],f=p[u+1],h=p[u+2];r.push(g,f,f,h,h,g)}}else{var p=o.array;d=o.version;for(var u=0,m=p.length/3-1;u<m;u+=3){var g=u+0,f=u+1,h=u+2;r.push(g,f,f,h,h,g)}}var y=new(65535<ee(r)?J:Y)(r,1);y.version=d,t.update(y,34963);//
var v=s.get(e);//
v&&t.remove(v),s.set(e,y)}var o=new WeakMap,s=new WeakMap;return{get:function(e,t){var i=o.get(t);return i?i:(t.addEventListener("dispose",a),t.isBufferGeometry?i=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=new te().setFromObject(e)),i=t._bufferGeometry),o.set(t,i),r.memory.geometries++,i)},update:i,getWireframeAttribute:function(e){var t=s.get(e);if(t){var r=e.index;null!==r&&t.version<r.version&&n(e)}else n(e);return s.get(e)}}}/**
   * @author mrdoob / http://mrdoob.com/
   */function Ee(e,t,r,a){function i(t,a){e.drawElements(s,a,l,t*d),r.update(a,s)}function n(a,i,n,p){if(0!==p){var c,u;if(o)c=e,u="drawElementsInstanced";else if(c=t.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===c)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[u](s,n,l,i*d,p),r.update(n,s,p)}}//
var o=a.isWebGL2,s,l,d;this.setMode=function(e){s=e},this.setIndex=function(e){l=e.type,d=e.bytesPerElement},this.render=i,this.renderInstances=n}/**
   * @author Mugen87 / https://github.com/Mugen87
   */function we(){var e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,r,a){switch(a=a||1,e.calls++,r){case 4:e.triangles+=a*(t/3);break;case 1:e.lines+=a*(t/2);break;case 3:e.lines+=a*(t-1);break;case 2:e.lines+=a*t;break;case 0:e.points+=a*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r);}}}}/**
   * @author mrdoob / http://mrdoob.com/
   */function Le(e,t){return zo(t[1])-zo(e[1])}function Ae(e){function t(t,n,o,s){var l=t.morphTargetInfluences,d=l===void 0?0:l.length,p=r[n.id];// When object doesn't have morph target influences defined, we treat it as a 0-length array
// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences
if(p===void 0){p=[];for(var c=0;c<d;c++)p[c]=[c,0];r[n.id]=p}// Remove current morphAttributes
for(var u=o.morphTargets&&n.morphAttributes.position,m=o.morphNormals&&n.morphAttributes.normal,c=0,g;c<d;c++)g=p[c],0!==g[1]&&(u&&n.deleteAttribute("morphTarget"+c),m&&n.deleteAttribute("morphNormal"+c));// Collect influences
for(var c=0,g;c<d;c++)g=p[c],g[0]=c,g[1]=l[c];p.sort(Le);for(var f=0,c=0,g;8>c;c++){if(g=p[c],g){var h=g[0],y=g[1];if(y){u&&n.setAttribute("morphTarget"+c,u[h]),m&&n.setAttribute("morphNormal"+c,m[h]),a[c]=y,f+=y;continue}}a[c]=0}// GLSL shader uses formula baseinfluence * base + sum(target * influence)
// This allows us to switch between absolute morphs and relative morphs without changing shader code
// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)
var v=n.morphTargetsRelative?1:1-f;s.getUniforms().setValue(e,"morphTargetBaseInfluence",v),s.getUniforms().setValue(e,"morphTargetInfluences",a)}var r={},a=new Float32Array(8);return{update:t}}/**
   * @author mrdoob / http://mrdoob.com/
   */function Re(e,t,r,a){function i(e){var i=a.render.frame,o=e.geometry,s=t.get(e,o);return n.get(s)!==i&&(o.isGeometry&&s.updateFromObject(e),t.update(s),n.set(s,i)),e.isInstancedMesh&&r.update(e.instanceMatrix,34962),s}var n=new WeakMap;return{update:i,dispose:function(){n=new WeakMap}}}/**
   * @author mrdoob / http://mrdoob.com/
   */function Pe(e,t,r,a,i,n,o,s,l,d){e=e===void 0?[]:e,t=t===void 0?301:t,o=o===void 0?1022:o,v.call(this,e,t,r,a,i,n,o,s,l,d),this.flipY=!1}/**
   * @author Takahiro https://github.com/takahirox
   */function Ce(e,t,r,a){v.call(this,null),this.image={data:e||null,width:t||1,height:r||1,depth:a||1},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}/**
   * @author Artur Trzesiok
   */function De(e,t,r,a){// We're going to add .setXXX() methods for setting properties later.
// Users can still set in DataTexture3D directly.
//
//	var texture = new THREE.DataTexture3D( data, width, height, depth );
// 	texture.anisotropy = 16;
//
// See #14839
v.call(this,null),this.image={data:e||null,width:t||1,height:r||1,depth:a||1},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}// Flattening for arrays of vectors and matrices
function Ie(e,t,a){var o=e[0];if(0>=o||0<o)return e;// unoptimized: ! isNaN( firstElem )
// see http://jacksondunstan.com/articles/983
var s=t*a,n=ad[s];if(void 0===n&&(n=new Float32Array(s),ad[s]=n),0!==t){o.toArray(n,0);for(var l=1,d=0;l!==t;++l)d+=a,e[l].toArray(n,d)}return n}function Ne(e,t){if(e.length!==t.length)return!1;for(var r=0,a=e.length;r<a;r++)if(e[r]!==t[r])return!1;return!0}function ze(e,t){for(var r=0,a=t.length;r<a;r++)e[r]=t[r]}// Texture unit allocation
function Ue(e,t){var a=id[t];a===void 0&&(a=new Int32Array(t),id[t]=a);for(var n=0;n!==t;++n)a[n]=e.allocateTextureUnit();return a}// --- Setters ---
// Note: Defining these methods externally, because they come in a bunch
// and this way their names minify.
// Single scalar
function Be(e,t){var r=this.cache;r[0]===t||(e.uniform1f(this.addr,t),r[0]=t)}// Single float vector (from flat array or THREE.VectorN)
function Fe(e,t){var r=this.cache;if(t.x!==void 0)(r[0]!==t.x||r[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y);else{if(Ne(r,t))return;e.uniform2fv(this.addr,t),ze(r,t)}}function Oe(e,t){var r=this.cache;if(t.x!==void 0)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z);else if(t.r!==void 0)(r[0]!==t.r||r[1]!==t.g||r[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),r[0]=t.r,r[1]=t.g,r[2]=t.b);else{if(Ne(r,t))return;e.uniform3fv(this.addr,t),ze(r,t)}}function Ge(e,t){var r=this.cache;if(t.x!==void 0)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z||r[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w);else{if(Ne(r,t))return;e.uniform4fv(this.addr,t),ze(r,t)}}// Single matrix (from flat array or MatrixN)
function He(e,t){var r=this.cache,a=t.elements;if(a===void 0){if(Ne(r,t))return;e.uniformMatrix2fv(this.addr,!1,t),ze(r,t)}else{if(Ne(r,a))return;sd.set(a),e.uniformMatrix2fv(this.addr,!1,sd),ze(r,a)}}function Ve(e,t){var r=this.cache,a=t.elements;if(a===void 0){if(Ne(r,t))return;e.uniformMatrix3fv(this.addr,!1,t),ze(r,t)}else{if(Ne(r,a))return;od.set(a),e.uniformMatrix3fv(this.addr,!1,od),ze(r,a)}}function ke(e,t){var r=this.cache,a=t.elements;if(a===void 0){if(Ne(r,t))return;e.uniformMatrix4fv(this.addr,!1,t),ze(r,t)}else{if(Ne(r,a))return;nd.set(a),e.uniformMatrix4fv(this.addr,!1,nd),ze(r,a)}}// Single texture (2D / Cube)
function We(e,t,r){var a=this.cache,i=r.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),r.safeSetTexture2D(t||$l,i)}function je(e,t,r){var a=this.cache,i=r.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),r.setTexture2DArray(t||ed,i)}function qe(e,t,r){var a=this.cache,i=r.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),r.setTexture3D(t||td,i)}function Xe(e,t,r){var a=this.cache,i=r.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),r.safeSetTextureCube(t||rd,i)}// Integer / Boolean vectors or arrays thereof (always flat arrays)
function Ye(e,t){var r=this.cache;r[0]===t||(e.uniform1i(this.addr,t),r[0]=t)}function Ze(e,t){var r=this.cache;Ne(r,t)||(e.uniform2iv(this.addr,t),ze(r,t))}function Je(e,t){var r=this.cache;Ne(r,t)||(e.uniform3iv(this.addr,t),ze(r,t))}function Qe(e,t){var r=this.cache;Ne(r,t)||(e.uniform4iv(this.addr,t),ze(r,t))}// uint
function Ke(e,t){var r=this.cache;r[0]===t||(e.uniform1ui(this.addr,t),r[0]=t)}// Helper to pick the right setter for the singular case
function $e(e){return 5126===e?Be:35664===e?Fe:35665===e?Oe:35666===e?Ge:35674===e?He:35675===e?Ve:35676===e?ke:5124===e||35670===e?Ye:35667===e||35671===e?Ze:35668===e||35672===e?Je:35669===e||35673===e?Qe:5125===e?Ke:35678===e||36198===e||36298===e||36306===e||35682===e?We:35679===e||36299===e||36307===e?qe:35680===e||36300===e||36308===e||36293===e?Xe:36289===e||36303===e||36311===e||36292===e?je:void 0}// Array of scalars
function et(e,t){e.uniform1fv(this.addr,t)}// Integer / Boolean vectors or arrays thereof (always flat arrays)
function tt(e,t){e.uniform1iv(this.addr,t)}function rt(e,t){e.uniform2iv(this.addr,t)}function at(e,t){e.uniform3iv(this.addr,t)}function it(e,t){e.uniform4iv(this.addr,t)}// Array of vectors (flat or from THREE classes)
function nt(e,t){var r=Ie(t,this.size,2);e.uniform2fv(this.addr,r)}function ot(e,t){var r=Ie(t,this.size,3);e.uniform3fv(this.addr,r)}function st(e,t){var r=Ie(t,this.size,4);e.uniform4fv(this.addr,r)}// Array of matrices (flat or from THREE clases)
function lt(e,t){var r=Ie(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,r)}function dt(e,t){var r=Ie(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,r)}function pt(e,t){var r=Ie(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,r)}// Array of textures (2D / Cube)
function ct(e,t,r){var a=t.length,n=Ue(r,a);e.uniform1iv(this.addr,n);for(var o=0;o!==a;++o)r.safeSetTexture2D(t[o]||$l,n[o])}function ut(e,t,r){var a=t.length,n=Ue(r,a);e.uniform1iv(this.addr,n);for(var o=0;o!==a;++o)r.safeSetTextureCube(t[o]||rd,n[o])}// Helper to pick the right setter for a pure (bottom-level) array
function mt(e){return 5126===e?et:35664===e?nt:35665===e?ot:35666===e?st:35674===e?lt:35675===e?dt:35676===e?pt:5124===e||35670===e?tt:35667===e||35671===e?rt:35668===e||35672===e?at:35669===e||35673===e?it:35678===e||36198===e||36298===e||36306===e||35682===e?ct:35680===e||36300===e||36308===e||36293===e?ut:void 0}// --- Uniform Classes ---
function gt(e,t,r){this.id=e,this.addr=r,this.cache=[],this.setValue=$e(t.type)}function ft(e,t,r){this.id=e,this.addr=r,this.cache=[],this.size=t.size,this.setValue=mt(t.type)}function ht(e){this.id=e,this.seq=[],this.map={}}// extracts
// 	- the identifier (member name or array index)
//  - followed by an optional right bracket (found when array index)
//  - followed by an optional left bracket or dot (type of subscript)
//
// Note: These portions can be read in a non-overlapping fashion and
// allow straightforward parsing of the hierarchy that WebGL encodes
// in the uniform names.
function yt(e,t){e.seq.push(t),e.map[t.id]=t}function vt(e,t,r){var a=e.name,i=a.length;// reset RegExp object, because of the early exit of a previous run
for(ld.lastIndex=0;;){var n=ld.exec(a),o=ld.lastIndex,s=n[1],l="]"===n[2],d=n[3];// convert to integer
if(l&&(s|=0),void 0===d||"["===d&&o+2===i){yt(r,void 0===d?new gt(s,e,t):new ft(s,e,t));break}else{// step into inner node / create it in case it doesn't exist
var p=r.map,c=p[s];void 0===c&&(c=new ht(s),yt(r,c)),r=c}}}// Root Container
function xt(e,t){this.seq=[],this.map={};for(var r=e.getProgramParameter(t,35718),a=0;a<r;++a){var n=e.getActiveUniform(t,a),o=e.getUniformLocation(t,n.name);vt(n,o,this)}}/**
   * @author mrdoob / http://mrdoob.com/
   */function _t(e,t,r){var a=e.createShader(t);return e.shaderSource(a,r),e.compileShader(a),a}/**
   * @author mrdoob / http://mrdoob.com/
   */function bt(e){for(var t=e.split("\n"),r=0;r<t.length;r++)t[r]=r+1+": "+t[r];return t.join("\n")}function Mt(e){switch(e){case 3000:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:throw new Error("unsupported encoding: "+e);}}function St(e,t,r){var a=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();if(a&&""===i)return"";// --enable-privileged-webgl-extension
// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );
var n=e.getShaderSource(t);return"THREE.WebGLShader: gl.getShaderInfoLog() "+r+"\n"+i+bt(n)}function Tt(e,t){var r=Mt(t);return"vec4 "+e+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function Et(e,t){var r=Mt(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+r[0]+r[1]+"; }"}function wt(e,t){var r;switch(t){case 1:r="Linear";break;case 2:r="Reinhard";break;case 3:r="Uncharted2";break;case 4:r="OptimizedCineon";break;case 5:r="ACESFilmic";break;default:throw new Error("unsupported toneMapping: "+t);}return"vec3 "+e+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}function Lt(e){var t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(Pt).join("\n")}function At(e){var t=[];for(var r in e){var a=e[r];!1===a||t.push("#define "+r+" "+a)}return t.join("\n")}function Rt(e,t){for(var r={},a=e.getProgramParameter(t,35721),n=0;n<a;n++){var o=e.getActiveAttrib(t,n),s=o.name;// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );
r[s]=e.getAttribLocation(t,s)}return r}function Pt(e){return""!==e}function Ct(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Dt(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}// Resolve Includes
function It(e){return e.replace(pd,Nt)}function Nt(e,t){var r=Ql[t];if(r===void 0)throw new Error("Can not resolve #include <"+t+">");return It(r)}// Unroll Loops
function zt(e){return e.replace(ud,Bt).replace(cd,Ut)}function Ut(e,t,r,a){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Bt(e,t,r,a)}function Bt(e,t,r,a){for(var n="",o=parseInt(t);o<parseInt(r);o++)n+=a.replace(/\[ i \]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return n}//
function Ft(e){var t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Ot(e){var t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}function Gt(e){var t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case 301:case 302:t="ENVMAP_TYPE_CUBE";break;case 306:case 307:t="ENVMAP_TYPE_CUBE_UV";break;case 303:case 304:t="ENVMAP_TYPE_EQUIREC";break;case 305:t="ENVMAP_TYPE_SPHERE";}return t}function Ht(e){var t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case 302:case 304:t="ENVMAP_MODE_REFRACTION";}return t}function Vt(e){var t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD";}return t}function kt(e,t,r){var a=e.getContext(),i=r.defines,n=r.vertexShader,o=r.fragmentShader,s=Ot(r),l=Gt(r),d=Ht(r),p=Vt(r),c=0<e.gammaFactor?e.gammaFactor:1,u=r.isWebGL2?"":Lt(r),m=At(i),g=a.createProgram(),f,h;if(r.isRawShaderMaterial?(f=[m].filter(Pt).join("\n"),0<f.length&&(f+="\n"),h=[u,m].filter(Pt).join("\n"),0<h.length&&(h+="\n")):(f=[Ft(r),"#define SHADER_NAME "+r.shaderName,m,r.instancing?"#define USE_INSTANCING":"",r.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+c,"#define MAX_BONES "+r.maxBones,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+d:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.displacementMap&&r.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.useVertexTexture?"#define BONE_TEXTURE":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&!1===r.flatShading?"#define USE_MORPHNORMALS":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+s:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Pt).join("\n"),h=[u,Ft(r),"#define SHADER_NAME "+r.shaderName,m,r.alphaTest?"#define ALPHATEST "+r.alphaTest+(r.alphaTest%1?"":".0"):"",// add '.0' if integer
"#define GAMMA_FACTOR "+c,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.matcap?"#define USE_MATCAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+l:"",r.envMap?"#define "+d:"",r.envMap?"#define "+p:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.sheen?"#define USE_SHEEN":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+s:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(r.extensionShaderTextureLOD||r.envMap)&&r.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0===r.toneMapping?"":"#define TONE_MAPPING",0===r.toneMapping?"":Ql.tonemapping_pars_fragment,// this code is required here because it is used by the toneMapping() function defined below
0===r.toneMapping?"":wt("toneMapping",r.toneMapping),r.dithering?"#define DITHERING":"",r.outputEncoding||r.mapEncoding||r.matcapEncoding||r.envMapEncoding||r.emissiveMapEncoding||r.lightMapEncoding?Ql.encodings_pars_fragment:"",// this code is required here because it is used by the various encoding/decoding function defined below
r.mapEncoding?Tt("mapTexelToLinear",r.mapEncoding):"",r.matcapEncoding?Tt("matcapTexelToLinear",r.matcapEncoding):"",r.envMapEncoding?Tt("envMapTexelToLinear",r.envMapEncoding):"",r.emissiveMapEncoding?Tt("emissiveMapTexelToLinear",r.emissiveMapEncoding):"",r.lightMapEncoding?Tt("lightMapTexelToLinear",r.lightMapEncoding):"",r.outputEncoding?Et("linearToOutputTexel",r.outputEncoding):"",r.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(Pt).join("\n")),n=It(n),n=Ct(n,r),n=Dt(n,r),o=It(o),o=Ct(o,r),o=Dt(o,r),n=zt(n),o=zt(o),r.isWebGL2&&!r.isRawShaderMaterial){var y=!1,v=/^\s*#version\s+300\s+es\s*\n/;r.isShaderMaterial&&null!==n.match(v)&&null!==o.match(v)&&(y=!0,n=n.replace(v,""),o=o.replace(v,"")),f="#version 300 es\n\n#define attribute in\n#define varying out\n#define texture2D texture\n"+f,h=["#version 300 es\n","#define varying in",y?"":"out highp vec4 pc_fragColor;",y?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+h}var x=f+n,_=h+o,b=_t(a,35633,x),M=_t(a,35632,_);// check for link errors
if(a.attachShader(g,b),a.attachShader(g,M),void 0===r.index0AttributeName?!0===r.morphTargets&&a.bindAttribLocation(g,0,"position"):a.bindAttribLocation(g,0,r.index0AttributeName),a.linkProgram(g),e.debug.checkShaderErrors){var S=a.getProgramInfoLog(g).trim(),T=a.getShaderInfoLog(b).trim(),E=a.getShaderInfoLog(M).trim(),w=!0,L=!0;if(!1===a.getProgramParameter(g,35714)){w=!1;var A=St(a,b,"vertex"),R=St(a,M,"fragment");console.error("THREE.WebGLProgram: shader error: ",a.getError(),"35715",a.getProgramParameter(g,35715),"gl.getProgramInfoLog",S,A,R)}else""===S?(""===T||""===E)&&(L=!1):console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",S);L&&(this.diagnostics={runnable:w,programLog:S,vertexShader:{log:T,prefix:f},fragmentShader:{log:E,prefix:h}})}// clean up
a.detachShader(g,b),a.detachShader(g,M),a.deleteShader(b),a.deleteShader(M);// set up caching for uniform locations
var P;this.getUniforms=function(){return void 0===P&&(P=new xt(a,g)),P};// set up caching for attribute locations
var C;return this.getAttributes=function(){return void 0===C&&(C=Rt(a,g)),C},this.destroy=function(){a.deleteProgram(g),this.program=void 0},this.name=r.shaderName,this.id=dd++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=b,this.fragmentShader=M,this}/**
   * @author mrdoob / http://mrdoob.com/
   */function Wt(e,t,r){function a(e,t){var r;if(t){var a=Kl[t];r={name:e.type,uniforms:Xl.clone(a.uniforms),vertexShader:a.vertexShader,fragmentShader:a.fragmentShader}}else r={name:e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};return r}function i(e){var t=e.skeleton,r=t.bones;if(d)return 1024;// default for when object is not specified
// ( for example when prebuilding shader to be used with multiple objects )
//
//  - leave some extra space for other uniforms
//  - limit here is ANGLE's 254 max uniform vectors
//    (up to 54 should be safe)
var a=Po((c-20)/4),i=Io(a,r.length);return i<r.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+r.length+" bones. This GPU supports "+i+"."),0):i}function n(e){var t;return e?e.isTexture?t=e.encoding:e.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=3000,t}var o=[],s=r.isWebGL2,l=r.logarithmicDepthBuffer,d=r.floatVertexTextures,p=r.precision,c=r.maxVertexUniforms,u=r.vertexTextures,m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},g=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];// Exposed for resource monitoring & error feedback via renderer.info:
this.getParameters=function(o,c,g,f,h,y,v){var x=f.fog,_=o.isMeshStandardMaterial?f.environment:null,b=o.envMap||_,M=m[o.type],S=v.isSkinnedMesh?i(v):0;null!==o.precision&&(p=r.getMaxPrecision(o.precision),p!==o.precision&&console.warn("THREE.WebGLProgram.getParameters:",o.precision,"not supported, using",p,"instead."));var T=a(o,M);o.onBeforeCompile(T,e);var E=e.getRenderTarget(),w={isWebGL2:s,shaderID:M,shaderName:T.name,uniforms:T.uniforms,vertexShader:T.vertexShader,fragmentShader:T.fragmentShader,defines:o.defines,isRawShaderMaterial:o.isRawShaderMaterial,isShaderMaterial:o.isShaderMaterial,precision:p,instancing:!0===v.isInstancedMesh,supportsVertexTextures:u,outputEncoding:null===E?e.outputEncoding:n(E.texture),map:!!o.map,mapEncoding:n(o.map),matcap:!!o.matcap,matcapEncoding:n(o.matcap),envMap:!!b,envMapMode:b&&b.mapping,envMapEncoding:n(b),envMapCubeUV:!!b&&(b.mapping===306||b.mapping===307),lightMap:!!o.lightMap,lightMapEncoding:n(o.lightMap),aoMap:!!o.aoMap,emissiveMap:!!o.emissiveMap,emissiveMapEncoding:n(o.emissiveMap),bumpMap:!!o.bumpMap,normalMap:!!o.normalMap,objectSpaceNormalMap:o.normalMapType===1,tangentSpaceNormalMap:o.normalMapType===0,clearcoatMap:!!o.clearcoatMap,clearcoatRoughnessMap:!!o.clearcoatRoughnessMap,clearcoatNormalMap:!!o.clearcoatNormalMap,displacementMap:!!o.displacementMap,roughnessMap:!!o.roughnessMap,metalnessMap:!!o.metalnessMap,specularMap:!!o.specularMap,alphaMap:!!o.alphaMap,gradientMap:!!o.gradientMap,sheen:!!o.sheen,combine:o.combine,vertexTangents:o.normalMap&&o.vertexTangents,vertexColors:o.vertexColors,vertexUvs:!!o.map||!!o.bumpMap||!!o.normalMap||!!o.specularMap||!!o.alphaMap||!!o.emissiveMap||!!o.roughnessMap||!!o.metalnessMap||!!o.clearcoatMap||!!o.clearcoatRoughnessMap||!!o.clearcoatNormalMap||!!o.displacementMap,uvsVertexOnly:!o.map&&!o.bumpMap&&!o.normalMap&&!o.specularMap&&!o.alphaMap&&!o.emissiveMap&&!o.roughnessMap&&!o.metalnessMap&&!o.clearcoatNormalMap&&!!o.displacementMap,fog:!!x,useFog:o.fog,fogExp2:x&&x.isFogExp2,flatShading:o.flatShading,sizeAttenuation:o.sizeAttenuation,logarithmicDepthBuffer:l,skinning:o.skinning&&0<S,maxBones:S,useVertexTexture:d,morphTargets:o.morphTargets,morphNormals:o.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:c.directional.length,numPointLights:c.point.length,numSpotLights:c.spot.length,numRectAreaLights:c.rectArea.length,numHemiLights:c.hemi.length,numDirLightShadows:c.directionalShadowMap.length,numPointLightShadows:c.pointShadowMap.length,numSpotLightShadows:c.spotShadowMap.length,numClippingPlanes:h,numClipIntersection:y,dithering:o.dithering,shadowMapEnabled:e.shadowMap.enabled&&0<g.length,shadowMapType:e.shadowMap.type,toneMapping:o.toneMapped?e.toneMapping:0,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:o.premultipliedAlpha,alphaTest:o.alphaTest,doubleSided:o.side===2,flipSided:o.side===1,depthPacking:o.depthPacking!==void 0&&o.depthPacking,index0AttributeName:o.index0AttributeName,extensionDerivatives:o.extensions&&o.extensions.derivatives,extensionFragDepth:o.extensions&&o.extensions.fragDepth,extensionDrawBuffers:o.extensions&&o.extensions.drawBuffers,extensionShaderTextureLOD:o.extensions&&o.extensions.shaderTextureLOD,rendererExtensionFragDepth:s||null!==t.get("EXT_frag_depth"),rendererExtensionDrawBuffers:s||null!==t.get("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:s||null!==t.get("EXT_shader_texture_lod"),onBeforeCompile:o.onBeforeCompile};return w},this.getProgramCacheKey=function(t){var r=[];if(t.shaderID?r.push(t.shaderID):(r.push(t.fragmentShader),r.push(t.vertexShader)),void 0!==t.defines)for(var a in t.defines)r.push(a),r.push(t.defines[a]);if(void 0===t.isRawShaderMaterial){for(var n=0;n<g.length;n++)r.push(t[g[n]]);r.push(e.outputEncoding),r.push(e.gammaFactor)}return r.push(t.onBeforeCompile.toString()),r.join()},this.acquireProgram=function(t,r){// Check if code has been already compiled
for(var a=0,i=o.length,n,s;a<i;a++)if(s=o[a],s.cacheKey===r){n=s,++n.usedTimes;break}return void 0===n&&(n=new kt(e,r,t),o.push(n)),n},this.releaseProgram=function(e){if(0==--e.usedTimes){// Remove from unordered set
var t=o.indexOf(e);// Free WebGL resources
o[t]=o[o.length-1],o.pop(),e.destroy()}},this.programs=o}/**
   * @author fordacious / fordacious.github.io
   */function jt(){function e(e){var t=a.get(e);return void 0===t&&(t={},a.set(e,t)),t}function t(e){a["delete"](e)}function r(e,t,r){a.get(e)[t]=r}var a=new WeakMap;return{get:e,remove:t,update:r,dispose:function(){a=new WeakMap}}}/**
   * @author mrdoob / http://mrdoob.com/
   */function qt(e,t){return e.groupOrder===t.groupOrder?e.renderOrder===t.renderOrder?e.program===t.program?e.material.id===t.material.id?e.z===t.z?e.id-t.id:e.z-t.z:e.material.id-t.material.id:e.program.id-t.program.id:e.renderOrder-t.renderOrder:e.groupOrder-t.groupOrder}function Xt(e,t){return e.groupOrder===t.groupOrder?e.renderOrder===t.renderOrder?e.z===t.z?e.id-t.id:t.z-e.z:e.renderOrder-t.renderOrder:e.groupOrder-t.groupOrder}function Yt(){function e(e,t,i,n,s,l){var d=r[a];return void 0===d?(d={id:e.id,object:e,geometry:t,material:i,program:i.program||o,groupOrder:n,renderOrder:e.renderOrder,z:s,group:l},r[a]=d):(d.id=e.id,d.object=e,d.geometry=t,d.material=i,d.program=i.program||o,d.groupOrder=n,d.renderOrder=e.renderOrder,d.z=s,d.group=l),a++,d}function t(){// Clear references from inactive renderItems in the list
for(var e=a,t=r.length,n;e<t&&(n=r[e],null!==n.id);e++)n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}var r=[],a=0,i=[],n=[],o={id:-1};return{opaque:i,transparent:n,init:function(){a=0,i.length=0,n.length=0},push:function(t,r,a,o,s,l){var d=e(t,r,a,o,s,l);(!0===a.transparent?n:i).push(d)},unshift:function(t,r,a,o,s,l){var d=e(t,r,a,o,s,l);(!0===a.transparent?n:i).unshift(d)},finish:t,sort:function(e,t){1<i.length&&i.sort(e||qt),1<n.length&&n.sort(t||Xt)}}}function Zt(){function e(t){var a=t.target;a.removeEventListener("dispose",e),r["delete"](a)}function t(t,a){var i=r.get(t),n;return void 0===i?(n=new Yt,r.set(t,new WeakMap),r.get(t).set(a,n),t.addEventListener("dispose",e)):(n=i.get(a),void 0===n&&(n=new Yt,i.set(a,n))),n}var r=new WeakMap;return{get:t,dispose:function(){r=new WeakMap}}}/**
   * @author mrdoob / http://mrdoob.com/
   */function Jt(){var e={};return{get:function get(t){if(void 0!==e[t.id])return e[t.id];var r;switch(t.type){case"DirectionalLight":r={direction:new S,color:new U};break;case"SpotLight":r={position:new S,direction:new S,color:new U,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":r={position:new S,color:new U,distance:0,decay:0};break;case"HemisphereLight":r={direction:new S,skyColor:new U,groundColor:new U};break;case"RectAreaLight":r={color:new U,position:new S,halfWidth:new S,halfHeight:new S};}return e[t.id]=r,r}}}function Qt(){var e={};return{get:function get(t){if(void 0!==e[t.id])return e[t.id];var r;switch(t.type){case"DirectionalLight":r={shadowBias:0,shadowRadius:1,shadowMapSize:new h};break;case"SpotLight":r={shadowBias:0,shadowRadius:1,shadowMapSize:new h};break;case"PointLight":r={shadowBias:0,shadowRadius:1,shadowMapSize:new h,shadowCameraNear:1,shadowCameraFar:1e3};// TODO (abelnation): set RectAreaLight shadow uniforms
}return e[t.id]=r,r}}}function Kt(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function $t(){function e(e,n,d){for(var p=0,c=0,u=0,m=0;9>m;m++)a.probe[m].set(0,0,0);var f=0,h=0,y=0,v=0,x=0,_=0,M=0,S=0,T=d.matrixWorldInverse;e.sort(Kt);for(var m=0,E=e.length;m<E;m++){var w=e[m],L=w.color,A=w.intensity,R=w.distance,P=w.shadow&&w.shadow.map?w.shadow.map.texture:null;if(w.isAmbientLight)p+=L.r*A,c+=L.g*A,u+=L.b*A;else if(w.isLightProbe)for(var C=0;9>C;C++)a.probe[C].addScaledVector(w.sh.coefficients[C],A);else if(w.isDirectionalLight){var D=t.get(w);if(D.color.copy(w.color).multiplyScalar(w.intensity),D.direction.setFromMatrixPosition(w.matrixWorld),o.setFromMatrixPosition(w.target.matrixWorld),D.direction.sub(o),D.direction.transformDirection(T),w.castShadow){var I=w.shadow,N=r.get(w);N.shadowBias=I.bias,N.shadowRadius=I.radius,N.shadowMapSize=I.mapSize,a.directionalShadow[f]=N,a.directionalShadowMap[f]=P,a.directionalShadowMatrix[f]=w.shadow.matrix,_++}a.directional[f]=D,f++}else if(w.isSpotLight){var D=t.get(w);if(D.position.setFromMatrixPosition(w.matrixWorld),D.position.applyMatrix4(T),D.color.copy(L).multiplyScalar(A),D.distance=R,D.direction.setFromMatrixPosition(w.matrixWorld),o.setFromMatrixPosition(w.target.matrixWorld),D.direction.sub(o),D.direction.transformDirection(T),D.coneCos=Ro(w.angle),D.penumbraCos=Ro(w.angle*(1-w.penumbra)),D.decay=w.decay,w.castShadow){var I=w.shadow,N=r.get(w);N.shadowBias=I.bias,N.shadowRadius=I.radius,N.shadowMapSize=I.mapSize,a.spotShadow[y]=N,a.spotShadowMap[y]=P,a.spotShadowMatrix[y]=w.shadow.matrix,S++}a.spot[y]=D,y++}else if(w.isRectAreaLight){var D=t.get(w);// (a) intensity is the total visible light emitted
//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );
// (b) intensity is the brightness of the light
D.color.copy(L).multiplyScalar(A),D.position.setFromMatrixPosition(w.matrixWorld),D.position.applyMatrix4(T),l.identity(),s.copy(w.matrixWorld),s.premultiply(T),l.extractRotation(s),D.halfWidth.set(.5*w.width,0,0),D.halfHeight.set(0,.5*w.height,0),D.halfWidth.applyMatrix4(l),D.halfHeight.applyMatrix4(l),a.rectArea[v]=D,v++}else if(w.isPointLight){var D=t.get(w);if(D.position.setFromMatrixPosition(w.matrixWorld),D.position.applyMatrix4(T),D.color.copy(w.color).multiplyScalar(w.intensity),D.distance=w.distance,D.decay=w.decay,w.castShadow){var I=w.shadow,N=r.get(w);N.shadowBias=I.bias,N.shadowRadius=I.radius,N.shadowMapSize=I.mapSize,N.shadowCameraNear=I.camera.near,N.shadowCameraFar=I.camera.far,a.pointShadow[h]=N,a.pointShadowMap[h]=P,a.pointShadowMatrix[h]=w.shadow.matrix,M++}a.point[h]=D,h++}else if(w.isHemisphereLight){var D=t.get(w);D.direction.setFromMatrixPosition(w.matrixWorld),D.direction.transformDirection(T),D.direction.normalize(),D.skyColor.copy(w.color).multiplyScalar(A),D.groundColor.copy(w.groundColor).multiplyScalar(A),a.hemi[x]=D,x++}}a.ambient[0]=p,a.ambient[1]=c,a.ambient[2]=u;var z=a.hash;(z.directionalLength!==f||z.pointLength!==h||z.spotLength!==y||z.rectAreaLength!==v||z.hemiLength!==x||z.numDirectionalShadows!==_||z.numPointShadows!==M||z.numSpotShadows!==S)&&(a.directional.length=f,a.spot.length=y,a.rectArea.length=v,a.point.length=h,a.hemi.length=x,a.directionalShadow.length=_,a.directionalShadowMap.length=_,a.pointShadow.length=M,a.pointShadowMap.length=M,a.spotShadow.length=S,a.spotShadowMap.length=S,a.directionalShadowMatrix.length=_,a.pointShadowMatrix.length=M,a.spotShadowMatrix.length=S,z.directionalLength=f,z.pointLength=h,z.spotLength=y,z.rectAreaLength=v,z.hemiLength=x,z.numDirectionalShadows=_,z.numPointShadows=M,z.numSpotShadows=S,a.version=md++)}for(var t=new Jt,r=Qt(),a={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},n=0;9>n;n++)a.probe.push(new S);var o=new S,s=new T,l=new T;return{setup:e,state:a}}/**
   * @author Mugen87 / https://github.com/Mugen87
   */function er(){var e=new $t,t=[],r=[];return{init:function(){t.length=0,r.length=0},state:{lightsArray:t,shadowsArray:r,lights:e},setupLights:function(a){e.setup(t,r,a)},pushLight:function(e){t.push(e)},pushShadow:function(e){r.push(e)}}}function tr(){function e(t){var a=t.target;a.removeEventListener("dispose",e),r["delete"](a)}function t(t,a){var i;return!1===r.has(t)?(i=new er,r.set(t,new WeakMap),r.get(t).set(a,i),t.addEventListener("dispose",e)):!1===r.get(t).has(a)?(i=new er,r.get(t).set(a,i)):i=r.get(t).get(a),i}var r=new WeakMap;return{get:t,dispose:function(){r=new WeakMap}}}/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   * @author bhouston / https://clara.io
   * @author WestLangley / http://github.com/WestLangley
   *
   * parameters = {
   *
   *  opacity: <float>,
   *
   *  map: new THREE.Texture( <Image> ),
   *
   *  alphaMap: new THREE.Texture( <Image> ),
   *
   *  displacementMap: new THREE.Texture( <Image> ),
   *  displacementScale: <float>,
   *  displacementBias: <float>,
   *
   *  wireframe: <boolean>,
   *  wireframeLinewidth: <float>
   * }
   */function rr(e){H.call(this),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}/**
   * @author WestLangley / http://github.com/WestLangley
   *
   * parameters = {
   *
   *  referencePosition: <float>,
   *  nearDistance: <float>,
   *  farDistance: <float>,
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>,
   *
   *  map: new THREE.Texture( <Image> ),
   *
   *  alphaMap: new THREE.Texture( <Image> ),
   *
   *  displacementMap: new THREE.Texture( <Image> ),
   *  displacementScale: <float>,
   *  displacementBias: <float>
   *
   * }
   */function ar(e){H.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new S,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}/**
   * @author alteredq / http://alteredqualia.com/
   * @author mrdoob / http://mrdoob.com/
   */function ir(e,t,r){function a(r,a){var i=t.update(M);// vertical pass
// horizonal pass
y.uniforms.shadow_pass.value=r.map.texture,y.uniforms.resolution.value=r.mapSize,y.uniforms.radius.value=r.radius,e.setRenderTarget(r.mapPass),e.clear(),e.renderBufferDirect(a,null,i,y,M,null),v.uniforms.shadow_pass.value=r.mapPass.texture,v.uniforms.resolution.value=r.mapSize,v.uniforms.radius.value=r.radius,e.setRenderTarget(r.map),e.clear(),e.renderBufferDirect(a,null,i,v,M,null)}function i(e,t,r){var a=e<<0|t<<1|r<<2,i=u[a];return void 0===i&&(i=new rr({depthPacking:3201,morphTargets:e,skinning:t}),u[a]=i),i}function n(e,t,r){var a=e<<0|t<<1|r<<2,i=m[a];return void 0===i&&(i=new ar({morphTargets:e,skinning:t}),m[a]=i),i}function o(t,r,a,o,s,l){var d=t.geometry,p=null,c=i,u=t.customDepthMaterial;if(!0===a.isPointLight&&(c=n,u=t.customDistanceMaterial),void 0===u){var m=!1;!0===r.morphTargets&&(!0===d.isBufferGeometry?m=d.morphAttributes&&d.morphAttributes.position&&0<d.morphAttributes.position.length:!0===d.isGeometry&&(m=d.morphTargets&&0<d.morphTargets.length));var h=!1;!0===t.isSkinnedMesh&&(!0===r.skinning?h=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t));var y=!0===t.isInstancedMesh;p=c(m,h,y)}else p=u;if(e.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){// in this case we need a unique material instance reflecting the
// appropriate state
var v=p.uuid,x=r.uuid,_=g[v];void 0===_&&(_={},g[v]=_);var b=_[x];void 0===b&&(b=p.clone(),_[x]=b),p=b}return p.visible=r.visible,p.wireframe=r.wireframe,p.side=3===l?null===r.shadowSide?r.side:r.shadowSide:null===r.shadowSide?f[r.side]:r.shadowSide,p.clipShadows=r.clipShadows,p.clippingPlanes=r.clippingPlanes,p.clipIntersection=r.clipIntersection,p.wireframeLinewidth=r.wireframeLinewidth,p.linewidth=r.linewidth,!0===a.isPointLight&&!0===p.isMeshDistanceMaterial&&(p.referencePosition.setFromMatrixPosition(a.matrixWorld),p.nearDistance=o,p.farDistance=s),p}function s(r,a,n,d,p){if(!1!==r.visible){var c=r.layers.test(a.layers);if(c&&(r.isMesh||r.isLine||r.isPoints)&&(r.castShadow||r.receiveShadow&&3===p)&&(!r.frustumCulled||l.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,r.matrixWorld);var u=t.update(r),m=r.material;if(Array.isArray(m))for(var g=u.groups,f=0,h=g.length;f<h;f++){var y=g[f],v=m[y.materialIndex];if(v&&v.visible){var x=o(r,v,d,n.near,n.far,p);e.renderBufferDirect(n,null,u,x,r,y)}}else if(m.visible){var x=o(r,m,d,n.near,n.far,p);e.renderBufferDirect(n,null,u,x,r,null)}}for(var _=r.children,b=0,M=_.length;b<void 0;b++)s(_[b],a,n,d,p)}}var l=new ge,d=new h,p=new h,c=new x,u=[],m=[],g={},f={0:1,1:0,2:2},y=new le({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new h},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),v=y.clone();v.defines.HORIZONAL_PASS=1;var b=new te;b.setAttribute("position",new k(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var M=new re(b,y),S=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(t,n,o){if(!1!==S.enabled&&(!1!==S.autoUpdate||!1!==S.needsUpdate)&&0!==t.length){var u=e.getRenderTarget(),m=e.getActiveCubeFace(),g=e.getActiveMipmapLevel(),f=e.state;f.setBlending(0),f.buffers.color.setClear(1,1,1,1),f.buffers.depth.setTest(!0),f.setScissorTest(!1);// render depth map
for(var h=0,y=t.length;h<y;h++){var v=t[h],x=v.shadow;if(void 0===x){console.warn("THREE.WebGLShadowMap:",v,"has no shadow.");continue}d.copy(x.mapSize);var b=x.getFrameExtents();if(d.multiply(b),p.copy(x.mapSize),(d.x>r||d.y>r)&&(console.warn("THREE.WebGLShadowMap:",v,"has shadow exceeding max texture size, reducing"),d.x>r&&(p.x=Po(r/b.x),d.x=p.x*b.x,x.mapSize.x=p.x),d.y>r&&(p.y=Po(r/b.y),d.y=p.y*b.y,x.mapSize.y=p.y)),null===x.map&&!x.isPointLightShadow&&3===this.type){var M={minFilter:1006,magFilter:1006,format:1023};x.map=new _(d.x,d.y,M),x.map.texture.name=v.name+".shadowMap",x.mapPass=new _(d.x,d.y,M),x.camera.updateProjectionMatrix()}if(null===x.map){var M={minFilter:1003,magFilter:1003,format:1023};x.map=new _(d.x,d.y,M),x.map.texture.name=v.name+".shadowMap",x.camera.updateProjectionMatrix()}e.setRenderTarget(x.map),e.clear();for(var T=x.getViewportCount(),E=0,w;E<T;E++)w=x.getViewport(E),c.set(p.x*w.x,p.y*w.y,p.x*w.z,p.y*w.w),f.viewport(c),x.updateMatrices(v,E),l=x.getFrustum(),s(n,o,x.camera,v,this.type);// do blur pass for VSM
x.isPointLightShadow||3!==this.type||a(x,o)}S.needsUpdate=!1,e.setRenderTarget(u,m,g)}}}/**
   * @author mrdoob / http://mrdoob.com/
   */function nr(e,t,r){function a(t,r,a){var n=new Uint8Array(4),o=e.createTexture();// 4 is required to match default unpack alignment of 4.
e.bindTexture(t,o),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(var s=0;s<a;s++)e.texImage2D(r+s,0,6408,1,1,0,6408,5121,n);return o}//
function i(){for(var e=0,t=L.length;e<t;e++)L[e]=0}function n(r,a){if(L[r]=1,0===A[r]&&(e.enableVertexAttribArray(r),A[r]=1),R[r]!==a){var i=M?e:t.get("ANGLE_instanced_arrays");i[M?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](r,a),R[r]=a}}function o(){for(var t=0,r=A.length;t!==r;++t)A[t]!==L[t]&&(e.disableVertexAttribArray(t),A[t]=0)}function s(t){!0!==P[t]&&(e.enable(t),P[t]=!0)}function l(t){!1!==P[t]&&(e.disable(t),P[t]=!1)}function d(t){return C!==t&&(e.useProgram(t),C=t,!0)}function p(t,r,a,i,n,o,d,p){return 0===t?void(D&&(l(3042),D=!1)):(D||(s(3042),D=!0),5===t?void(// custom blending
n=n||r,o=o||a,d=d||i,(r!==N||n!==B)&&(e.blendEquationSeparate(ae[r],ae[n]),N=r,B=n),(a!==z||i!==U||o!==F||d!==O)&&(e.blendFuncSeparate(ne[a],ne[i],ne[o],ne[d]),z=a,U=i,F=o,O=d),I=t,G=null):void((t!==I||p!==G)&&((100!==N||100!==B)&&(e.blendEquation(32774),N=100,B=100),p?1===t?e.blendFuncSeparate(1,771,1,771):2===t?e.blendFunc(1,1):3===t?e.blendFuncSeparate(0,0,769,771):4===t?e.blendFuncSeparate(0,768,0,770):console.error("THREE.WebGLState: Invalid blending: ",t):1===t?e.blendFuncSeparate(770,771,1,771):2===t?e.blendFunc(770,1):3===t?e.blendFunc(0,769):4===t?e.blendFunc(0,768):console.error("THREE.WebGLState: Invalid blending: ",t),z=null,U=null,F=null,O=null,I=t,G=p)))}//
function c(t){H!==t&&(t?e.frontFace(2304):e.frontFace(2305),H=t)}function u(t){t===0?l(2884):(s(2884),t!==V&&(t===1?e.cullFace(1029):t===2?e.cullFace(1028):e.cullFace(1032))),V=t}function m(t){t!==k&&(X&&e.lineWidth(t),k=t)}function g(t,r,a){t?(s(32823),(W!==r||j!==a)&&(e.polygonOffset(r,a),W=r,j=a)):l(32823)}// texture
function f(t){t===void 0&&(t=33984+q-1),K!==t&&(e.activeTexture(t),K=t)}function h(t,r){null===K&&f();var a=$[K];a===void 0&&(a={type:void 0,texture:void 0},$[K]=a),(a.type!==t||a.texture!==r)&&(e.bindTexture(t,r||re[t]),a.type=t,a.texture=r)}function y(){var t=$[K];t!==void 0&&t.type!==void 0&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)}//
function v(t){!1===ee.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),ee.copy(t))}function _(t){!1===te.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),te.copy(t))}//
function b(){for(var t=0;t<A.length;t++)1===A[t]&&(e.disableVertexAttribArray(t),A[t]=0);P={},K=null,$={},C=null,I=null,H=null,V=null,S.reset(),T.reset(),E.reset()}var M=r.isWebGL2,S=new function(){var t=!1,i=new x,n=null,o=new x(0,0,0,0);return{setMask:function setMask(r){n===r||t||(e.colorMask(r,r,r,r),n=r)},setLocked:function setLocked(e){t=e},setClear:function setClear(t,n,s,l,a){!0===a&&(t*=l,n*=l,s*=l),i.set(t,n,s,l),!1===o.equals(i)&&(e.clearColor(t,n,s,l),o.copy(i))},reset:function(){t=!1,n=null,o.set(-1,0,0,0)}}},T=new function(){var t=!1,r=null,a=null,i=null;return{setTest:function setTest(e){e?s(2929):l(2929)},setMask:function setMask(a){r===a||t||(e.depthMask(a),r=a)},setFunc:function setFunc(t){a!==t&&(t?0===t?e.depthFunc(512):1===t?e.depthFunc(519):2===t?e.depthFunc(513):3===t?e.depthFunc(515):4===t?e.depthFunc(514):5===t?e.depthFunc(518):6===t?e.depthFunc(516):7===t?e.depthFunc(517):e.depthFunc(515):e.depthFunc(515),a=t)},setLocked:function setLocked(e){t=e},setClear:function setClear(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,r=null,a=null,i=null}}},E=new function(){var t=!1,r=null,a=null,i=null,n=null,o=null,d=null,p=null,c=null;return{setTest:function setTest(e){t||(e?s(2960):l(2960))},setMask:function setMask(a){r===a||t||(e.stencilMask(a),r=a)},setFunc:function setFunc(t,r,o){(a!==t||i!==r||n!==o)&&(e.stencilFunc(t,r,o),a=t,i=r,n=o)},setOp:function setOp(t,r,a){(o!==t||d!==r||p!==a)&&(e.stencilOp(t,r,a),o=t,d=r,p=a)},setLocked:function setLocked(e){t=e},setClear:function setClear(t){c!==t&&(e.clearStencil(t),c=t)},reset:function(){t=!1,r=null,a=null,i=null,n=null,o=null,d=null,p=null,c=null}}}//
,w=e.getParameter(34921),L=new Uint8Array(w),A=new Uint8Array(w),R=new Uint8Array(w),P={},C=null,D=null,I=null,N=null,z=null,U=null,B=null,F=null,O=null,G=!1,H=null,V=null,k=null,W=null,j=null,q=e.getParameter(35661),X=!1,Y=0,Z=e.getParameter(7938),J,Q;-1===Z.indexOf("WebGL")?-1!==Z.indexOf("OpenGL ES")&&(Y=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(Z)[1]),X=2<=Y):(Y=parseFloat(/^WebGL\ ([0-9])/.exec(Z)[1]),X=1<=Y);var K=null,$={},ee=new x,te=new x,re={};re[3553]=a(3553,3553,1),re[34067]=a(34067,34069,6),S.setClear(0,0,0,1),T.setClear(1),E.setClear(0),s(2929),T.setFunc(3),c(!1),u(1),s(2884),p(0);var ae=(J={},_defineProperty(J,100,32774),_defineProperty(J,101,32778),_defineProperty(J,102,32779),J);if(M)ae[103]=32775,ae[104]=32776;else{var ie=t.get("EXT_blend_minmax");null!==ie&&(ae[103]=ie.MIN_EXT,ae[104]=ie.MAX_EXT)}var ne=(Q={},_defineProperty(Q,200,0),_defineProperty(Q,201,1),_defineProperty(Q,202,768),_defineProperty(Q,204,770),_defineProperty(Q,210,776),_defineProperty(Q,208,774),_defineProperty(Q,206,772),_defineProperty(Q,203,769),_defineProperty(Q,205,771),_defineProperty(Q,209,775),_defineProperty(Q,207,773),Q);return{buffers:{color:S,depth:T,stencil:E},initAttributes:i,enableAttribute:function(e){n(e,0)},enableAttributeAndDivisor:n,disableUnusedAttributes:o,enable:s,disable:l,useProgram:d,setBlending:p,setMaterial:function(e,t){e.side===2?l(2884):s(2884);var r=e.side===1;t&&(r=!r),c(r),e.blending===1&&!1===e.transparent?p(0):p(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),T.setFunc(e.depthFunc),T.setTest(e.depthTest),T.setMask(e.depthWrite),S.setMask(e.colorWrite);var a=e.stencilWrite;E.setTest(a),a&&(E.setMask(e.stencilWriteMask),E.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),E.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),g(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:c,setCullFace:u,setLineWidth:m,setPolygonOffset:g,setScissorTest:function(e){e?s(3089):l(3089)},activeTexture:f,bindTexture:h,unbindTexture:y,compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:v,viewport:_,reset:b}}/**
   * @author mrdoob / http://mrdoob.com/
   */function or(e,t,r,a,i,n,o){function s(e,t){// Use OffscreenCanvas when available. Specially needed in web workers
return H?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function l(e,t,r,a){var i=1;// handle case if texture exceeds max size
// only perform resize if necessary
if((e.width>a||e.height>a)&&(i=a/No(e.width,e.height)),1>i||!0===t){// only perform resize for certain image types
if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){var n=t?os.floorPowerOfTwo:Po,o=n(i*e.width),l=n(i*e.height);void 0===W&&(W=s(o,l));// cube textures can't reuse the same canvas
var d=r?s(o,l):W;d.width=o,d.height=l;var p=d.getContext("2d");return p.drawImage(e,0,0,o,l),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+o+"x"+l+")."),d}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function d(e){return os.isPowerOfTwo(e.width)&&os.isPowerOfTwo(e.height)}function p(e){return!z&&(e.wrapS!==1001||e.wrapT!==1001||e.minFilter!==1003&&e.minFilter!==1006)}function c(e,t){return e.generateMipmaps&&t&&e.minFilter!==1003&&e.minFilter!==1006}function u(t,r,i,n){e.generateMipmap(t);var o=a.get(r);// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11
o.__maxMipLevel=Ao(No(i,n))*Math.LOG2E}function m(r,a,i){if(!1===z)return a;if(null!==r){if(void 0!==e[r])return e[r];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+r+"'")}var n=a;return 6403===a&&(5126===i&&(n=33326),5131===i&&(n=33325),5121===i&&(n=33321)),6407===a&&(5126===i&&(n=34837),5131===i&&(n=34843),5121===i&&(n=32849)),6408===a&&(5126===i&&(n=34836),5131===i&&(n=34842),5121===i&&(n=32856)),(33325===n||33326===n||34842===n||34836===n)&&t.get("EXT_color_buffer_float"),n}// Fallback filters for non-power-of-2 textures
function g(e){return 1003===e||1004===e||1005===e?9728:9729}//
function f(e){var t=e.target;t.removeEventListener("dispose",f),y(t),t.isVideoTexture&&G["delete"](t),o.memory.textures--}function h(e){var t=e.target;t.removeEventListener("dispose",h),v(t),o.memory.textures--}//
function y(t){var r=a.get(t);void 0===r.__webglInit||(e.deleteTexture(r.__webglTexture),a.remove(t))}function v(t){var r=a.get(t),n=a.get(t.texture);if(t){if(void 0!==n.__webglTexture&&e.deleteTexture(n.__webglTexture),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(var o=0;6>o;o++)e.deleteFramebuffer(r.__webglFramebuffer[o]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[o]);else e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&e.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer);a.remove(t.texture),a.remove(t)}}//
function x(){var e=j;return e>=U&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+U),j+=1,e}//
function _(e,t){var i=a.get(e);if(e.isVideoTexture&&D(e),0<e.version&&i.__version!==e.version){var n=e.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(!1===n.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else return void E(i,e,t)}r.activeTexture(33984+t),r.bindTexture(3553,i.__webglTexture)}function b(t,o){if(6===t.image.length){var s=a.get(t);if(0<t.version&&s.__version!==t.version){T(s,t),r.activeTexture(33984+o),r.bindTexture(34067,s.__webglTexture),e.pixelStorei(37440,t.flipY);for(var p=t&&(t.isCompressedTexture||t.image[0].isCompressedTexture),g=t.image[0]&&t.image[0].isDataTexture,f=[],h=0;6>h;h++)f[h]=p||g?g?t.image[h].image:t.image[h]:l(t.image[h],!1,!0,B);var y=f[0],v=d(y)||z,x=n.convert(t.format),_=n.convert(t.type),b=m(t.internalFormat,x,_);S(34067,t,v);var M;if(p){for(var h=0;6>h;h++){M=f[h].mipmaps;for(var E=0,w;E<M.length;E++)w=M[E],1023!==t.format&&1022!==t.format?null===x?console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):r.compressedTexImage2D(34069+h,E,b,w.width,w.height,0,w.data):r.texImage2D(34069+h,E,b,w.width,w.height,0,x,_,w.data)}s.__maxMipLevel=M.length-1}else{M=t.mipmaps;for(var h=0;6>h;h++)if(g){r.texImage2D(34069+h,0,b,f[h].width,f[h].height,0,x,_,f[h].data);for(var E=0;E<M.length;E++){var w=M[E],L=w.image[h].image;r.texImage2D(34069+h,E+1,b,L.width,L.height,0,x,_,L.data)}}else{r.texImage2D(34069+h,0,b,x,_,f[h]);for(var E=0,w;E<M.length;E++)w=M[E],r.texImage2D(34069+h,E+1,b,x,_,w.image[h])}s.__maxMipLevel=M.length}c(t,v)&&u(34067,t,y.width,y.height),s.__version=t.version,t.onUpdate&&t.onUpdate(t)}else r.activeTexture(33984+o),r.bindTexture(34067,s.__webglTexture)}}function M(e,t){r.activeTexture(33984+t),r.bindTexture(34067,a.get(e).__webglTexture)}function S(r,n,o){o?(e.texParameteri(r,10242,q[n.wrapS]),e.texParameteri(r,10243,q[n.wrapT]),(32879===r||35866===r)&&e.texParameteri(r,32882,q[n.wrapR]),e.texParameteri(r,10240,X[n.magFilter]),e.texParameteri(r,10241,X[n.minFilter])):(e.texParameteri(r,10242,33071),e.texParameteri(r,10243,33071),(32879===r||35866===r)&&e.texParameteri(r,32882,33071),(n.wrapS!==1001||n.wrapT!==1001)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(r,10240,g(n.magFilter)),e.texParameteri(r,10241,g(n.minFilter)),n.minFilter!==1003&&n.minFilter!==1006&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));var s=t.get("EXT_texture_filter_anisotropic");if(s){if(n.type===1015&&null===t.get("OES_texture_float_linear"))return;if(1016===n.type&&null===(z||t.get("OES_texture_half_float_linear")))return;(1<n.anisotropy||a.get(n).__currentAnisotropy)&&(e.texParameterf(r,s.TEXTURE_MAX_ANISOTROPY_EXT,Io(n.anisotropy,i.getMaxAnisotropy())),a.get(n).__currentAnisotropy=n.anisotropy)}}function T(t,r){t.__webglInit===void 0&&(t.__webglInit=!0,r.addEventListener("dispose",f),t.__webglTexture=e.createTexture(),o.memory.textures++)}function E(t,a,o){var s=3553;a.isDataTexture2DArray&&(s=35866),a.isDataTexture3D&&(s=32879),T(t,a),r.activeTexture(33984+o),r.bindTexture(s,t.__webglTexture),e.pixelStorei(37440,a.flipY),e.pixelStorei(37441,a.premultiplyAlpha),e.pixelStorei(3317,a.unpackAlignment);var g=p(a)&&!1===d(a.image),f=l(a.image,g,!1,F),h=d(f)||z,y=n.convert(a.format),v=n.convert(a.type),x=m(a.internalFormat,y,v);S(s,a,h);var _=a.mipmaps,b;if(a.isDepthTexture)// populate depth texture with dummy data
//
x=6402,z?1015===a.type?x=36012:1014===a.type?x=33190:1020===a.type?x=35056:x=33189:1015===a.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===a.format&&6402===x&&1012!==a.type&&1014!==a.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),a.type=1012,v=n.convert(a.type)),1027===a.format&&6402===x&&(x=34041,1020!==a.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),a.type=1020,v=n.convert(a.type))),r.texImage2D(3553,0,x,f.width,f.height,0,y,v,null);else if(a.isDataTexture){// use manually created mipmaps if available
// if there are no manual mipmaps
// set 0 level mipmap and then use GL to generate other mipmap levels
if(0<_.length&&h){for(var M=0,E=_.length;M<E;M++)b=_[M],r.texImage2D(3553,M,x,b.width,b.height,0,y,v,b.data);a.generateMipmaps=!1,t.__maxMipLevel=_.length-1}else r.texImage2D(3553,0,x,f.width,f.height,0,y,v,f.data),t.__maxMipLevel=0;}else if(a.isCompressedTexture){for(var M=0,E=_.length;M<E;M++)b=_[M],1023!==a.format&&1022!==a.format?null===y?console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):r.compressedTexImage2D(3553,M,x,b.width,b.height,0,b.data):r.texImage2D(3553,M,x,b.width,b.height,0,y,v,b.data);t.__maxMipLevel=_.length-1}else if(a.isDataTexture2DArray)r.texImage3D(35866,0,x,f.width,f.height,f.depth,0,y,v,f.data),t.__maxMipLevel=0;else if(a.isDataTexture3D)r.texImage3D(32879,0,x,f.width,f.height,f.depth,0,y,v,f.data),t.__maxMipLevel=0;else// regular Texture (image, video, canvas)
// use manually created mipmaps if available
// if there are no manual mipmaps
// set 0 level mipmap and then use GL to generate other mipmap levels
if(0<_.length&&h){for(var M=0,E=_.length;M<E;M++)b=_[M],r.texImage2D(3553,M,x,y,v,b);a.generateMipmaps=!1,t.__maxMipLevel=_.length-1}else r.texImage2D(3553,0,x,y,v,f),t.__maxMipLevel=0;c(a,h)&&u(s,a,f.width,f.height),t.__version=a.version,a.onUpdate&&a.onUpdate(a)}// Render targets
// Setup storage for target texture and bind it to correct framebuffer
function w(t,i,o,s){var l=n.convert(i.texture.format),d=n.convert(i.texture.type),p=m(i.texture.internalFormat,l,d);r.texImage2D(s,0,p,i.width,i.height,0,l,d,null),e.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,o,s,a.get(i.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}// Setup storage for internal depth/stencil buffers and bind to correct framebuffer
function L(t,r,a){if(e.bindRenderbuffer(36161,t),r.depthBuffer&&!r.stencilBuffer){var i=33189;if(a){var o=r.depthTexture;o&&o.isDepthTexture&&(1015===o.type?i=36012:1014===o.type&&(i=33190));var s=C(r);e.renderbufferStorageMultisample(36161,s,i,r.width,r.height)}else e.renderbufferStorage(36161,i,r.width,r.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(r.depthBuffer&&r.stencilBuffer){if(a){var s=C(r);e.renderbufferStorageMultisample(36161,s,35056,r.width,r.height)}else e.renderbufferStorage(36161,34041,r.width,r.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{var l=n.convert(r.texture.format),d=n.convert(r.texture.type),i=m(r.texture.internalFormat,l,d);if(a){var s=C(r);e.renderbufferStorageMultisample(36161,s,i,r.width,r.height)}else e.renderbufferStorage(36161,i,r.width,r.height)}e.bindRenderbuffer(36161,null)}// Setup resources for a Depth Texture for a FBO (needs an extension)
function A(t,r){var i=r&&r.isWebGLCubeRenderTarget;if(i)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,t),!(r.depthTexture&&r.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");// upload an empty depth texture with framebuffer size
a.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),_(r.depthTexture,0);var n=a.get(r.depthTexture).__webglTexture;if(1026===r.depthTexture.format)e.framebufferTexture2D(36160,36096,3553,n,0);else if(1027===r.depthTexture.format)e.framebufferTexture2D(36160,33306,3553,n,0);else throw new Error("Unknown depthTexture format")}// Setup GL resources for a non-texture depth buffer
function R(t){var r=a.get(t),n=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(n)throw new Error("target.depthTexture not supported in Cube render targets");A(r.__webglFramebuffer,t)}else if(n){r.__webglDepthbuffer=[];for(var o=0;6>o;o++)e.bindFramebuffer(36160,r.__webglFramebuffer[o]),r.__webglDepthbuffer[o]=e.createRenderbuffer(),L(r.__webglDepthbuffer[o],t,!1)}else e.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),L(r.__webglDepthbuffer,t,!1);e.bindFramebuffer(36160,null)}// Set up GL resources for the render target
function P(t){var s=a.get(t),l=a.get(t.texture);t.addEventListener("dispose",h),l.__webglTexture=e.createTexture(),o.memory.textures++;var p=!0===t.isWebGLCubeRenderTarget,g=!0===t.isWebGLMultisampleRenderTarget,f=d(t)||z;// Setup framebuffer
if(z&&1022===t.texture.format&&(1015===t.texture.type||1016===t.texture.type)&&(t.texture.format=1023,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),p){s.__webglFramebuffer=[];for(var y=0;6>y;y++)s.__webglFramebuffer[y]=e.createFramebuffer()}else if(s.__webglFramebuffer=e.createFramebuffer(),g)if(z){s.__webglMultisampledFramebuffer=e.createFramebuffer(),s.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,s.__webglColorRenderbuffer);var v=n.convert(t.texture.format),x=n.convert(t.texture.type),_=m(t.texture.internalFormat,v,x),b=C(t);e.renderbufferStorageMultisample(36161,b,_,t.width,t.height),e.bindFramebuffer(36160,s.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,s.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(s.__webglDepthRenderbuffer=e.createRenderbuffer(),L(s.__webglDepthRenderbuffer,t,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");// Setup color buffer
if(p){r.bindTexture(34067,l.__webglTexture),S(34067,t.texture,f);for(var y=0;6>y;y++)w(s.__webglFramebuffer[y],t,36064,34069+y);c(t.texture,f)&&u(34067,t.texture,t.width,t.height),r.bindTexture(34067,null)}else r.bindTexture(3553,l.__webglTexture),S(3553,t.texture,f),w(s.__webglFramebuffer,t,36064,3553),c(t.texture,f)&&u(3553,t.texture,t.width,t.height),r.bindTexture(3553,null);// Setup depth and stencil buffers
t.depthBuffer&&R(t)}function C(e){return z&&e.isWebGLMultisampleRenderTarget?Io(O,e.samples):0}function D(e){var t=o.render.frame;// Check the last frame we updated the VideoTexture
G.get(e)!==t&&(G.set(e,t),e.update())}// backwards compatibility
function I(e,t){e&&e.isWebGLRenderTarget&&(!1===Y&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),Y=!0),e=e.texture),_(e,t)}function N(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===Z&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),Z=!0),e=e.texture),e&&e.isCubeTexture||Array.isArray(e.image)&&6===e.image.length?b(e,t):M(e,t)}//
var z=i.isWebGL2,U=i.maxTextures,B=i.maxCubemapSize,F=i.maxTextureSize,O=i.maxSamples,G=new WeakMap,H=!1,V,k,W;try{H="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){// Ignore any errors
}var j=0,q=(V={},_defineProperty(V,1000,10497),_defineProperty(V,1001,33071),_defineProperty(V,1002,33648),V),X=(k={},_defineProperty(k,1003,9728),_defineProperty(k,1004,9984),_defineProperty(k,1005,9986),_defineProperty(k,1006,9729),_defineProperty(k,1007,9985),_defineProperty(k,1008,9987),k),Y=!1,Z=!1;this.allocateTextureUnit=x,this.resetTextureUnits=function(){j=0},this.setTexture2D=_,this.setTexture2DArray=function(e,t){var i=a.get(e);return 0<e.version&&i.__version!==e.version?void E(i,e,t):void(r.activeTexture(33984+t),r.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(e,t){var i=a.get(e);return 0<e.version&&i.__version!==e.version?void E(i,e,t):void(r.activeTexture(33984+t),r.bindTexture(32879,i.__webglTexture))},this.setTextureCube=b,this.setTextureCubeDynamic=M,this.setupRenderTarget=P,this.updateRenderTargetMipmap=function(e){var t=e.texture,i=d(e)||z;if(c(t,i)){var n=e.isWebGLCubeRenderTarget?34067:3553,o=a.get(t).__webglTexture;r.bindTexture(n,o),u(n,t,e.width,e.height),r.bindTexture(n,null)}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(z){var r=a.get(t);e.bindFramebuffer(36008,r.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,r.__webglFramebuffer);var i=t.width,n=t.height,o=16384;t.depthBuffer&&(o|=256),t.stencilBuffer&&(o|=1024),e.blitFramebuffer(0,0,i,n,0,0,i,n,o,9728),e.bindFramebuffer(36160,r.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=I,this.safeSetTextureCube=N}/**
   * @author thespite / http://www.twitter.com/thespite
   */function sr(e,t,r){var a=r.isWebGL2;return{convert:function(e){var r;if(e===1009)return 5121;if(1017===e)return 32819;if(1018===e)return 32820;if(1019===e)return 33635;if(1010===e)return 5120;if(1011===e)return 5122;if(1012===e)return 5123;if(1013===e)return 5124;if(1014===e)return 5125;if(1015===e)return 5126;if(1016===e)return a?5131:(r=t.get("OES_texture_half_float"),null===r?null:r.HALF_FLOAT_OES);if(1021===e)return 6406;if(1022===e)return 6407;if(1023===e)return 6408;if(1024===e)return 6409;if(1025===e)return 6410;if(1026===e)return 6402;if(1027===e)return 34041;if(1028===e)return 6403;// WebGL2 formats.
if(1029===e)return 36244;if(1030===e)return 33319;if(1031===e)return 33320;if(1032===e)return 36248;if(1033===e)return 36249;if(33776===e||33777===e||33778===e||33779===e)if(r=t.get("WEBGL_compressed_texture_s3tc"),null!==r){if(33776===e)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===e)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===e)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===e)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(35840===e||35841===e||35842===e||35843===e)if(r=t.get("WEBGL_compressed_texture_pvrtc"),null!==r){if(35840===e)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===e)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===e)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===e)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(36196===e)return r=t.get("WEBGL_compressed_texture_etc1"),null===r?null:r.COMPRESSED_RGB_ETC1_WEBGL;if((37492===e||37496===e)&&(r=t.get("WEBGL_compressed_texture_etc"),null!==r)){if(37492===e)return r.COMPRESSED_RGB8_ETC2;if(37496===e)return r.COMPRESSED_RGBA8_ETC2_EAC}return 37808===e||37809===e||37810===e||37811===e||37812===e||37813===e||37814===e||37815===e||37816===e||37817===e||37818===e||37819===e||37820===e||37821===e||37840===e||37841===e||37842===e||37843===e||37844===e||37845===e||37846===e||37847===e||37848===e||37849===e||37850===e||37851===e||37852===e||37853===e?(r=t.get("WEBGL_compressed_texture_astc"),null===r?null:e):36492===e?(r=t.get("EXT_texture_compression_bptc"),null===r?null:e):1020===e?a?34042:(r=t.get("WEBGL_depth_texture"),null===r?null:r.UNSIGNED_INT_24_8_WEBGL):void 0}}}/**
   * @author mrdoob / http://mrdoob.com/
   */function lr(e){pe.call(this),this.cameras=e||[]}/**
   * @author mrdoob / http://mrdoob.com/
   */function dr(){L.call(this),this.type="Group"}/**
   * @author mrdoob / http://mrdoob.com/
   */function pr(e,t){//
function r(e){var t=h.get(e.inputSource);t&&(t.targetRay&&t.targetRay.dispatchEvent({type:e.type}),t.grip&&t.grip.dispatchEvent({type:e.type}))}function a(){//
// Hack #15830
h.forEach(function(e,t){e.targetRay&&(e.targetRay.dispatchEvent({type:"disconnected",data:t}),e.targetRay.visible=!1),e.grip&&(e.grip.dispatchEvent({type:"disconnected",data:t}),e.grip.visible=!1)}),h.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),L.stop(),d.isPresenting=!1,d.dispatchEvent({type:"sessionend"})}function i(e){u=e,L.setContext(p),L.start(),d.isPresenting=!0,d.dispatchEvent({type:"sessionstart"})}function n(e){// Assign inputSources to available controllers
for(var t=p.inputSources,r=0;r<f.length;r++)h.set(t[r],f[r]);// Notify disconnected
for(var r=0;r<e.removed.length;r++){var a=e.removed[r],n=h.get(a);n&&(n.targetRay&&n.targetRay.dispatchEvent({type:"disconnected",data:a}),n.grip&&n.grip.dispatchEvent({type:"disconnected",data:a}),h["delete"](a))}// Notify connected
for(var r=0;r<e.added.length;r++){var a=e.added[r],n=h.get(a);n&&(n.targetRay&&n.targetRay.dispatchEvent({type:"connected",data:a}),n.grip&&n.grip.dispatchEvent({type:"connected",data:a}))}}//
/**
  	 * @author jsantell / https://www.jsantell.com/
  	 *
  	 * Assumes 2 cameras that are parallel and share an X-axis, and that
  	 * the cameras' projection and world matrices have already been set.
  	 * And that near and far planes are identical for both cameras.
  	 * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765
  	 */function o(e,t,r){T.setFromMatrixPosition(t.matrixWorld),E.setFromMatrixPosition(r.matrixWorld);var a=T.distanceTo(E),i=t.projectionMatrix.elements,n=r.projectionMatrix.elements,o=i[14]/(i[10]-1),s=i[14]/(i[10]+1),l=(i[9]+1)/i[5],d=(i[9]-1)/i[5],p=(i[8]-1)/i[0],c=(n[8]+1)/n[0],u=a/(-p+c),m=u*-p;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(u),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.getInverse(e.matrixWorld);// Find the union of the frustum values of the cameras and scale
// the values so that the near plane's position does not change in world space,
// although must now be relative to the new union camera.
var g=o+u,f=s+u;e.projectionMatrix.makePerspective(o*p-m,o*c+(a-m),l*s/f*g,d*s/f*g,g,f)}function s(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.getInverse(e.matrixWorld)}function l(t,r){if(g=r.getViewerPose(u),null!==g){var a=g.views,n=p.renderState.baseLayer;e.setFramebuffer(n.framebuffer);for(var o=0;o<a.length;o++){var s=a[o],l=n.getViewport(s),d=_.cameras[o];d.matrix.fromArray(s.transform.matrix),d.projectionMatrix.fromArray(s.projectionMatrix),d.viewport.set(l.x,l.y,l.width,l.height),0==o&&_.matrix.copy(d.matrix)}}//
for(var c=p.inputSources,o=0;o<f.length;o++){var m=f[o],h=c[o],y=null,v=null;h&&(m.targetRay&&(y=r.getPose(h.targetRaySpace,u),null!==y&&(m.targetRay.matrix.fromArray(y.transform.matrix),m.targetRay.matrix.decompose(m.targetRay.position,m.targetRay.rotation,m.targetRay.scale))),m.grip&&h.gripSpace&&(v=r.getPose(h.gripSpace,u),null!==v&&(m.grip.matrix.fromArray(v.transform.matrix),m.grip.matrix.decompose(m.grip.position,m.grip.rotation,m.grip.scale)))),m.targetRay&&(m.targetRay.visible=null!==y),m.grip&&(m.grip.visible=null!==v)}w&&w(t,r)}var d=this,p=null,c=1,u=null,m="local-floor",g=null,f=[],h=new Map,y=new pe;y.layers.enable(1),y.viewport=new x;var v=new pe;v.layers.enable(2),v.viewport=new x;var _=new lr([y,v]);_.layers.enable(1),_.layers.enable(2);var b=null,M=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(e){var t=f[e];return void 0===t&&(t={},f[e]=t),void 0===t.targetRay&&(t.targetRay=new dr,t.targetRay.matrixAutoUpdate=!1,t.targetRay.visible=!1),t.targetRay},this.getControllerGrip=function(e){var t=f[e];return void 0===t&&(t={},f[e]=t),void 0===t.grip&&(t.grip=new dr,t.grip.matrixAutoUpdate=!1,t.grip.visible=!1),t.grip},this.setFramebufferScaleFactor=function(e){c=e,!0==d.isPresenting&&console.warn("WebXRManager: Cannot change framebuffer scale while presenting VR content")},this.setReferenceSpaceType=function(e){m=e},this.getReferenceSpace=function(){return u},this.getSession=function(){return p},this.setSession=function(e){if(p=e,null!==p){p.addEventListener("select",r),p.addEventListener("selectstart",r),p.addEventListener("selectend",r),p.addEventListener("squeeze",r),p.addEventListener("squeezestart",r),p.addEventListener("squeezeend",r),p.addEventListener("end",a);var o=t.getContextAttributes(),s={antialias:o.antialias,alpha:o.alpha,depth:o.depth,stencil:o.stencil,framebufferScaleFactor:c},l=new XRWebGLLayer(p,t,s);p.updateRenderState({baseLayer:l}),p.requestReferenceSpace(m).then(i),p.addEventListener("inputsourceschange",n)}};var T=new S,E=new S;this.getCamera=function(e){_.near=v.near=y.near=e.near,_.far=v.far=y.far=e.far,(b!==_.near||M!==_.far)&&(p.updateRenderState({depthNear:_.near,depthFar:_.far}),b=_.near,M=_.far);var t=e.parent,r=_.cameras;s(_,t);for(var a=0;a<r.length;a++)s(r[a],t);// update camera and its children
e.matrixWorld.copy(_.matrixWorld);for(var n=e.children,a=0,d=n.length;a<d;a++)n[a].updateMatrixWorld(!0);return o(_,y,v),_};// Animation Loop
var w=null,L=new fe;L.setAnimationLoop(l),this.setAnimationLoop=function(e){w=e},this.dispose=function(){}}/**
   * @author supereggbert / http://www.paulbrunt.co.uk/
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   * @author szimek / https://github.com/szimek/
   * @author tschw
   */function cr(e){function t(){return null===te?ue:1}// initialize
function r(){Ge=new Se(Fe),He=new be(Fe,Ge,e),!1===He.isWebGL2&&(Ge.get("WEBGL_depth_texture"),Ge.get("OES_texture_float"),Ge.get("OES_texture_half_float"),Ge.get("OES_texture_half_float_linear"),Ge.get("OES_standard_derivatives"),Ge.get("OES_element_index_uint"),Ge.get("ANGLE_instanced_arrays")),Ge.get("OES_texture_float_linear"),rt=new sr(Fe,Ge,He),Ve=new nr(Fe,Ge,He),Ve.scissor(le.copy(Pe).multiplyScalar(ue).floor()),Ve.viewport(se.copy(Le).multiplyScalar(ue).floor()),ke=new we(Fe),We=new jt,je=new or(Fe,Ge,Ve,We,He,rt,ke),qe=new he(Fe,He),Xe=new Te(Fe,qe,ke),Ye=new Re(Fe,Xe,qe,ke),$e=new Ae(Fe),Ze=new Wt(J,Ge,He),Je=new Zt,Qe=new tr,Ke=new xe(J,Ve,Ye,W),et=new _e(Fe,Ge,ke,He),tt=new Ee(Fe,Ge,ke,He),ke.programs=Ze.programs,J.capabilities=He,J.extensions=Ge,J.properties=We,J.renderLists=Je,J.state=Ve,J.info=ke}// Events
function a(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),Q=!0}function i()/* event */{console.log("THREE.WebGLRenderer: Context Restored."),Q=!1,r()}function n(e){var t=e.target;t.removeEventListener("dispose",n),o(t)}// Buffer deallocation
function o(e){s(e),We.remove(e)}function s(e){var t=We.get(e).program;e.program=void 0,t!==void 0&&Ze.releaseProgram(t)}// Buffer rendering
function l(e,t){e.render(function(e){J.renderBufferImmediate(e,t)})}function d(e,t,r,a){if(!(!1===He.isWebGL2&&(e.isInstancedMesh||t.isInstancedBufferGeometry)&&null===Ge.get("ANGLE_instanced_arrays"))){Ve.initAttributes();var i=t.attributes,n=a.getAttributes(),o=r.defaultAttributeValues;for(var s in n){var l=n[s];if(0<=l){var d=i[s];if(void 0!==d){var p=d.normalized,c=d.itemSize,u=qe.get(d);// TODO Attribute may not be available on context restore
if(void 0===u)continue;var m=u.buffer,g=u.type,f=u.bytesPerElement;if(d.isInterleavedBufferAttribute){var h=d.data,y=h.stride,v=d.offset;h&&h.isInstancedInterleavedBuffer?(Ve.enableAttributeAndDivisor(l,h.meshPerAttribute),void 0===t.maxInstancedCount&&(t.maxInstancedCount=h.meshPerAttribute*h.count)):Ve.enableAttribute(l),Fe.bindBuffer(34962,m),Fe.vertexAttribPointer(l,c,g,p,y*f,v*f)}else d.isInstancedBufferAttribute?(Ve.enableAttributeAndDivisor(l,d.meshPerAttribute),void 0===t.maxInstancedCount&&(t.maxInstancedCount=d.meshPerAttribute*d.count)):Ve.enableAttribute(l),Fe.bindBuffer(34962,m),Fe.vertexAttribPointer(l,c,g,p,0,0)}else if("instanceMatrix"===s){var u=qe.get(e.instanceMatrix);// TODO Attribute may not be available on context restore
if(void 0===u)continue;var m=u.buffer,g=u.type;Ve.enableAttributeAndDivisor(l+0,1),Ve.enableAttributeAndDivisor(l+1,1),Ve.enableAttributeAndDivisor(l+2,1),Ve.enableAttributeAndDivisor(l+3,1),Fe.bindBuffer(34962,m),Fe.vertexAttribPointer(l+0,4,g,!1,64,0),Fe.vertexAttribPointer(l+1,4,g,!1,64,16),Fe.vertexAttribPointer(l+2,4,g,!1,64,32),Fe.vertexAttribPointer(l+3,4,g,!1,64,48)}else if(void 0!==o){var x=o[s];if(void 0!==x)switch(x.length){case 2:Fe.vertexAttrib2fv(l,x);break;case 3:Fe.vertexAttrib3fv(l,x);break;case 4:Fe.vertexAttrib4fv(l,x);break;default:Fe.vertexAttrib1fv(l,x);}}}}Ve.disableUnusedAttributes()}}// Compile
function p(e){at.isPresenting||ot&&ot(e)}function c(e,t,r,a){if(!1!==e.visible){var n=e.layers.test(t.layers);if(n)if(e.isGroup)r=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)Z.pushLight(e),e.castShadow&&Z.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||De.intersectsSprite(e)){a&&Be.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Ue);var o=Ye.update(e),s=e.material;s.visible&&Y.push(e,o,s,r,Be.z,null)}}else if(e.isImmediateRenderObject)a&&Be.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Ue),Y.push(e,null,e.material,r,Be.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==ke.render.frame&&(e.skeleton.update(),e.skeleton.frame=ke.render.frame),!e.frustumCulled||De.intersectsObject(e))){a&&Be.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Ue);var o=Ye.update(e),s=e.material;if(Array.isArray(s))for(var d=o.groups,p=0,u=d.length;p<u;p++){var m=d[p],g=s[m.materialIndex];g&&g.visible&&Y.push(e,o,g,r,Be.z,m)}else s.visible&&Y.push(e,o,s,r,Be.z,null)}for(var f=e.children,p=0,u=f.length;p<u;p++)c(f[p],t,r,a)}}function u(e,t,r,a){for(var n=0,o=e.length;n<o;n++){var s=e[n],l=s.object,d=s.geometry,p=a===void 0?s.material:a,c=s.group;if(r.isArrayCamera){oe=r;for(var u=r.cameras,g=0,f=u.length,h;g<f;g++)h=u[g],l.layers.test(h.layers)&&(Ve.viewport(se.copy(h.viewport)),Z.setupLights(h),m(l,t,h,d,p,c))}else oe=null,m(l,t,r,d,p,c)}}function m(e,t,r,a,i,n){if(e.onBeforeRender(J,t,r,a,i,n),Z=Qe.get(t,oe||r),e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){var o=f(r,t,i,e);Ve.setMaterial(i),ie.geometry=null,ie.program=null,ie.wireframe=!1,l(e,o)}else J.renderBufferDirect(r,t,a,i,e,n);e.onAfterRender(J,t,r,a,i,n),Z=Qe.get(t,oe||r)}function g(e,t,r){var a=We.get(e),o=Z.state.lights,l=Z.state.shadowsArray,d=o.state.version,p=Ze.getParameters(e,o.state,l,t,Ie.numPlanes,Ie.numIntersection,r),c=Ze.getProgramCacheKey(p),u=a.program,m=!0;if(u===void 0)// new material
e.addEventListener("dispose",n);else if(u.cacheKey!==c)// changed glsl or parameters
s(e);else if(a.lightsStateVersion!==d)a.lightsStateVersion=d,m=!1;else{if(void 0!==p.shaderID)// same glsl and uniform list
return;m=!1}m&&(u=Ze.acquireProgram(p,c),a.program=u,a.uniforms=p.uniforms,a.environment=e.isMeshStandardMaterial?t.environment:null,a.outputEncoding=J.outputEncoding,e.program=u);var g=u.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(var f=0;f<J.maxMorphTargets;f++)0<=g["morphTarget"+f]&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;for(var f=0;f<J.maxMorphNormals;f++)0<=g["morphNormal"+f]&&e.numSupportedMorphNormals++}var h=a.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(a.numClippingPlanes=Ie.numPlanes,a.numIntersection=Ie.numIntersection,h.clippingPlanes=Ie.uniform),a.fog=t.fog,a.needsLights=B(e),a.lightsStateVersion=d,a.needsLights&&(h.ambientLightColor.value=o.state.ambient,h.lightProbe.value=o.state.probe,h.directionalLights.value=o.state.directional,h.directionalLightShadows.value=o.state.directionalShadow,h.spotLights.value=o.state.spot,h.spotLightShadows.value=o.state.spotShadow,h.rectAreaLights.value=o.state.rectArea,h.pointLights.value=o.state.point,h.pointLightShadows.value=o.state.pointShadow,h.hemisphereLights.value=o.state.hemi,h.directionalShadowMap.value=o.state.directionalShadowMap,h.directionalShadowMatrix.value=o.state.directionalShadowMatrix,h.spotShadowMap.value=o.state.spotShadowMap,h.spotShadowMatrix.value=o.state.spotShadowMatrix,h.pointShadowMap.value=o.state.pointShadowMap,h.pointShadowMatrix.value=o.state.pointShadowMatrix);var y=a.program.getUniforms(),v=xt.seqWithValue(y.seq,h);a.uniformsList=v}function f(e,t,r,a){je.resetTextureUnits();var i=t.fog,n=r.isMeshStandardMaterial?t.environment:null,o=We.get(r),s=Z.state.lights;if(Ne&&(ze||e!==ne)){var l=e===ne&&r.id===ae;// we might want to call this function with some ClippingGroup
// object instead of the material, once it becomes feasible
// (#8465, #8379)
Ie.setState(r.clippingPlanes,r.clipIntersection,r.clipShadows,e,o,l)}r.version===o.__version?void 0===o.program?g(r,t,a):r.fog&&o.fog!==i?g(r,t,a):o.environment===n?o.needsLights&&o.lightsStateVersion!==s.state.version?g(r,t,a):void 0!==o.numClippingPlanes&&(o.numClippingPlanes!==Ie.numPlanes||o.numIntersection!==Ie.numIntersection)?g(r,t,a):o.outputEncoding!==J.outputEncoding&&g(r,t,a):g(r,t,a):(g(r,t,a),o.__version=r.version);var d=!1,p=!1,c=!1,u=o.program,m=u.getUniforms(),f=o.uniforms;if(Ve.useProgram(u.program)&&(d=!0,p=!0,c=!0),r.id!==ae&&(ae=r.id,p=!0),d||ne!==e){// load material specific uniforms
// (shader material also gets them for the sake of genericity)
if(m.setValue(Fe,"projectionMatrix",e.projectionMatrix),He.logarithmicDepthBuffer&&m.setValue(Fe,"logDepthBufFC",2/(Ao(e.far+1)/Lo)),ne!==e&&(ne=e,p=!0,c=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){var h=m.map.cameraPosition;void 0!==h&&h.setValue(Fe,Be.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&m.setValue(Fe,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.skinning)&&m.setValue(Fe,"viewMatrix",e.matrixWorldInverse)}// skinning uniforms must be set even if material didn't change
// auto-setting of texture unit for bone texture must go before other textures
// otherwise textures used for skinning can take over texture units reserved for other material textures
if(r.skinning){m.setOptional(Fe,a,"bindMatrix"),m.setOptional(Fe,a,"bindMatrixInverse");var x=a.skeleton;if(x){var S=x.bones;if(He.floatVertexTextures){if(void 0===x.boneTexture){// layout (1 matrix = 4 pixels)
//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)
//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)
//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)
//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)
//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)
var T=wo(4*S.length);// 4 pixels needed for 1 matrix
T=os.ceilPowerOfTwo(T),T=No(T,4);var A=new Float32Array(4*(T*T));// 4 floats per RGBA pixel
A.set(x.boneMatrices);// copy current values
var B=new me(A,T,T,1023,1015);x.boneMatrices=A,x.boneTexture=B,x.boneTextureSize=T}m.setValue(Fe,"boneTexture",x.boneTexture,je),m.setValue(Fe,"boneTextureSize",x.boneTextureSize)}else m.setOptional(Fe,x,"boneMatrices")}}return(p||o.receiveShadow!==a.receiveShadow)&&(o.receiveShadow=a.receiveShadow,m.setValue(Fe,"receiveShadow",a.receiveShadow)),p&&(m.setValue(Fe,"toneMappingExposure",J.toneMappingExposure),m.setValue(Fe,"toneMappingWhitePoint",J.toneMappingWhitePoint),o.needsLights&&U(f,c),i&&r.fog&&E(f,i),r.isMeshBasicMaterial?y(f,r):r.isMeshLambertMaterial?(y(f,r),w(f,r)):r.isMeshToonMaterial?(y(f,r),R(f,r)):r.isMeshPhongMaterial?(y(f,r),L(f,r)):r.isMeshStandardMaterial?(y(f,r,n),r.isMeshPhysicalMaterial?C(f,r,n):P(f,r,n)):r.isMeshMatcapMaterial?(y(f,r),D(f,r)):r.isMeshDepthMaterial?(y(f,r),I(f,r)):r.isMeshDistanceMaterial?(y(f,r),N(f,r)):r.isMeshNormalMaterial?(y(f,r),z(f,r)):r.isLineBasicMaterial?(v(f,r),r.isLineDashedMaterial&&_(f,r)):r.isPointsMaterial?b(f,r):r.isSpriteMaterial?M(f,r):r.isShadowMaterial&&(f.color.value.copy(r.color),f.opacity.value=r.opacity),void 0!==f.ltc_1&&(f.ltc_1.value=Jl.LTC_1),void 0!==f.ltc_2&&(f.ltc_2.value=Jl.LTC_2),xt.upload(Fe,o.uniformsList,f,je),r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(xt.upload(Fe,o.uniformsList,f,je),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&m.setValue(Fe,"center",a.center),m.setValue(Fe,"modelViewMatrix",a.modelViewMatrix),m.setValue(Fe,"normalMatrix",a.normalMatrix),m.setValue(Fe,"modelMatrix",a.matrixWorld),u}// Uniforms (refresh uniforms objects)
function y(e,t,r){e.opacity.value=t.opacity,t.color&&e.diffuse.value.copy(t.color),t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.specularMap&&(e.specularMap.value=t.specularMap);var a=t.envMap||r;a&&(e.envMap.value=a,e.flipEnvMap.value=a.isCubeTexture?-1:1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio,e.maxMipLevel.value=We.get(a).__maxMipLevel),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);// uv repeat and offset setting priorities
// 1. color map
// 2. specular map
// 3. normal map
// 4. bump map
// 5. alpha map
// 6. emissive map
var i;t.map?i=t.map:t.specularMap?i=t.specularMap:t.displacementMap?i=t.displacementMap:t.normalMap?i=t.normalMap:t.bumpMap?i=t.bumpMap:t.roughnessMap?i=t.roughnessMap:t.metalnessMap?i=t.metalnessMap:t.alphaMap?i=t.alphaMap:t.emissiveMap&&(i=t.emissiveMap),i!==void 0&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix));// uv repeat and offset setting priorities for uv2
// 1. ao map
// 2. light map
var n;t.aoMap?n=t.aoMap:t.lightMap&&(n=t.lightMap),n!==void 0&&(n.isWebGLRenderTarget&&(n=n.texture),!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uv2Transform.value.copy(n.matrix))}function v(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}function _(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function b(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*ue,e.scale.value=.5*ce,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap);// uv repeat and offset setting priorities
// 1. color map
// 2. alpha map
var r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap),r!==void 0&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}function M(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap);// uv repeat and offset setting priorities
// 1. color map
// 2. alpha map
var r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap),r!==void 0&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}function E(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)}function w(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}function L(e,t){e.specular.value.copy(t.specular),e.shininess.value=No(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===1&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===1&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function R(e,t){e.specular.value.copy(t.specular),e.shininess.value=No(t.shininess,1e-4),t.gradientMap&&(e.gradientMap.value=t.gradientMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===1&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===1&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function P(e,t,r){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===1&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===1&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),(t.envMap||r)&&(e.envMapIntensity.value=t.envMapIntensity)}function C(e,t,r){// also part of uniforms common
P(e,t,r),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen),t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===1&&e.clearcoatNormalScale.value.negate()),e.transparency.value=t.transparency}function D(e,t){t.matcap&&(e.matcap.value=t.matcap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===1&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===1&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function I(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function N(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}function z(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===1&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===1&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}// If uniforms are marked as clean, they don't need to be loaded to the GPU.
function U(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.directionalLightShadows.needsUpdate=t,e.pointLights.needsUpdate=t,e.pointLightShadows.needsUpdate=t,e.spotLights.needsUpdate=t,e.spotLightShadows.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}function B(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}//
e=e||{};var F=e.canvas===void 0?document.createElementNS("http://www.w3.org/1999/xhtml","canvas"):e.canvas,O=e.context===void 0?null:e.context,G=e.alpha!==void 0&&e.alpha,H=!(e.depth!==void 0)||e.depth,V=!(e.stencil!==void 0)||e.stencil,k=e.antialias!==void 0&&e.antialias,W=!(e.premultipliedAlpha!==void 0)||e.premultipliedAlpha,j=e.preserveDrawingBuffer!==void 0&&e.preserveDrawingBuffer,q=e.powerPreference===void 0?"default":e.powerPreference,X=e.failIfMajorPerformanceCaveat!==void 0&&e.failIfMajorPerformanceCaveat,Y=null,Z=null;this.domElement=F,this.debug={/**
  		 * Enables error checking and reporting when shader programs are being compiled
  		 * @type {boolean}
  		 */checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=3000,this.physicallyCorrectLights=!1,this.toneMapping=1,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;// internal properties
var J=this,Q=!1,// internal state cache
K=null,$=0,ee=0,te=null,re=null,ae=-1,// geometry and program caching
ie={geometry:null,program:null,wireframe:!1},ne=null,oe=null,se=new x,le=new x,de=null,//
pe=F.width,ce=F.height,ue=1,ye=null,ve=null,Le=new x(0,0,pe,ce),Pe=new x(0,0,pe,ce),Ce=!1,// frustum
De=new ge,// clipping
Ie=new Me,Ne=!1,ze=!1,// camera matrices cache
Ue=new T,Be=new S,Fe;try{var Oe={alpha:G,depth:H,stencil:V,antialias:k,premultipliedAlpha:W,preserveDrawingBuffer:j,powerPreference:q,failIfMajorPerformanceCaveat:X,xrCompatible:!0};// event listeners must be registered before WebGL context is created, see #12753
if(F.addEventListener("webglcontextlost",a,!1),F.addEventListener("webglcontextrestored",i,!1),Fe=O||F.getContext("webgl",Oe)||F.getContext("experimental-webgl",Oe),null===Fe)if(null!==F.getContext("webgl"))throw new Error("Error creating WebGL context with your selected attributes.");else throw new Error("Error creating WebGL context.");// Some experimental-webgl implementations do not have getShaderPrecisionFormat
void 0===Fe.getShaderPrecisionFormat&&(Fe.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}var Ge,He,Ve,ke,We,je,qe,Xe,Ye,Ze,Je,Qe,Ke,$e,et,tt,rt;r();// xr
var at=new pr(J,Fe);this.xr=at;// shadow map
var it=new ir(J,Ye,He.maxTextureSize);this.shadowMap=it,this.getContext=function(){return Fe},this.getContextAttributes=function(){return Fe.getContextAttributes()},this.forceContextLoss=function(){var e=Ge.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){var e=Ge.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return ue},this.setPixelRatio=function(e){void 0===e||(ue=e,this.setSize(pe,ce,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new h),e.set(pe,ce)},this.setSize=function(e,t,r){return at.isPresenting?void console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):void(pe=e,ce=t,F.width=Po(e*ue),F.height=Po(t*ue),!1!==r&&(F.style.width=e+"px",F.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new h),e.set(pe*ue,ce*ue).floor()},this.setDrawingBufferSize=function(e,t,r){pe=e,ce=t,ue=r,F.width=Po(e*r),F.height=Po(t*r),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new x),e.copy(se)},this.getViewport=function(e){return e.copy(Le)},this.setViewport=function(e,t,r,a){e.isVector4?Le.set(e.x,e.y,e.z,e.w):Le.set(e,t,r,a),Ve.viewport(se.copy(Le).multiplyScalar(ue).floor())},this.getScissor=function(e){return e.copy(Pe)},this.setScissor=function(e,t,r,a){e.isVector4?Pe.set(e.x,e.y,e.z,e.w):Pe.set(e,t,r,a),Ve.scissor(le.copy(Pe).multiplyScalar(ue).floor())},this.getScissorTest=function(){return Ce},this.setScissorTest=function(e){Ve.setScissorTest(Ce=e)},this.setOpaqueSort=function(e){ye=e},this.setTransparentSort=function(e){ve=e},this.getClearColor=function(){return Ke.getClearColor()},this.setClearColor=function(){Ke.setClearColor.apply(Ke,arguments)},this.getClearAlpha=function(){return Ke.getClearAlpha()},this.setClearAlpha=function(){Ke.setClearAlpha.apply(Ke,arguments)},this.clear=function(e,t,r){var a=0;(e===void 0||e)&&(a|=16384),(t===void 0||t)&&(a|=256),(r===void 0||r)&&(a|=1024),Fe.clear(a)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){F.removeEventListener("webglcontextlost",a,!1),F.removeEventListener("webglcontextrestored",i,!1),Je.dispose(),Qe.dispose(),We.dispose(),Ye.dispose(),at.dispose(),st.stop(),this.forceContextLoss()},this.renderBufferImmediate=function(e,t){Ve.initAttributes();var r=We.get(e);e.hasPositions&&!r.position&&(r.position=Fe.createBuffer()),e.hasNormals&&!r.normal&&(r.normal=Fe.createBuffer()),e.hasUvs&&!r.uv&&(r.uv=Fe.createBuffer()),e.hasColors&&!r.color&&(r.color=Fe.createBuffer());var a=t.getAttributes();e.hasPositions&&(Fe.bindBuffer(34962,r.position),Fe.bufferData(34962,e.positionArray,35048),Ve.enableAttribute(a.position),Fe.vertexAttribPointer(a.position,3,5126,!1,0,0)),e.hasNormals&&(Fe.bindBuffer(34962,r.normal),Fe.bufferData(34962,e.normalArray,35048),Ve.enableAttribute(a.normal),Fe.vertexAttribPointer(a.normal,3,5126,!1,0,0)),e.hasUvs&&(Fe.bindBuffer(34962,r.uv),Fe.bufferData(34962,e.uvArray,35048),Ve.enableAttribute(a.uv),Fe.vertexAttribPointer(a.uv,2,5126,!1,0,0)),e.hasColors&&(Fe.bindBuffer(34962,r.color),Fe.bufferData(34962,e.colorArray,35048),Ve.enableAttribute(a.color),Fe.vertexAttribPointer(a.color,3,5126,!1,0,0)),Ve.disableUnusedAttributes(),Fe.drawArrays(4,0,e.count),e.count=0};var nt=new A;this.renderBufferDirect=function(e,r,a,i,n,o){null===r&&(r=nt);// renderBufferDirect second parameter used to be fog (could be null)
var s=n.isMesh&&0>n.matrixWorld.determinant(),l=f(e,r,i,n);Ve.setMaterial(i,s);var p=!1;(ie.geometry!==a.id||ie.program!==l.id||ie.wireframe!==(!0===i.wireframe))&&(ie.geometry=a.id,ie.program=l.id,ie.wireframe=!0===i.wireframe,p=!0),(i.morphTargets||i.morphNormals)&&($e.update(n,a,i,l),p=!0);//
var c=a.index,u=a.attributes.position;//
if(null===c){if(void 0===u||0===u.count)return;}else if(0===c.count)return;//
var m=1;!0===i.wireframe&&(c=Xe.getWireframeAttribute(a),m=2);var g=et,h;null!==c&&(h=qe.get(c),g=tt,g.setIndex(h)),p&&(d(n,a,i,l),null!==c&&Fe.bindBuffer(34963,h.buffer));//
var y=null===c?u.count:c.count,v=a.drawRange.start*m,x=a.drawRange.count*m,_=null===o?0:o.start*m,b=null===o?1/0:o.count*m,M=No(v,_),S=Io(y,v+x,_+b)-1,T=No(0,S-M+1);if(0!==T){//
if(n.isMesh)!0===i.wireframe?(Ve.setLineWidth(i.wireframeLinewidth*t()),g.setMode(1)):g.setMode(4);else if(n.isLine){var E=i.linewidth;void 0===E&&(E=1),Ve.setLineWidth(E*t()),n.isLineSegments?g.setMode(1):n.isLineLoop?g.setMode(2):g.setMode(3)}else n.isPoints?g.setMode(0):n.isSprite&&g.setMode(4);n.isInstancedMesh?g.renderInstances(a,M,T,n.count):a.isInstancedBufferGeometry?g.renderInstances(a,M,T,a.maxInstancedCount):g.render(M,T)}},this.compile=function(e,t){Z=Qe.get(e,t),Z.init(),e.traverse(function(e){e.isLight&&(Z.pushLight(e),e.castShadow&&Z.pushShadow(e))}),Z.setupLights(t);var r={};e.traverse(function(t){if(t.material)if(Array.isArray(t.material))for(var a=0;a<t.material.length;a++)!1==t.material[a].uuid in r&&(g(t.material[a],e,t),r[t.material[a].uuid]=!0);else!1==t.material.uuid in r&&(g(t.material,e,t),r[t.material.uuid]=!0)})};// Animation Loop
var ot=null,st=new fe;// Rendering
st.setAnimationLoop(p),"undefined"!=typeof window&&st.setContext(window),this.setAnimationLoop=function(e){ot=e,at.setAnimationLoop(e),st.start()},this.render=function(e,t){var r,a;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),r=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),a=arguments[3]),!(t&&t.isCamera))return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!Q){ie.geometry=null,ie.program=null,ie.wireframe=!1,ae=-1,ne=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),at.enabled&&at.isPresenting&&(t=at.getCamera(t)),Z=Qe.get(e,t),Z.init(),e.onBeforeRender(J,e,t,r||te),Ue.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),De.setFromProjectionMatrix(Ue),ze=this.localClippingEnabled,Ne=Ie.init(this.clippingPlanes,ze,t),Y=Je.get(e,t),Y.init(),c(e,t,0,J.sortObjects),Y.finish(),!0===J.sortObjects&&Y.sort(ye,ve),Ne&&Ie.beginShadows();var i=Z.state.shadowsArray;it.render(i,e,t),Z.setupLights(t),Ne&&Ie.endShadows(),this.info.autoReset&&this.info.reset(),void 0!==r&&this.setRenderTarget(r),Ke.render(Y,e,t,a);// render scene
var n=Y.opaque,o=Y.transparent;if(e.overrideMaterial){var s=e.overrideMaterial;n.length&&u(n,e,t,s),o.length&&u(o,e,t,s)}else n.length&&u(n,e,t),o.length&&u(o,e,t);//
e.onAfterRender(J,e,t),null!==te&&(je.updateRenderTargetMipmap(te),je.updateMultisampleRenderTarget(te)),Ve.buffers.depth.setTest(!0),Ve.buffers.depth.setMask(!0),Ve.buffers.color.setMask(!0),Ve.setPolygonOffset(!1),Y=null,Z=null}// reset caching for this frame
},this.setFramebuffer=function(e){K!==e&&null===te&&Fe.bindFramebuffer(36160,e),K=e},this.getActiveCubeFace=function(){return $},this.getActiveMipmapLevel=function(){return ee},this.getRenderTarget=function(){return te},this.setRenderTarget=function(e,t,r){te=e,$=t,ee=r,e&&void 0===We.get(e).__webglFramebuffer&&je.setupRenderTarget(e);var a=K,i=!1;if(e){var n=We.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(a=n[t||0],i=!0):e.isWebGLMultisampleRenderTarget?a=We.get(e).__webglMultisampledFramebuffer:a=n,se.copy(e.viewport),le.copy(e.scissor),de=e.scissorTest}else se.copy(Le).multiplyScalar(ue).floor(),le.copy(Pe).multiplyScalar(ue).floor(),de=Ce;if(re!==a&&(Fe.bindFramebuffer(36160,a),re=a),Ve.viewport(se),Ve.scissor(le),Ve.setScissorTest(de),i){var o=We.get(e.texture);Fe.framebufferTexture2D(36160,36064,34069+(t||0),o.__webglTexture,r||0)}},this.readRenderTargetPixels=function(e,t,r,a,i,n,o){if(!(e&&e.isWebGLRenderTarget))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");var s=We.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(s=s[o]),s){var l=!1;s!==re&&(Fe.bindFramebuffer(36160,s),l=!0);try{var d=e.texture,p=d.format,c=d.type;if(1023!==p&&rt.convert(p)!==Fe.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(1009!==c&&rt.convert(c)!==Fe.getParameter(35738)&&// IE11, Edge and Chrome Mac < 52 (#9513)
!(1015===c&&(He.isWebGL2||Ge.get("OES_texture_float")||Ge.get("WEBGL_color_buffer_float")))&&// Chrome Mac >= 52 and Firefox
!(1016===c&&(He.isWebGL2?Ge.get("EXT_color_buffer_float"):Ge.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===Fe.checkFramebufferStatus(36160)?0<=t&&t<=e.width-a&&0<=r&&r<=e.height-i&&Fe.readPixels(t,r,a,i,rt.convert(p),rt.convert(c),n):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{l&&Fe.bindFramebuffer(36160,re)}}},this.copyFramebufferToTexture=function(e,t,r){r===void 0&&(r=0);var a=Do(2,-r),i=Po(t.image.width*a),n=Po(t.image.height*a),o=rt.convert(t.format);je.setTexture2D(t,0),Fe.copyTexImage2D(3553,r,o,e.x,e.y,i,n,0),Ve.unbindTexture()},this.copyTextureToTexture=function(e,t,r,a){var i=t.image.width,n=t.image.height,o=rt.convert(r.format),s=rt.convert(r.type);je.setTexture2D(r,0),t.isDataTexture?Fe.texSubImage2D(3553,a||0,e.x,e.y,i,n,o,s,t.image.data):Fe.texSubImage2D(3553,a||0,e.x,e.y,o,s,t.image),Ve.unbindTexture()},this.initTexture=function(e){je.setTexture2D(e,0),Ve.unbindTexture()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   */function ur(e,t){this.name="",this.color=new U(e),this.density=t===void 0?25e-5:t}/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   */function mr(e,t,r){this.name="",this.color=new U(e),this.near=t===void 0?1:t,this.far=r===void 0?1e3:r}/**
   * @author benaadams / https://twitter.com/ben_a_adams
   */function gr(e,t){this.array=e,this.stride=t,this.count=e===void 0?0:e.length/t,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}function fr(e,t,r,a){this.data=e,this.itemSize=t,this.offset=r,this.normalized=!0===a}/**
   * @author alteredq / http://alteredqualia.com/
   *
   * parameters = {
   *  color: <hex>,
   *  map: new THREE.Texture( <Image> ),
   *  alphaMap: new THREE.Texture( <Image> ),
   *  rotation: <float>,
   *  sizeAttenuation: <bool>
   * }
   */function hr(e){H.call(this),this.type="SpriteMaterial",this.color=new U(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}function yr(e){if(L.call(this),this.type="Sprite",void 0===Ld){Ld=new te;var t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),r=new gr(t,5);Ld.setIndex([0,1,2,0,2,3]),Ld.setAttribute("position",new fr(r,3,0,!1)),Ld.setAttribute("uv",new fr(r,2,3,!1))}this.geometry=Ld,this.material=void 0===e?new hr:e,this.center=new h(.5,.5)}function vr(e,t,r,a,i,n){// compute position in camera space
// transform to world space
vd.subVectors(e,r).addScalar(.5).multiply(a),i===void 0?xd.copy(vd):(xd.x=n*vd.x-i*vd.y,xd.y=i*vd.x+n*vd.y),e.copy(t),e.x+=xd.x,e.y+=xd.y,e.applyMatrix4(_d)}/**
   * @author mikael emtinger / http://gomo.se/
   * @author alteredq / http://alteredqualia.com/
   * @author mrdoob / http://mrdoob.com/
   */function xr(){L.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}/**
   * @author mikael emtinger / http://gomo.se/
   * @author alteredq / http://alteredqualia.com/
   * @author ikerr / http://verold.com
   */function _r(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),re.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new T,this.bindMatrixInverse=new T}function br(e,t){// use the supplied bone inverses or calculate the inverses
if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.frame=-1,void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var r=0,a=this.bones.length;r<a;r++)this.boneInverses.push(new T)}}/**
   * @author mikael emtinger / http://gomo.se/
   * @author alteredq / http://alteredqualia.com/
   * @author ikerr / http://verold.com
   */function Mr(){L.call(this),this.type="Bone"}function Sr(e,t,r){re.call(this,e,t),this.instanceMatrix=new k(new Float32Array(16*r),16),this.count=r,this.frustumCulled=!1}/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   *
   * parameters = {
   *  color: <hex>,
   *  opacity: <float>,
   *
   *  linewidth: <float>,
   *  linecap: "round",
   *  linejoin: "round"
   * }
   */function Tr(e){H.call(this),this.type="LineBasicMaterial",this.color=new U(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}function Er(e,t,r){1===r&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),L.call(this),this.type="Line",this.geometry=e===void 0?new te:e,this.material=t===void 0?new Tr:t}function wr(e,t){Er.call(this,e,t),this.type="LineSegments"}/**
   * @author mgreter / http://github.com/mgreter
   */function Lr(e,t){Er.call(this,e,t),this.type="LineLoop"}/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   *
   * parameters = {
   *  color: <hex>,
   *  opacity: <float>,
   *  map: new THREE.Texture( <Image> ),
   *  alphaMap: new THREE.Texture( <Image> ),
   *
   *  size: <float>,
   *  sizeAttenuation: <bool>
   *
   *  morphTargets: <bool>
   * }
   */function Ar(e){H.call(this),this.type="PointsMaterial",this.color=new U(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}function Rr(e,t){L.call(this),this.type="Points",this.geometry=e===void 0?new te:e,this.material=t===void 0?new Ar:t,this.updateMorphTargets()}function Pr(e,t,r,a,i,n,o){var s=Wd.distanceSqToPoint(e);if(s<r){var l=new S;Wd.closestPointToPoint(e,l),l.applyMatrix4(a);var d=i.ray.origin.distanceTo(l);if(d<i.near||d>i.far)return;n.push({distance:d,distanceToRay:wo(s),point:l,index:t,face:null,object:o})}}/**
   * @author mrdoob / http://mrdoob.com/
   */function Cr(e,t,r,a,i,n,o,s,l){v.call(this,e,t,r,a,i,n,o,s,l),this.format=o===void 0?1022:o,this.minFilter=n===void 0?1006:n,this.magFilter=i===void 0?1006:i,this.generateMipmaps=!1}/**
   * @author alteredq / http://alteredqualia.com/
   */function Dr(e,t,r,a,i,n,o,s,l,d,p,c){// no flipping for cube textures
// (also flipping doesn't work for compressed textures )
// can't generate mipmaps for compressed textures
// mips must be embedded in DDS files
v.call(this,null,n,o,s,l,d,a,i,p,c),this.image={width:t,height:r},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}/**
   * @author mrdoob / http://mrdoob.com/
   */function Ir(e,t,r,a,i,n,o,s,l){v.call(this,e,t,r,a,i,n,o,s,l),this.needsUpdate=!0}/**
   * @author Matt DesLauriers / @mattdesl
   * @author atix / arthursilber.de
   */function Nr(e,t,r,a,i,n,o,s,l,d){if(d=void 0===d?1026:d,1026!==d&&1027!==d)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===r&&1026===d&&(r=1012),void 0===r&&1027===d&&(r=1020),v.call(this,null,a,i,n,o,s,d,r,l),this.image={width:e,height:t},this.magFilter=void 0===o?1003:o,this.minFilter=void 0===s?1003:s,this.flipY=!1,this.generateMipmaps=!1}/**
   * @author mrdoob / http://mrdoob.com/
   * @author Mugen87 / https://github.com/Mugen87
   */function zr(t){te.call(this),this.type="WireframeGeometry";// buffer
var r=[],a=[0,0],n={},s=["a","b","c"],d,p,c,u,m,g,f,h,y,v;// helper variables
// different logic for Geometry and BufferGeometry
if(t&&t.isGeometry){// create a data structure that contains all edges without duplicates
var x=t.faces;for(d=0,c=x.length;d<c;d++){var _=x[d];for(p=0;3>p;p++)// sorting prevents duplicates
f=_[s[p]],h=_[s[(p+1)%3]],a[0]=Io(f,h),a[1]=No(f,h),y=a[0]+","+a[1],void 0===n[y]&&(n[y]={index1:a[0],index2:a[1]})}// generate vertices
for(y in n)g=n[y],v=t.vertices[g.index1],r.push(v.x,v.y,v.z),v=t.vertices[g.index2],r.push(v.x,v.y,v.z)}else if(t&&t.isBufferGeometry){var b,M,T,E,w,L,A,R;if(v=new S,null!==t.index){// create a data structure that contains all eges without duplicates
for(b=t.attributes.position,M=t.index,T=t.groups,0===T.length&&(T=[{start:0,count:M.count,materialIndex:0}]),(u=0,m=T.length);u<m;++u)for(E=T[u],w=E.start,L=E.count,(d=w,c=w+L);d<c;d+=3)for(p=0;3>p;p++)// sorting prevents duplicates
f=M.getX(d+p),h=M.getX(d+(p+1)%3),a[0]=Io(f,h),a[1]=No(f,h),y=a[0]+","+a[1],void 0===n[y]&&(n[y]={index1:a[0],index2:a[1]});// generate vertices
for(y in n)g=n[y],v.fromBufferAttribute(b,g.index1),r.push(v.x,v.y,v.z),v.fromBufferAttribute(b,g.index2),r.push(v.x,v.y,v.z)}else for(b=t.attributes.position,d=0,c=b.count/3;d<c;d++)for(p=0;3>p;p++)// three edges per triangle, an edge is represented as (index1, index2)
// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)
A=3*d+p,v.fromBufferAttribute(b,A),r.push(v.x,v.y,v.z),R=3*d+(p+1)%3,v.fromBufferAttribute(b,R),r.push(v.x,v.y,v.z)}// build geometry
this.setAttribute("position",new Q(r,3))}/**
   * @author zz85 / https://github.com/zz85
   * @author Mugen87 / https://github.com/Mugen87
   *
   * Parametric Surfaces Geometry
   * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html
   */ // ParametricGeometry
function Ur(e,t,r){ne.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:r},this.fromBufferGeometry(new Br(e,t,r)),this.mergeVertices()}// ParametricBufferGeometry
function Br(e,t,r){te.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:r};// buffers
var n=[],o=[],s=[],l=[],p=1e-5,m=new S,g=new S,f=new S,h=new S,y=new S,x,_;3>e.length&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");// generate vertices, normals and uvs
var M=t+1;for(x=0;x<=r;x++){var T=x/r;for(_=0;_<=t;_++){var v=_/t;// vertex
// cross product of tangent vectors returns surface normal
// uv
e(v,T,g),o.push(g.x,g.y,g.z),0<=v-p?(e(v-p,T,f),h.subVectors(g,f)):(e(v+p,T,f),h.subVectors(f,g)),0<=T-p?(e(v,T-p,f),y.subVectors(g,f)):(e(v,T+p,f),y.subVectors(f,g)),m.crossVectors(h,y).normalize(),s.push(m.x,m.y,m.z),l.push(v,T)}}// generate indices
for(x=0;x<r;x++)for(_=0;_<t;_++){var u=x*M+_,a=x*M+_+1,b=(x+1)*M+_+1,c=(x+1)*M+_;// faces one and two
n.push(u,a,c),n.push(a,b,c)}// build geometry
this.setIndex(n),this.setAttribute("position",new Q(o,3)),this.setAttribute("normal",new Q(s,3)),this.setAttribute("uv",new Q(l,2))}/**
   * @author clockworkgeek / https://github.com/clockworkgeek
   * @author timothypratley / https://github.com/timothypratley
   * @author WestLangley / http://github.com/WestLangley
   * @author Mugen87 / https://github.com/Mugen87
   */ // PolyhedronGeometry
function Fr(e,t,r,a){ne.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:a},this.fromBufferGeometry(new Or(e,t,r,a)),this.mergeVertices()}// PolyhedronBufferGeometry
function Or(e,t,r,a){// helper functions
function i(e){// iterate over all faces and apply a subdivison with the given detail value
for(var r=new S,a=new S,o=new S,s=0;s<t.length;s+=3)// get the vertices of the face
// perform subdivision
p(t[s+0],r),p(t[s+1],a),p(t[s+2],o),n(r,a,o,e)}function n(e,t,r,a){var n=Do(2,a),o=[],s,l;// we use this multidimensional array as a data structure for creating the subdivision
// construct all of the vertices for this subdivision
for(s=0;s<=n;s++){o[s]=[];var p=e.clone().lerp(r,s/n),c=t.clone().lerp(r,s/n),u=n-s;for(l=0;l<=u;l++)o[s][l]=0===l&&s===n?p:p.clone().lerp(c,l/u)}// construct all of the faces
for(s=0;s<n;s++)for(l=0;l<2*(n-s)-1;l++){var m=Po(l/2);0==l%2?(d(o[s][m+1]),d(o[s+1][m]),d(o[s][m])):(d(o[s][m+1]),d(o[s+1][m+1]),d(o[s+1][m]))}}function o(e){// iterate over the entire buffer and apply the radius to each vertex
for(var t=new S,r=0;r<f.length;r+=3)t.x=f[r+0],t.y=f[r+1],t.z=f[r+2],t.normalize().multiplyScalar(e),f[r+0]=t.x,f[r+1]=t.y,f[r+2]=t.z}function s(){for(var e=new S,t=0;t<f.length;t+=3){e.x=f[t+0],e.y=f[t+1],e.z=f[t+2];var r=m(e)/2/Eo+.5,a=g(e)/Eo+.5;y.push(r,1-a)}c(),l()}function l(){// handle case when face straddles the seam, see #3269
for(var e=0;e<y.length;e+=6){// uv data of a single face
var t=y[e+0],r=y[e+2],a=y[e+4],n=No(t,r,a),o=Io(t,r,a);.9<n&&.1>o&&(.2>t&&(y[e+0]+=1),.2>r&&(y[e+2]+=1),.2>a&&(y[e+4]+=1))}}function d(e){f.push(e.x,e.y,e.z)}function p(t,r){var a=3*t;r.x=e[a+0],r.y=e[a+1],r.z=e[a+2]}function c(){for(var e=new S,t=new S,r=new S,a=new S,n=new h,o=new h,s=new h,l=0,d=0;l<f.length;l+=9,d+=6){e.set(f[l+0],f[l+1],f[l+2]),t.set(f[l+3],f[l+4],f[l+5]),r.set(f[l+6],f[l+7],f[l+8]),n.set(y[d+0],y[d+1]),o.set(y[d+2],y[d+3]),s.set(y[d+4],y[d+5]),a.copy(e).add(t).add(r).divideScalar(3);var p=m(a);u(n,d+0,e,p),u(o,d+2,t,p),u(s,d+4,r,p)}}function u(e,t,r,a){0>a&&1===e.x&&(y[t]=e.x-1),0===r.x&&0===r.z&&(y[t]=a/2/Eo+.5)}// Angle around the Y axis, counter-clockwise when looking from above.
function m(e){return To(e.z,-e.x)}// Angle above the XZ plane.
function g(e){return To(-e.y,wo(e.x*e.x+e.z*e.z))}te.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:a},r=r||1,a=a||0;// default buffer data
var f=[],y=[];// the subdivision creates the vertex buffer data
// all vertices should lie on a conceptual sphere with a given radius
// finally, create the uv data
// build non-indexed geometry
i(a),o(r),s(),this.setAttribute("position",new Q(f,3)),this.setAttribute("normal",new Q(f.slice(),3)),this.setAttribute("uv",new Q(y,2)),0===a?this.computeVertexNormals():this.normalizeNormals()}/**
   * @author timothypratley / https://github.com/timothypratley
   * @author Mugen87 / https://github.com/Mugen87
   */ // TetrahedronGeometry
function Gr(e,t){ne.call(this),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Hr(e,t)),this.mergeVertices()}// TetrahedronBufferGeometry
function Hr(e,t){Or.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}/**
   * @author timothypratley / https://github.com/timothypratley
   * @author Mugen87 / https://github.com/Mugen87
   */ // OctahedronGeometry
function Vr(e,t){ne.call(this),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new kr(e,t)),this.mergeVertices()}// OctahedronBufferGeometry
function kr(e,t){Or.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}/**
   * @author timothypratley / https://github.com/timothypratley
   * @author Mugen87 / https://github.com/Mugen87
   */ // IcosahedronGeometry
function Wr(e,t){ne.call(this),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new jr(e,t)),this.mergeVertices()}// IcosahedronBufferGeometry
function jr(e,r){var a=(1+wo(5))/2;Or.call(this,[-1,a,0,1,a,0,-1,-a,0,1,-a,0,0,-1,a,0,1,a,0,-1,-a,0,1,-a,a,0,-1,a,0,1,-a,0,-1,-a,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,r),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:r}}/**
   * @author Abe Pazos / https://hamoid.com
   * @author Mugen87 / https://github.com/Mugen87
   */ // DodecahedronGeometry
function qr(e,t){ne.call(this),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Xr(e,t)),this.mergeVertices()}// DodecahedronBufferGeometry
function Xr(e,a){var i=(1+wo(5))/2,t=1/i;Or.call(this,[// (±1, ±1, ±1)
-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,// (0, ±1/φ, ±φ)
0,-t,-i,0,-t,i,0,t,-i,0,t,i,// (±1/φ, ±φ, 0)
-t,-i,0,-t,i,0,t,-i,0,t,i,0,// (±φ, 0, ±1/φ)
-i,0,-t,i,0,-t,-i,0,t,i,0,t],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,a),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:a}}/**
   * @author oosmoxiecode / https://github.com/oosmoxiecode
   * @author WestLangley / https://github.com/WestLangley
   * @author zz85 / https://github.com/zz85
   * @author miningold / https://github.com/miningold
   * @author jonobr1 / https://github.com/jonobr1
   * @author Mugen87 / https://github.com/Mugen87
   *
   */ // TubeGeometry
function Yr(e,t,r,a,i,n){ne.call(this),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:a,closed:i},n!==void 0&&console.warn("THREE.TubeGeometry: taper has been removed.");var o=new Zr(e,t,r,a,i);// expose internals
// create geometry
this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}// TubeBufferGeometry
function Zr(e,t,r,n,o){// functions
function s(){for(_=0;_<t;_++)l(_);// if the geometry is not closed, generate the last row of vertices and normals
// at the regular position on the given path
//
// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)
// uvs are generated in a separate function.
// this makes it easy compute correct values for closed geometries
// finally create faces
l(!1===o?t:0),p(),d()}function l(o){a=e.getPointAt(o/t,a);// retrieve corresponding normal and binormal
var i=c.normals[o],s=c.binormals[o];// generate normals and vertices for the current segment
for(M=0;M<=n;M++){var l=2*(M/n*Eo),d=So(l),p=-Ro(l);// normal
// vertex
m.x=p*i.x+d*s.x,m.y=p*i.y+d*s.y,m.z=p*i.z+d*s.z,m.normalize(),y.push(m.x,m.y,m.z),u.x=a.x+r*m.x,u.y=a.y+r*m.y,u.z=a.z+r*m.z,f.push(u.x,u.y,u.z)}}function d(){for(M=1;M<=t;M++)for(_=1;_<=n;_++){var e=(n+1)*(M-1)+(_-1),r=(n+1)*M+(_-1),a=(n+1)*M+_,i=(n+1)*(M-1)+_;// faces
x.push(e,r,i),x.push(r,a,i)}}function p(){for(_=0;_<=t;_++)for(M=0;M<=n;M++)g.x=_/t,g.y=M/n,v.push(g.x,g.y)}te.call(this),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:n,closed:o},t=t||64,r=r||1,n=n||8,o=o||!1;var c=e.computeFrenetFrames(t,o);// expose internals
this.tangents=c.tangents,this.normals=c.normals,this.binormals=c.binormals;// helper variables
var u=new S,m=new S,g=new h,a=new S,f=[],y=[],v=[],x=[],_,M;// create buffer data
// build geometry
s(),this.setIndex(x),this.setAttribute("position",new Q(f,3)),this.setAttribute("normal",new Q(y,3)),this.setAttribute("uv",new Q(v,2))}/**
   * @author oosmoxiecode
   * @author Mugen87 / https://github.com/Mugen87
   *
   * based on http://www.blackpawn.com/texts/pqtorus/
   */ // TorusKnotGeometry
function Jr(e,t,r,a,i,n,o){ne.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:a,p:i,q:n},o!==void 0&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new Qr(e,t,r,a,i,n)),this.mergeVertices()}// TorusKnotBufferGeometry
function Qr(e,t,r,n,o,s){// this function calculates the current position on the torus curve
function l(e,t,r,a,i){var n=Ro(e),o=So(e),s=r/t*e,l=Ro(s);i.x=.5*(a*(2+l))*n,i.y=.5*(a*(2+l)*o),i.z=.5*(a*So(s))}te.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:o,q:s},e=e||1,t=t||.4,r=Po(r)||64,n=Po(n)||8,o=o||2,s=s||3;// buffers
var m=[],g=[],f=[],h=[],y=new S,x=new S,_=new S,M=new S,E=new S,w=new S,T=new S,L,A;// generate vertices, normals and uvs
for(L=0;L<=r;++L){// the radian "u" is used to calculate the position on the torus curve of the current tubular segement
var R=2*(L/r*o*Eo);// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.
// these points are used to create a special "coordinate space", which is necessary to calculate the correct vertex positions
for(l(R,o,s,e,_),l(R+.01,o,s,e,M),w.subVectors(M,_),T.addVectors(M,_),E.crossVectors(w,T),T.crossVectors(E,w),E.normalize(),T.normalize(),A=0;A<=n;++A){// now calculate the vertices. they are nothing more than an extrusion of the torus curve.
// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.
var u=2*(A/n*Eo),v=-t*Ro(u),P=t*So(u);// now calculate the final vertex position.
// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve
// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)
// uv
y.x=_.x+(v*T.x+P*E.x),y.y=_.y+(v*T.y+P*E.y),y.z=_.z+(v*T.z+P*E.z),g.push(y.x,y.y,y.z),x.subVectors(y,_).normalize(),f.push(x.x,x.y,x.z),h.push(L/r),h.push(A/n)}}// generate indices
for(A=1;A<=r;A++)for(L=1;L<=n;L++){// indices
var C=(n+1)*(A-1)+(L-1),a=(n+1)*A+(L-1),b=(n+1)*A+L,c=(n+1)*(A-1)+L;// faces
m.push(C,a,c),m.push(a,b,c)}// build geometry
this.setIndex(m),this.setAttribute("position",new Q(g,3)),this.setAttribute("normal",new Q(f,3)),this.setAttribute("uv",new Q(h,2))}/**
   * @author oosmoxiecode
   * @author mrdoob / http://mrdoob.com/
   * @author Mugen87 / https://github.com/Mugen87
   */ // TorusGeometry
function Kr(e,t,r,a,i){ne.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:a,arc:i},this.fromBufferGeometry(new $r(e,t,r,a,i)),this.mergeVertices()}// TorusBufferGeometry
function $r(e,t,r,n,o){te.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:o},e=e||1,t=t||.4,r=Po(r)||8,n=Po(n)||6,o=o||2*Eo;// buffers
var s=[],l=[],p=[],m=[],g=new S,f=new S,h=new S,y,x;// generate vertices, normals and uvs
for(y=0;y<=r;y++)for(x=0;x<=n;x++){var _=x/n*o,u=2*(y/r*Eo);// vertex
// normal
// uv
f.x=(e+t*Ro(u))*Ro(_),f.y=(e+t*Ro(u))*So(_),f.z=t*So(u),l.push(f.x,f.y,f.z),g.x=e*Ro(_),g.y=e*So(_),h.subVectors(f,g).normalize(),p.push(h.x,h.y,h.z),m.push(x/n),m.push(y/r)}// generate indices
for(y=1;y<=r;y++)for(x=1;x<=n;x++){// indices
var v=(n+1)*y+x-1,a=(n+1)*(y-1)+x-1,b=(n+1)*(y-1)+x,c=(n+1)*y+x;// faces
s.push(v,a,c),s.push(a,b,c)}// build geometry
this.setIndex(s),this.setAttribute("position",new Q(l,3)),this.setAttribute("normal",new Q(p,3)),this.setAttribute("uv",new Q(m,2))}// create a circular doubly linked list from polygon points in the specified winding order
function ea(e,t,r,a,n){var o,s;if(n===0<La(e,t,r,a))for(o=t;o<r;o+=a)s=Ta(o,e[o],e[o+1],s);else for(o=r-a;o>=t;o-=a)s=Ta(o,e[o],e[o+1],s);return s&&va(s,s.next)&&(Ea(s),s=s.next),s}// eliminate colinear or duplicate points
function ta(e,t){if(!e)return e;t||(t=e);var r=e,a;do if(a=!1,!r.steiner&&(va(r,r.next)||0===ya(r.prev,r,r.next))){if(Ea(r),r=t=r.prev,r===r.next)break;a=!0}else r=r.next;while(a||r!==t);return t}// main ear slicing loop which triangulates a polygon (given as a linked list)
function ra(e,t,r,a,i,n,o){if(e){!o&&n&&ca(e,a,i,n);// iterate through ears, slicing them one by one
for(var s=e,l,d;e.prev!==e.next;){if(l=e.prev,d=e.next,n?ia(e,a,i,n):aa(e)){t.push(l.i/r),t.push(e.i/r),t.push(d.i/r),Ea(e),e=d.next,s=d.next;continue}// if we looped through the whole remaining polygon and can't find any more ears
if(e=d,e===s){o?1===o?(e=na(e,t,r),ra(e,t,r,a,i,n,2)):2==o&&oa(e,t,r,a,i,n):ra(ta(e),t,r,a,i,n,1);break}}}// interlink polygon nodes in z-order
}// check whether a polygon node forms a valid ear with adjacent nodes
function aa(e){var t=e.prev,r=e,a=e.next;if(0<=ya(t,r,a))return!1;// reflex, can't be an ear
// now make sure we don't have other points inside the potential ear
for(var i=e.next.next;i!==e.prev;){if(fa(t.x,t.y,r.x,r.y,a.x,a.y,i.x,i.y)&&0<=ya(i.prev,i,i.next))return!1;i=i.next}return!0}function ia(e,t,r,i){var o=e.prev,a=e,s=e.next;if(0<=ya(o,a,s))return!1;// reflex, can't be an ear
// triangle bbox; min & max are calculated like this for speed
// look for points inside the triangle in both directions
for(var l=o.x<a.x?o.x<s.x?o.x:s.x:a.x<s.x?a.x:s.x,d=o.y<a.y?o.y<s.y?o.y:s.y:a.y<s.y?a.y:s.y,c=o.x>a.x?o.x>s.x?o.x:s.x:a.x>s.x?a.x:s.x,u=o.y>a.y?o.y>s.y?o.y:s.y:a.y>s.y?a.y:s.y,m=ma(l,d,t,r,i),g=ma(c,u,t,r,i),f=e.prevZ,h=e.nextZ// z-order range for the current triangle bbox;
;f&&f.z>=m&&h&&h.z<=g;){if(f!==e.prev&&f!==e.next&&fa(o.x,o.y,a.x,a.y,s.x,s.y,f.x,f.y)&&0<=ya(f.prev,f,f.next))return!1;if(f=f.prevZ,h!==e.prev&&h!==e.next&&fa(o.x,o.y,a.x,a.y,s.x,s.y,h.x,h.y)&&0<=ya(h.prev,h,h.next))return!1;h=h.nextZ}// look for remaining points in decreasing z-order
for(;f&&f.z>=m;){if(f!==e.prev&&f!==e.next&&fa(o.x,o.y,a.x,a.y,s.x,s.y,f.x,f.y)&&0<=ya(f.prev,f,f.next))return!1;f=f.prevZ}// look for remaining points in increasing z-order
for(;h&&h.z<=g;){if(h!==e.prev&&h!==e.next&&fa(o.x,o.y,a.x,a.y,s.x,s.y,h.x,h.y)&&0<=ya(h.prev,h,h.next))return!1;h=h.nextZ}return!0}// go through all polygon nodes and cure small local self-intersections
function na(e,t,r){var i=e;do{var n=i.prev,a=i.next.next;!va(n,a)&&xa(n,i,i.next,a)&&ba(n,a)&&ba(a,n)&&(t.push(n.i/r),t.push(i.i/r),t.push(a.i/r),Ea(i),Ea(i.next),i=e=a),i=i.next}while(i!==e);return i}// try splitting polygon into two and triangulate them independently
function oa(e,t,r,i,n,o){// look for a valid diagonal that divides the polygon into two
var s=e;do{for(var l=s.next.next;l!==s.prev;){if(s.i!==l.i&&ha(s,l)){// split the polygon in two by the diagonal
var d=Sa(s,l);// filter colinear points around the cuts
return s=ta(s,s.next),d=ta(d,d.next),ra(s,t,r,i,n,o),void ra(d,t,r,i,n,o)}l=l.next}s=s.next}while(s!==e)}// link every hole into the outer loop, producing a single-ring polygon without holes
function sa(e,t,r,a){var n=[],o,s,l,d,p;for(o=0,s=t.length;o<s;o++)l=t[o]*a,d=o<s-1?t[o+1]*a:e.length,p=ea(e,l,d,a,!1),p===p.next&&(p.steiner=!0),n.push(ga(p));// process holes from left to right
for(n.sort(la),o=0;o<n.length;o++)da(n[o],r),r=ta(r,r.next);return r}function la(e,t){return e.x-t.x}// find a bridge between vertices that connects hole with an outer ring and and link it
function da(e,t){if(t=pa(e,t),t){var r=Sa(t,e);ta(r,r.next)}}// David Eberly's algorithm for finding a bridge between hole and outer polygon
function pa(e,t){var r=t,a=e.x,i=e.y,n=-Infinity,o;// find a segment intersected by a ray from the hole's leftmost point to the left;
// segment's endpoint with lesser x will be potential connection point
do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var s=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=a&&s>n){if(n=s,s===a){if(i===r.y)return r;if(i===r.next.y)return r.next}o=r.x<r.next.x?r:r.next}}r=r.next}while(r!==t);if(!o)return null;if(a===n)return o.prev;// hole touches outer segment; pick lower endpoint
// look for points inside the triangle of hole point, segment intersection and endpoint;
// if there are no points found, we have a valid connection;
// otherwise choose the point of the minimum angle with the ray as connection point
var l=o,d=o.x,c=o.y,u=1/0,g;for(r=o.next;r!==l;)a>=r.x&&r.x>=d&&a!==r.x&&fa(i<c?a:n,i,d,c,i<c?n:a,i,r.x,r.y)&&(g=zo(i-r.y)/(a-r.x),(g<u||g===u&&r.x>o.x)&&ba(r,e)&&(o=r,u=g)),r=r.next;return o}// interlink polygon nodes in z-order
function ca(e,t,r,a){var i=e;do null===i.z&&(i.z=ma(i.x,i.y,t,r,a)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,ua(i)}// Simon Tatham's linked list merge sort algorithm
// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html
function ua(t){var r=1,a,n,o,s,l,d,c,u;do{for(n=t,t=null,l=null,d=0;n;){for(d++,o=n,c=0,a=0;a<r&&(c++,o=o.nextZ,!!o);a++);for(u=r;0<c||0<u&&o;)0!==c&&(0===u||!o||n.z<=o.z)?(s=n,n=n.nextZ,c--):(s=o,o=o.nextZ,u--),l?l.nextZ=s:t=s,s.prevZ=l,l=s;n=o}l.nextZ=null,r*=2}while(1<d);return t}// z-order of a point given coords and inverse of the longer side of data bbox
function ma(e,t,r,a,i){return e=32767*(e-r)*i,t=32767*(t-a)*i,e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),e|t<<1}// find the leftmost node of a polygon ring
function ga(e){var t=e,r=e;do(t.x<r.x||t.x===r.x&&t.y<r.y)&&(r=t),t=t.next;while(t!==e);return r}// check if a point lies within a convex triangle
function fa(e,t,r,a,i,n,o,s){return 0<=(i-o)*(t-s)-(e-o)*(n-s)&&0<=(e-o)*(a-s)-(r-o)*(t-s)&&0<=(r-o)*(n-s)-(i-o)*(a-s)}// check if a diagonal between two polygon nodes is valid (lies in polygon interior)
function ha(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!_a(e,t)&&ba(e,t)&&ba(t,e)&&Ma(e,t)}// signed area of a triangle
function ya(e,t,a){return(t.y-e.y)*(a.x-t.x)-(t.x-e.x)*(a.y-t.y)}// check if two points are equal
function va(e,t){return e.x===t.x&&e.y===t.y}// check if two segments intersect
function xa(e,t,r,a){return!!(va(e,r)&&va(t,a)||va(e,a)&&va(r,t))||0<ya(e,t,r)!=0<ya(e,t,a)&&0<ya(r,a,e)!=0<ya(r,a,t)}// check if a polygon diagonal intersects any polygon segments
function _a(e,t){var r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&xa(r,r.next,e,t))return!0;r=r.next}while(r!==e);return!1}// check if a polygon diagonal is locally inside the polygon
function ba(e,t){return 0>ya(e.prev,e,e.next)?0<=ya(e,t,e.next)&&0<=ya(e,e.prev,t):0>ya(e,t,e.prev)||0>ya(e,e.next,t)}// check if the middle point of a polygon diagonal is inside the polygon
function Ma(e,t){var r=e,a=!1,i=(e.x+t.x)/2,n=(e.y+t.y)/2;do r.y>n!=r.next.y>n&&r.next.y!==r.y&&i<(r.next.x-r.x)*(n-r.y)/(r.next.y-r.y)+r.x&&(a=!a),r=r.next;while(r!==e);return a}// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;
// if one belongs to the outer ring and another to a hole, it merges it into a single ring
function Sa(e,t){var r=new wa(e.i,e.x,e.y),a=new wa(t.i,t.x,t.y),i=e.next,n=t.prev;return e.next=t,t.prev=e,r.next=i,i.prev=r,a.next=r,r.prev=a,n.next=a,a.prev=n,a}// create a node and optionally link it with previous one (in a circular doubly linked list)
function Ta(e,t,r,a){var i=new wa(e,t,r);return a?(i.next=a.next,i.prev=a,a.next.prev=i,a.next=i):(i.prev=i,i.next=i),i}function Ea(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function wa(e,t,r){// vertex index in coordinates array
// vertex coordinates
// previous and next vertex nodes in a polygon ring
// z-order curve value
// previous and next nodes in z-order
// indicates whether this is a steiner point
this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function La(e,t,r,a){for(var n=0,o=t,s=r-a;o<r;o+=a)n+=(e[s]-e[o])*(e[o+1]+e[s+1]),s=o;return n}/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   */function Aa(e){var t=e.length;2<t&&e[t-1].equals(e[0])&&e.pop()}function Ra(e,t){for(var r=0;r<t.length;r++)e.push(t[r].x),e.push(t[r].y)}/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   *
   * Creates extruded geometry from a path shape.
   *
   * parameters = {
   *
   *  curveSegments: <int>, // number of points on the curves
   *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too
   *  depth: <float>, // Depth to extrude the shape
   *
   *  bevelEnabled: <bool>, // turn on bevel
   *  bevelThickness: <float>, // how deep into the original shape bevel goes
   *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel
   *  bevelOffset: <float>, // how far from shape outline does bevel start
   *  bevelSegments: <int>, // number of bevel layers
   *
   *  extrudePath: <THREE.Curve> // curve to extrude shape along
   *
   *  UVGenerator: <Object> // object that provides UV generator functions
   *
   * }
   */ // ExtrudeGeometry
function Pa(e,t){ne.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new Ca(e,t)),this.mergeVertices()}// ExtrudeBufferGeometry
function Ca(e,r){// functions
function a(e){function a(e,t,r){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(r).add(e)}// Find directions for point movement
function l(e,t,r){// computes for inPt the corresponding point inPt' on a new contour
//   shifted by 1 unit (length of normalized vector) to the left
// if we walk along contour clockwise, this new contour is outside the old one
//
// inPt' is the intersection of the two lines parallel to the two
//  adjacent edges of inPt at a distance of 1 unit on the left side.
var a=e.x-t.x,i=e.y-t.y,n=r.x-e.x,o=r.y-e.y,s=a*a+i*i,l,d,p;// resulting translation vector for inPt
// good reading for geometry algorithms (here: line-line intersection)
// http://geomalgorithms.com/a05-_intersect-1.html
if(zo(a*o-i*n)>Mo){// not collinear
// length of vectors for normalizing
var c=wo(s),u=wo(n*n+o*o),m=t.x-i/c,g=t.y+a/c,f=r.x-o/u,y=r.y+n/u,v=((f-m)*o-(y-g)*n)/(a*o-i*n);l=m+a*v-e.x,d=g+i*v-e.y;// Don't normalize!, otherwise sharp corners become ugly
//  but prevent crazy spikes
var x=l*l+d*d;if(2>=x)return new h(l,d);p=wo(x/2)}else{// handle special case of collinear edges
var _=!1;// assumes: opposite
a>Mo?n>Mo&&(_=!0):a<-Mo?n<-Mo&&(_=!0):bo(i)===bo(o)&&(_=!0),_?(l=-i,d=a,p=wo(s)):(l=a,d=i,p=wo(s/2))}return new h(l/p,d/p)}/////  Internal functions
function d(){var e=o.length/3;if(T){var t=0,r=Z*t;// steps + 1
// Bottom faces
for(K=0;K<J;K++)se=X[K],m(se[2]+r,se[1]+r,se[0]+r);// Top faces
for(t=_+2*A,r=Z*t,K=0;K<J;K++)se=X[K],m(se[0]+r,se[1]+r,se[2]+r)}else{// Bottom faces
for(K=0;K<J;K++)se=X[K],m(se[2],se[1],se[0]);// Top faces
for(K=0;K<J;K++)se=X[K],m(se[0]+Z*_,se[1]+Z*_,se[2]+Z*_)}n.addGroup(e,o.length/3-e,0)}// Create faces for the z-sides of the shape
function p(){var e=o.length/3,t=0;for(c(Y,t),t+=Y.length,(W=0,q=G.length);W<q;W++)//, true
V=G[W],c(V,t),t+=V.length;n.addGroup(e,o.length/3-e,1)}function c(e,t){var r,i;for(K=e.length;0<=--K;){r=K,i=K-1,0>i&&(i=e.length-1);//console.log('b', i,j, i-1, k,vertices.length);
var n=0,o=_+2*A;for(n=0;n<o;n++){var l=Z*n,p=Z*(n+1),u=t+r+l,a=t+i+l,m=t+i+p,c=t+r+p;g(u,a,m,c)}}}function u(e,t,r){v.push(e),v.push(t),v.push(r)}function m(e,t,r){f(e),f(t),f(r);var a=o.length/3,i=P.generateTopUV(n,o,a-3,a-2,a-1);y(i[0]),y(i[1]),y(i[2])}function g(e,t,r,a){f(e),f(t),f(a),f(t),f(r),f(a);var i=o.length/3,s=P.generateSideWallUV(n,o,i-6,i-3,i-2,i-1);y(s[0]),y(s[1]),y(s[3]),y(s[1]),y(s[2]),y(s[3])}function f(e){o.push(v[3*e+0]),o.push(v[3*e+1]),o.push(v[3*e+2])}function y(e){s.push(e.x),s.push(e.y)}var v=[],x=r.curveSegments===void 0?12:r.curveSegments,_=r.steps===void 0?1:r.steps,M=r.depth===void 0?100:r.depth,T=!(r.bevelEnabled!==void 0)||r.bevelEnabled,E=r.bevelThickness===void 0?6:r.bevelThickness,w=r.bevelSize===void 0?E-2:r.bevelSize,L=r.bevelOffset===void 0?0:r.bevelOffset,A=r.bevelSegments===void 0?3:r.bevelSegments,R=r.extrudePath,P=r.UVGenerator===void 0?Zd:r.UVGenerator;// options
r.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),M=r.amount);//
var C=!1,D,I,N,U,B;R&&(D=R.getSpacedPoints(_),C=!0,T=!1,I=R.computeFrenetFrames(_,!1),N=new S,U=new S,B=new S),T||(A=0,E=0,w=0,L=0);// Variables initialization
var F=e.extractPoints(x),O=F.shape,G=F.holes,H=!Yd.isClockWise(O),V,W,q;// looping of holes
if(H)// Maybe we should also check if holes are in the opposite direction, just to be safe ...
for(O=O.reverse(),W=0,q=G.length;W<q;W++)V=G[W],Yd.isClockWise(V)&&(G[W]=V.reverse());var X=Yd.triangulateShape(O,G),Y=O;/* Vertices */ // vertices has all points but contour has only points of circumference
for(W=0,q=G.length;W<q;W++)V=G[W],O=O.concat(V);for(var Z=O.length,J=X.length,Q=[],K=0,$=Y.length,ee=$-1,te=K+1,re,ae,ie,ne,oe,se;K<$;K++,ee++,te++)//  (j)---(i)---(k)
// console.log('i,j,k', i, j , k)
ee===$&&(ee=0),te===$&&(te=0),Q[K]=l(Y[K],Y[ee],Y[te]);var le=[],de=Q.concat(),pe;for(W=0,q=G.length;W<q;W++){for(V=G[W],pe=[],(K=0,$=V.length,ee=$-1,te=K+1);K<$;K++,ee++,te++)//  (j)---(i)---(k)
ee===$&&(ee=0),te===$&&(te=0),pe[K]=l(V[K],V[ee],V[te]);le.push(pe),de=de.concat(pe)}// Loop bevelSegments, 1 for the front, 1 for the back
for(re=0;re<A;re++){// contract shape
for(ie=re/A,ne=E*Ro(ie*Eo/2),ae=w*So(ie*Eo/2)+L,(K=0,$=Y.length);K<$;K++)oe=a(Y[K],Q[K],ae),u(oe.x,oe.y,-ne);// expand holes
for(W=0,q=G.length;W<q;W++)for(V=G[W],pe=le[W],(K=0,$=V.length);K<$;K++)oe=a(V[K],pe[K],ae),u(oe.x,oe.y,-ne)}// Back facing vertices
for(ae=w+L,K=0;K<Z;K++)oe=T?a(O[K],de[K],ae):O[K],C?(U.copy(I.normals[0]).multiplyScalar(oe.x),N.copy(I.binormals[0]).multiplyScalar(oe.y),B.copy(D[0]).add(U).add(N),u(B.x,B.y,B.z)):u(oe.x,oe.y,0);// Add stepped vertices...
// Including front facing vertices
var ce;for(ce=1;ce<=_;ce++)for(K=0;K<Z;K++)oe=T?a(O[K],de[K],ae):O[K],C?(U.copy(I.normals[ce]).multiplyScalar(oe.x),N.copy(I.binormals[ce]).multiplyScalar(oe.y),B.copy(D[ce]).add(U).add(N),u(B.x,B.y,B.z)):u(oe.x,oe.y,M/_*ce);// Add bevel segments planes
//for ( b = 1; b <= bevelSegments; b ++ ) {
for(re=A-1;0<=re;re--){// contract shape
for(ie=re/A,ne=E*Ro(ie*Eo/2),ae=w*So(ie*Eo/2)+L,(K=0,$=Y.length);K<$;K++)oe=a(Y[K],Q[K],ae),u(oe.x,oe.y,M+ne);// expand holes
for(W=0,q=G.length;W<q;W++)for(V=G[W],pe=le[W],(K=0,$=V.length);K<$;K++)oe=a(V[K],pe[K],ae),C?u(oe.x,oe.y+D[_-1].y,D[_-1].x+ne):u(oe.x,oe.y,M+ne)}/* Faces */ // Top and bottom faces
// Sides faces
d(),p()}te.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:r},e=Array.isArray(e)?e:[e];for(var n=this,o=[],s=[],d=0,t=e.length,l;d<t;d++)l=e[d],a(l);// build geometry
this.setAttribute("position",new Q(o,3)),this.setAttribute("uv",new Q(s,2)),this.computeVertexNormals()}function Da(e,t,r){if(r.shapes=[],Array.isArray(e))for(var a=0,n=e.length,o;a<n;a++)o=e[a],r.shapes.push(o.uuid);else r.shapes.push(e.uuid);//
return void 0!==t.extrudePath&&(r.options.extrudePath=t.extrudePath.toJSON()),r}/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   * @author alteredq / http://alteredqualia.com/
   *
   * Text = 3D Text
   *
   * parameters = {
   *  font: <THREE.Font>, // font
   *
   *  size: <float>, // size of the text
   *  height: <float>, // thickness to extrude text
   *  curveSegments: <int>, // number of points on the curves
   *
   *  bevelEnabled: <bool>, // turn on bevel
   *  bevelThickness: <float>, // how deep into text bevel goes
   *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel
   *  bevelOffset: <float> // how far from text outline does bevel start
   * }
   */ // TextGeometry
function Ia(e,t){ne.call(this),this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new Na(e,t)),this.mergeVertices()}// TextBufferGeometry
function Na(e,t){t=t||{};var r=t.font;if(!(r&&r.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new ne;var a=r.generateShapes(e,t.size);// translate parameters to ExtrudeGeometry API
t.depth=t.height===void 0?50:t.height,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),Ca.call(this,a,t),this.type="TextBufferGeometry"}/**
   * @author mrdoob / http://mrdoob.com/
   * @author benaadams / https://twitter.com/ben_a_adams
   * @author Mugen87 / https://github.com/Mugen87
   */ // SphereGeometry
function za(e,t,r,a,i,n,o){ne.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:a,phiLength:i,thetaStart:n,thetaLength:o},this.fromBufferGeometry(new Ua(e,t,r,a,i,n,o)),this.mergeVertices()}// SphereBufferGeometry
function Ua(e,t,r,i,n,o,s){te.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:i,phiLength:n,thetaStart:o,thetaLength:s},e=e||1,t=No(3,Po(t)||8),r=No(2,Po(r)||6),i=i===void 0?0:i,n=n===void 0?2*Eo:n,o=o===void 0?0:o,s=s===void 0?Eo:s;var l=Io(o+s,Math.PI),p=0,m=[],g=new S,f=new S,h=[],y=[],x=[],_=[],M,T;// generate vertices, normals and uvs
for(T=0;T<=r;T++){var E=[],w=T/r,v=0;for(0==T&&0==o?v=.5/t:T==r&&l==Eo&&(v=-.5/t),M=0;M<=t;M++){var L=M/t;// vertex
// normal
// uv
g.x=-e*Ro(i+L*n)*So(o+w*s),g.y=e*Ro(o+w*s),g.z=e*So(i+L*n)*So(o+w*s),y.push(g.x,g.y,g.z),f.copy(g).normalize(),x.push(f.x,f.y,f.z),_.push(L+v,1-w),E.push(p++)}m.push(E)}// indices
for(T=0;T<r;T++)for(M=0;M<t;M++){var u=m[T][M+1],a=m[T][M],b=m[T+1][M],c=m[T+1][M+1];(0!==T||0<o)&&h.push(u,a,c),(T!==r-1||l<Eo)&&h.push(a,b,c)}// build geometry
this.setIndex(h),this.setAttribute("position",new Q(y,3)),this.setAttribute("normal",new Q(x,3)),this.setAttribute("uv",new Q(_,2))}/**
   * @author Kaleb Murphy
   * @author Mugen87 / https://github.com/Mugen87
   */ // RingGeometry
function Ba(e,t,r,a,i,n){ne.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:a,thetaStart:i,thetaLength:n},this.fromBufferGeometry(new Fa(e,t,r,a,i,n)),this.mergeVertices()}// RingBufferGeometry
function Fa(e,t,r,n,o,s){te.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:o,thetaLength:s},e=e||.5,t=t||1,o=o===void 0?0:o,s=s===void 0?2*Eo:s,r=r===void 0?8:No(3,r),n=n===void 0?1:No(1,n);// buffers
var l=[],p=[],u=[],m=[],g=e,f=(t-e)/n,y=new S,v=new h,x,_,M;// generate vertices, normals and uvs
for(_=0;_<=n;_++){for(M=0;M<=r;M++)// values are generate from the inside of the ring to the outside
// vertex
// normal
// uv
x=o+M/r*s,y.x=g*Ro(x),y.y=g*So(x),p.push(y.x,y.y,y.z),u.push(0,0,1),v.x=(y.x/t+1)/2,v.y=(y.y/t+1)/2,m.push(v.x,v.y);// increase the radius for next row of vertices
g+=f}// indices
for(_=0;_<n;_++){var T=_*(r+1);for(M=0;M<r;M++){x=M+T;var E=x,a=x+r+1,b=x+r+2,c=x+1;// faces
l.push(E,a,c),l.push(a,b,c)}}// build geometry
this.setIndex(l),this.setAttribute("position",new Q(p,3)),this.setAttribute("normal",new Q(u,3)),this.setAttribute("uv",new Q(m,2))}/**
   * @author zz85 / https://github.com/zz85
   * @author bhouston / http://clara.io
   * @author Mugen87 / https://github.com/Mugen87
   */ // LatheGeometry
function Oa(e,t,r,a){ne.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:a},this.fromBufferGeometry(new Ga(e,t,r,a)),this.mergeVertices()}// LatheBufferGeometry
function Ga(e,t,r,o){te.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:o},t=Po(t)||12,r=r||0,o=o||2*Eo,o=os.clamp(o,0,2*Eo);// buffers
var s=[],l=[],p=[],u=1/t,m=new S,g=new h,f,y,v;// generate vertices and uvs
for(y=0;y<=t;y++){var x=r+y*u*o,_=So(x),M=Ro(x);for(v=0;v<=e.length-1;v++)// vertex
// uv
m.x=e[v].x*_,m.y=e[v].y,m.z=e[v].x*M,l.push(m.x,m.y,m.z),g.x=y/t,g.y=v/(e.length-1),p.push(g.x,g.y)}// indices
for(y=0;y<t;y++)for(v=0;v<e.length-1;v++){f=v+y*e.length;var T=f,a=f+e.length,b=f+e.length+1,c=f+1;s.push(T,a,c),s.push(a,b,c)}// build geometry
// if the geometry is closed, we need to average the normals along the seam.
// because the corresponding vertices are identical (but still have different UVs).
if(this.setIndex(s),this.setAttribute("position",new Q(l,3)),this.setAttribute("uv",new Q(p,2)),this.computeVertexNormals(),o===2*Eo){var d=this.attributes.normal.array,E=new S,w=new S,L=new S;for(f=3*(t*e.length),y=0,v=0;y<e.length;y++,v+=3)// select the normal of the vertex in the first line
// select the normal of the vertex in the last line
// average normals
// assign the new values to both normals
E.x=d[v+0],E.y=d[v+1],E.z=d[v+2],w.x=d[f+v+0],w.y=d[f+v+1],w.z=d[f+v+2],L.addVectors(E,w).normalize(),d[v+0]=d[f+v+0]=L.x,d[v+1]=d[f+v+1]=L.y,d[v+2]=d[f+v+2]=L.z}}/**
   * @author jonobr1 / http://jonobr1.com
   * @author Mugen87 / https://github.com/Mugen87
   */ // ShapeGeometry
function Ha(e,t){ne.call(this),this.type="ShapeGeometry","object"===_typeof(t)&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new Va(e,t)),this.mergeVertices()}// ShapeBufferGeometry
function Va(e,t){// helper functions
function r(e){var r=o.length/3,d=e.extractPoints(t),u=d.shape,m=d.holes,g,f,h;for(!1===Yd.isClockWise(u)&&(u=u.reverse()),g=0,f=m.length;g<f;g++)h=m[g],!0===Yd.isClockWise(h)&&(m[g]=h.reverse());var y=Yd.triangulateShape(u,m);// join vertices of inner and outer paths to a single array
for(g=0,f=m.length;g<f;g++)h=m[g],u=u.concat(h);// vertices, normals, uvs
for(g=0,f=u.length;g<f;g++){var v=u[g];o.push(v.x,v.y,0),s.push(0,0,1),l.push(v.x,v.y)}// incides
for(g=0,f=y.length;g<f;g++){var x=y[g],_=x[0]+r,a=x[1]+r,b=x[2]+r;n.push(_,a,b),p+=3}}te.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;// buffers
var n=[],o=[],s=[],l=[],d=0,p=0;// allow single and array values for "shapes" parameter
if(!1===Array.isArray(e))r(e);else for(var c=0;c<e.length;c++)// enables MultiMaterial support
r(e[c]),this.addGroup(d,p,c),d+=p,p=0;// build geometry
this.setIndex(n),this.setAttribute("position",new Q(o,3)),this.setAttribute("normal",new Q(s,3)),this.setAttribute("uv",new Q(l,2))}//
function ka(e,t){if(t.shapes=[],Array.isArray(e))for(var r=0,a=e.length,n;r<a;r++)n=e[r],t.shapes.push(n.uuid);else t.shapes.push(e.uuid);return t}/**
   * @author WestLangley / http://github.com/WestLangley
   * @author Mugen87 / https://github.com/Mugen87
   */function Wa(t,r){te.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:r},r=r===void 0?1:r;// buffer
var a=[],n=Ro(os.DEG2RAD*r),o=[0,0],s={},d=["a","b","c"],p,c,u,m;// helper variables
t.isBufferGeometry?(m=new ne,m.fromBufferGeometry(t)):m=t.clone(),m.mergeVertices(),m.computeFaceNormals();// now create a data structure where each entry represents an edge with its adjoining faces
for(var g=m.vertices,f=m.faces,h=0,y=f.length,l;h<y;h++){l=f[h];for(var v=0;3>v;v++)p=l[d[v]],c=l[d[(v+1)%3]],o[0]=Io(p,c),o[1]=No(p,c),u=o[0]+","+o[1],void 0===s[u]?s[u]={index1:o[0],index2:o[1],face1:h,face2:void 0}:s[u].face2=h}// generate vertices
for(u in s){var x=s[u];// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.
if(x.face2===void 0||f[x.face1].normal.dot(f[x.face2].normal)<=n){var e=g[x.index1];a.push(e.x,e.y,e.z),e=g[x.index2],a.push(e.x,e.y,e.z)}}// build geometry
this.setAttribute("position",new Q(a,3))}/**
   * @author mrdoob / http://mrdoob.com/
   * @author Mugen87 / https://github.com/Mugen87
   */ // CylinderGeometry
function ja(e,t,r,a,i,n,o,s){ne.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:a,heightSegments:i,openEnded:n,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new qa(e,t,r,a,i,n,o,s)),this.mergeVertices()}// CylinderBufferGeometry
function qa(e,t,r,n,o,s,l,d){function p(){var i=new S,s=new S,p=0,h=(t-e)/r,w,L;// generate vertices, normals and uvs
for(L=0;L<=o;L++){var A=[],R=L/o,v=R*(t-e)+e;for(w=0;w<=n;w++){var P=w/n,u=P*d+l,C=So(u),D=Ro(u);// vertex
// normal
// uv
// save index of vertex in respective row
s.x=v*C,s.y=-R*r+T,s.z=v*D,f.push(s.x,s.y,s.z),i.set(C,h,D).normalize(),y.push(i.x,i.y,i.z),_.push(P,1-R),A.push(b++)}// now save vertices of the row in our index array
M.push(A)}// generate indices
for(w=0;w<n;w++)for(L=0;L<o;L++){// we use the index array to access the correct indices
var I=M[L][w],a=M[L+1][w],N=M[L+1][w+1],c=M[L][w+1];// faces
// update group counter
g.push(I,a,c),g.push(a,N,c),p+=6}// add a group to the geometry. this will ensure multi material support
// calculate new start value for groups
m.addGroup(E,p,0),E+=p}function c(r){var a=new h,o=new S,s=0,p=!0===r?e:t,v=!0===r?1:-1,M,w,L;// first we generate the center vertex data of the cap.
// because the geometry needs one set of uvs per face,
// we must generate a center vertex per face/segment
for(w=b,M=1;M<=n;M++)// vertex
// normal
// uv
// increase index
f.push(0,T*v,0),y.push(0,v,0),_.push(.5,.5),b++;// save the index of the last center vertex
// now we generate the surrounding vertices, normals and uvs
for(L=b,M=0;M<=n;M++){var A=M/n,u=A*d+l,R=Ro(u),P=So(u);// vertex
// normal
// uv
// increase index
o.x=p*P,o.y=T*v,o.z=p*R,f.push(o.x,o.y,o.z),y.push(0,v,0),a.x=.5*R+.5,a.y=.5*P*v+.5,_.push(a.x,a.y),b++}// generate indices
for(M=0;M<n;M++){var C=w+M,c=L+M;!0===r?g.push(c,c+1,C):g.push(c+1,c,C),s+=3}// add a group to the geometry. this will ensure multi material support
// calculate new start value for groups
m.addGroup(E,s,!0===r?1:2),E+=s}te.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:o,openEnded:s,thetaStart:l,thetaLength:d};var m=this;e=e===void 0?1:e,t=t===void 0?1:t,r=r||1,n=Po(n)||8,o=Po(o)||1,s=s!==void 0&&s,l=l===void 0?0:l,d=d===void 0?2*Eo:d;// buffers
var g=[],f=[],y=[],_=[],b=0,M=[],T=r/2,E=0;// generate geometry
// build geometry
p(),!1===s&&(0<e&&c(!0),0<t&&c(!1)),this.setIndex(g),this.setAttribute("position",new Q(f,3)),this.setAttribute("normal",new Q(y,3)),this.setAttribute("uv",new Q(_,2))}/**
   * @author abelnation / http://github.com/abelnation
   */ // ConeGeometry
function Xa(e,t,r,a,i,n,o){ja.call(this,0,e,t,r,a,i,n,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:a,openEnded:i,thetaStart:n,thetaLength:o}}// ConeBufferGeometry
function Ya(e,t,r,a,i,n,o){qa.call(this,0,e,t,r,a,i,n,o),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:a,openEnded:i,thetaStart:n,thetaLength:o}}/**
   * @author benaadams / https://twitter.com/ben_a_adams
   * @author Mugen87 / https://github.com/Mugen87
   * @author hughes
   */ // CircleGeometry
function Za(e,t,r,a){ne.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:a},this.fromBufferGeometry(new Ja(e,t,r,a)),this.mergeVertices()}// CircleBufferGeometry
function Ja(e,t,r,a){te.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:a},e=e||1,t=t===void 0?8:No(3,t),r=r===void 0?0:r,a=a===void 0?2*Eo:a;// buffers
var n=[],o=[],l=[],d=[],p=new S,c=new h,u,m;for(o.push(0,0,0),l.push(0,0,1),d.push(.5,.5),(m=0,u=3);m<=t;m++,u+=3){var g=r+m/t*a;// vertex
// normal
// uvs
p.x=e*Ro(g),p.y=e*So(g),o.push(p.x,p.y,p.z),l.push(0,0,1),c.x=(o[u]/e+1)/2,c.y=(o[u+1]/e+1)/2,d.push(c.x,c.y)}// indices
for(u=1;u<=t;u++)n.push(u,u+1,0);// build geometry
this.setIndex(n),this.setAttribute("position",new Q(o,3)),this.setAttribute("normal",new Q(l,3)),this.setAttribute("uv",new Q(d,2))}/**
   * @author mrdoob / http://mrdoob.com/
   *
   * parameters = {
   *  color: <THREE.Color>
   * }
   */function Qa(e){H.call(this),this.type="ShadowMaterial",this.color=new U(0),this.transparent=!0,this.setValues(e)}/**
   * @author mrdoob / http://mrdoob.com/
   */function Ka(e){le.call(this,e),this.type="RawShaderMaterial"}/**
   * @author WestLangley / http://github.com/WestLangley
   *
   * parameters = {
   *  color: <hex>,
   *  roughness: <float>,
   *  metalness: <float>,
   *  opacity: <float>,
   *
   *  map: new THREE.Texture( <Image> ),
   *
   *  lightMap: new THREE.Texture( <Image> ),
   *  lightMapIntensity: <float>
   *
   *  aoMap: new THREE.Texture( <Image> ),
   *  aoMapIntensity: <float>
   *
   *  emissive: <hex>,
   *  emissiveIntensity: <float>
   *  emissiveMap: new THREE.Texture( <Image> ),
   *
   *  bumpMap: new THREE.Texture( <Image> ),
   *  bumpScale: <float>,
   *
   *  normalMap: new THREE.Texture( <Image> ),
   *  normalMapType: THREE.TangentSpaceNormalMap,
   *  normalScale: <Vector2>,
   *
   *  displacementMap: new THREE.Texture( <Image> ),
   *  displacementScale: <float>,
   *  displacementBias: <float>,
   *
   *  roughnessMap: new THREE.Texture( <Image> ),
   *
   *  metalnessMap: new THREE.Texture( <Image> ),
   *
   *  alphaMap: new THREE.Texture( <Image> ),
   *
   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
   *  envMapIntensity: <float>
   *
   *  refractionRatio: <float>,
   *
   *  wireframe: <boolean>,
   *  wireframeLinewidth: <float>,
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>,
   *  morphNormals: <bool>
   * }
   */function $a(e){// diffuse
H.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new U(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new U(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new h(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}/**
   * @author WestLangley / http://github.com/WestLangley
   *
   * parameters = {
   *  clearcoat: <float>,
   *  clearcoatMap: new THREE.Texture( <Image> ),
   *  clearcoatRoughness: <float>,
   *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),
   *  clearcoatNormalScale: <Vector2>,
   *  clearcoatNormalMap: new THREE.Texture( <Image> ),
   *
   *  reflectivity: <float>,
   *
   *  sheen: <Color>,
   *
   *  transparency: <float>
   * }
   */function ei(e){// maps to F0 = 0.04
// null will disable sheen bsdf
$a.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new h(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,this.sheen=null,this.transparency=0,this.setValues(e)}/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   *
   * parameters = {
   *  color: <hex>,
   *  specular: <hex>,
   *  shininess: <float>,
   *  opacity: <float>,
   *
   *  map: new THREE.Texture( <Image> ),
   *
   *  lightMap: new THREE.Texture( <Image> ),
   *  lightMapIntensity: <float>
   *
   *  aoMap: new THREE.Texture( <Image> ),
   *  aoMapIntensity: <float>
   *
   *  emissive: <hex>,
   *  emissiveIntensity: <float>
   *  emissiveMap: new THREE.Texture( <Image> ),
   *
   *  bumpMap: new THREE.Texture( <Image> ),
   *  bumpScale: <float>,
   *
   *  normalMap: new THREE.Texture( <Image> ),
   *  normalMapType: THREE.TangentSpaceNormalMap,
   *  normalScale: <Vector2>,
   *
   *  displacementMap: new THREE.Texture( <Image> ),
   *  displacementScale: <float>,
   *  displacementBias: <float>,
   *
   *  specularMap: new THREE.Texture( <Image> ),
   *
   *  alphaMap: new THREE.Texture( <Image> ),
   *
   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
   *  combine: THREE.MultiplyOperation,
   *  reflectivity: <float>,
   *  refractionRatio: <float>,
   *
   *  wireframe: <boolean>,
   *  wireframeLinewidth: <float>,
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>,
   *  morphNormals: <bool>
   * }
   */function ti(e){// diffuse
H.call(this),this.type="MeshPhongMaterial",this.color=new U(16777215),this.specular=new U(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new U(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new h(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}/**
   * @author takahirox / http://github.com/takahirox
   *
   * parameters = {
   *  color: <hex>,
   *  specular: <hex>,
   *  shininess: <float>,
   *
   *  map: new THREE.Texture( <Image> ),
   *  gradientMap: new THREE.Texture( <Image> ),
   *
   *  lightMap: new THREE.Texture( <Image> ),
   *  lightMapIntensity: <float>
   *
   *  aoMap: new THREE.Texture( <Image> ),
   *  aoMapIntensity: <float>
   *
   *  emissive: <hex>,
   *  emissiveIntensity: <float>
   *  emissiveMap: new THREE.Texture( <Image> ),
   *
   *  bumpMap: new THREE.Texture( <Image> ),
   *  bumpScale: <float>,
   *
   *  normalMap: new THREE.Texture( <Image> ),
   *  normalMapType: THREE.TangentSpaceNormalMap,
   *  normalScale: <Vector2>,
   *
   *  displacementMap: new THREE.Texture( <Image> ),
   *  displacementScale: <float>,
   *  displacementBias: <float>,
   *
   *  specularMap: new THREE.Texture( <Image> ),
   *
   *  alphaMap: new THREE.Texture( <Image> ),
   *
   *  wireframe: <boolean>,
   *  wireframeLinewidth: <float>,
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>,
   *  morphNormals: <bool>
   * }
   */function ri(e){H.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new U(16777215),this.specular=new U(1118481),this.shininess=30,this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new U(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new h(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}/**
   * @author mrdoob / http://mrdoob.com/
   * @author WestLangley / http://github.com/WestLangley
   *
   * parameters = {
   *  opacity: <float>,
   *
   *  bumpMap: new THREE.Texture( <Image> ),
   *  bumpScale: <float>,
   *
   *  normalMap: new THREE.Texture( <Image> ),
   *  normalMapType: THREE.TangentSpaceNormalMap,
   *  normalScale: <Vector2>,
   *
   *  displacementMap: new THREE.Texture( <Image> ),
   *  displacementScale: <float>,
   *  displacementBias: <float>,
   *
   *  wireframe: <boolean>,
   *  wireframeLinewidth: <float>
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>,
   *  morphNormals: <bool>
   * }
   */function ai(e){H.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new h(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   *
   * parameters = {
   *  color: <hex>,
   *  opacity: <float>,
   *
   *  map: new THREE.Texture( <Image> ),
   *
   *  lightMap: new THREE.Texture( <Image> ),
   *  lightMapIntensity: <float>
   *
   *  aoMap: new THREE.Texture( <Image> ),
   *  aoMapIntensity: <float>
   *
   *  emissive: <hex>,
   *  emissiveIntensity: <float>
   *  emissiveMap: new THREE.Texture( <Image> ),
   *
   *  specularMap: new THREE.Texture( <Image> ),
   *
   *  alphaMap: new THREE.Texture( <Image> ),
   *
   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
   *  combine: THREE.Multiply,
   *  reflectivity: <float>,
   *  refractionRatio: <float>,
   *
   *  wireframe: <boolean>,
   *  wireframeLinewidth: <float>,
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>,
   *  morphNormals: <bool>
   * }
   */function ii(e){// diffuse
H.call(this),this.type="MeshLambertMaterial",this.color=new U(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new U(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}/**
   * @author WestLangley / http://github.com/WestLangley
   *
   * parameters = {
   *  color: <hex>,
   *  opacity: <float>,
   *
   *  matcap: new THREE.Texture( <Image> ),
   *
   *  map: new THREE.Texture( <Image> ),
   *
   *  bumpMap: new THREE.Texture( <Image> ),
   *  bumpScale: <float>,
   *
   *  normalMap: new THREE.Texture( <Image> ),
   *  normalMapType: THREE.TangentSpaceNormalMap,
   *  normalScale: <Vector2>,
   *
   *  displacementMap: new THREE.Texture( <Image> ),
   *  displacementScale: <float>,
   *  displacementBias: <float>,
   *
   *  alphaMap: new THREE.Texture( <Image> ),
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>,
   *  morphNormals: <bool>
   * }
   */function ni(e){// diffuse
H.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new U(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new h(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}/**
   * @author alteredq / http://alteredqualia.com/
   *
   * parameters = {
   *  color: <hex>,
   *  opacity: <float>,
   *
   *  linewidth: <float>,
   *
   *  scale: <float>,
   *  dashSize: <float>,
   *  gapSize: <float>
   * }
   */function oi(e){Tr.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}/**
   * Abstract base class of interpolants over parametric samples.
   *
   * The parameter domain is one dimensional, typically the time or a path
   * along a curve defined by the data.
   *
   * The sample values can have any dimensionality and derived classes may
   * apply special interpretations to the data.
   *
   * This class provides the interval seek in a Template Method, deferring
   * the actual interpolation to derived classes.
   *
   * Time complexity is O(1) for linear access crossing at most two points
   * and O(log N) for random access, where N is the number of positions.
   *
   * References:
   *
   * 		http://www.oodesign.com/template-method-pattern.html
   *
   * @author tschw
   */function si(e,t,r,a){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=a===void 0?new t.constructor(r):a,this.sampleValues=t,this.valueSize=r}/**
   * Fast and simple cubic spline interpolant.
   *
   * It was derived from a Hermitian construction setting the first derivative
   * at each sample position to the linear slope between neighboring positions
   * over their parameter interval.
   *
   * @author tschw
   */function li(e,t,r,a){si.call(this,e,t,r,a),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}/**
   * @author tschw
   */function di(e,t,r,a){si.call(this,e,t,r,a)}/**
   *
   * Interpolant that evaluates to the sample value at the position preceeding
   * the parameter.
   *
   * @author tschw
   */function pi(e,t,r,a){si.call(this,e,t,r,a)}/**
   *
   * A timed sequence of keyframes for a specific property.
   *
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */function ci(e,t,r,a){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Kd.convertArray(t,this.TimeBufferType),this.values=Kd.convertArray(r,this.ValueBufferType),this.setInterpolation(a||this.DefaultInterpolation)}// Static methods
/**
   *
   * A Track of Boolean keyframe values.
   *
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */function ui(e,t,r){ci.call(this,e,t,r)}/**
   *
   * A Track of keyframe values that represent color.
   *
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */function mi(e,t,r,a){ci.call(this,e,t,r,a)}/**
   *
   * A Track of numeric keyframe values.
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */function gi(e,t,r,a){ci.call(this,e,t,r,a)}/**
   * Spherical linear unit quaternion interpolant.
   *
   * @author tschw
   */function fi(e,t,r,a){si.call(this,e,t,r,a)}/**
   *
   * A Track of quaternion keyframe values.
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */function hi(e,t,r,a){ci.call(this,e,t,r,a)}/**
   *
   * A Track that interpolates Strings
   *
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */function yi(e,t,r,a){ci.call(this,e,t,r,a)}/**
   *
   * A Track of vectored keyframe values.
   *
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */function vi(e,t,r,a){ci.call(this,e,t,r,a)}/**
   *
   * Reusable set of Tracks that represent an animation.
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   */function xi(e,t,r){this.name=e,this.tracks=r,this.duration=t===void 0?-1:t,this.uuid=os.generateUUID(),0>this.duration&&this.resetDuration()}function _i(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return gi;case"vector":case"vector2":case"vector3":case"vector4":return vi;case"color":return mi;case"quaternion":return hi;case"bool":case"boolean":return ui;case"string":return yi;}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function bi(e){if(e.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var t=_i(e.type);if(e.times===void 0){var r=[],a=[];Kd.flattenJSON(e.keys,r,a,"value"),e.times=r,e.values=a}// derived classes can define a static parse method
return void 0===t.parse?new t(e.name,e.times,e.values,e.interpolation):t.parse(e)}/**
   * @author mrdoob / http://mrdoob.com/
   */function Mi(e,t,r){var a=this,i=!1,n=0,o=0,s=void 0,d=[];// Refer to #5689 for the reason why we don't set .onStart
// in the constructor
this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){o++,!1===i&&a.onStart!==void 0&&a.onStart(e,n,o),i=!0},this.itemEnd=function(e){n++,a.onProgress!==void 0&&a.onProgress(e,n,o),n===o&&(i=!1,a.onLoad!==void 0&&a.onLoad())},this.itemError=function(e){a.onError!==void 0&&a.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this},this.addHandler=function(e,t){return d.push(e,t),this},this.removeHandler=function(e){var t=d.indexOf(e);return-1!==t&&d.splice(t,2),this},this.getHandler=function(e){for(var t=0,r=d.length;t<r;t+=2){var a=d[t],n=d[t+1];// see #17920
if(a.global&&(a.lastIndex=0),a.test(e))return n}return null}}/**
   * @author alteredq / http://alteredqualia.com/
   */function Si(e){this.manager=e===void 0?ep:e,this.crossOrigin="anonymous",this.path="",this.resourcePath=""}function Ti(e){Si.call(this,e)}/**
   * @author bhouston / http://clara.io/
   */function Ei(e){Si.call(this,e)}/**
   * @author mrdoob / http://mrdoob.com/
   *
   * Abstract Base class to block based textures loader (dds, pvr, ...)
   *
   * Sub classes have to implement the parse() method which will be used in load().
   */function wi(e){Si.call(this,e)}/**
   * @author Nikos M. / https://github.com/foo123/
   *
   * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)
   *
   * Sub classes have to implement the parse() method which will be used in load().
   */function Li(e){Si.call(this,e)}/**
   * @author mrdoob / http://mrdoob.com/
   */function Ai(e){Si.call(this,e)}/**
   * @author mrdoob / http://mrdoob.com/
   */function Ri(e){Si.call(this,e)}/**
   * @author mrdoob / http://mrdoob.com/
   */function Pi(e){Si.call(this,e)}/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   * Extensible curve object
   *
   * Some common of curve methods:
   * .getPoint( t, optionalTarget ), .getTangent( t )
   * .getPointAt( u, optionalTarget ), .getTangentAt( u )
   * .getPoints(), .getSpacedPoints()
   * .getLength()
   * .updateArcLengths()
   *
   * This following curves inherit from THREE.Curve:
   *
   * -- 2D curves --
   * THREE.ArcCurve
   * THREE.CubicBezierCurve
   * THREE.EllipseCurve
   * THREE.LineCurve
   * THREE.QuadraticBezierCurve
   * THREE.SplineCurve
   *
   * -- 3D curves --
   * THREE.CatmullRomCurve3
   * THREE.CubicBezierCurve3
   * THREE.LineCurve3
   * THREE.QuadraticBezierCurve3
   *
   * A series of curves can be represented as a THREE.CurvePath.
   *
   **/ /**************************************************************
   *	Abstract Curve base class
   **************************************************************/function Ci(){this.type="Curve",this.arcLengthDivisions=200}function Di(e,t,r,a,i,n,o,s){Ci.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=r||1,this.yRadius=a||1,this.aStartAngle=i||0,this.aEndAngle=n||2*Eo,this.aClockwise=o||!1,this.aRotation=s||0}function Ii(e,t,r,a,i,n){Di.call(this,e,t,r,r,a,i,n),this.type="ArcCurve"}/**
   * @author zz85 https://github.com/zz85
   *
   * Centripetal CatmullRom Curve - which is useful for avoiding
   * cusps and self-intersections in non-uniform catmull rom curves.
   * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf
   *
   * curve.type accepts centripetal(default), chordal and catmullrom
   * curve.tension is used for catmullrom which defaults to 0.5
   */ /*
  Based on an optimized c++ solution in
   - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/
   - http://ideone.com/NoEbVM

  This CubicPoly class could be used for reusing some variables and calculations,
  but for three.js curve use, it could be possible inlined and flatten into a single function call
  which can be placed in CurveUtils.
  */function Ni(){/*
  	 * Compute coefficients for a cubic polynomial
  	 *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3
  	 * such that
  	 *   p(0) = x0, p(1) = x1
  	 *  and
  	 *   p'(0) = t0, p'(1) = t1.
  	 */function e(e,t,o,s){r=e,a=o,i=-3*e+3*t-2*o-s,n=2*e-2*t+o+s}var r=0,a=0,i=0,n=0;return{initCatmullRom:function initCatmullRom(t,r,a,i,n){e(r,a,n*(a-t),n*(i-r))},initNonuniformCatmullRom:function initNonuniformCatmullRom(t,r,a,i,n,o,s){// compute tangents when parameterized in [t1,t2]
var l=(r-t)/n-(a-t)/(n+o)+(a-r)/o,d=(a-r)/o-(i-r)/(o+s)+(i-a)/s;// rescale tangents for parametrization in [0,1]
l*=o,d*=o,e(r,a,l,d)},calc:function calc(e){var t=e*e;return r+a*e+i*t+n*(t*e)}}}//
function zi(e,t,r,a){Ci.call(this),this.type="CatmullRomCurve3",this.points=e||[],this.closed=t||!1,this.curveType=r||"centripetal",this.tension=a||.5}/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   *
   * Bezier Curves formulas obtained from
   * http://en.wikipedia.org/wiki/Bézier_curve
   */function Ui(e,t,r,a,i){var n=.5*(a-t),o=.5*(i-r),s=e*e;return(2*r-2*a+n+o)*(e*s)+(-3*r+3*a-2*n-o)*s+n*e+r}//
function Bi(e,t){var r=1-e;return r*r*t}function Fi(e,t){return 2*(1-e)*e*t}function Oi(e,t){return e*e*t}function Gi(e,t,r,a){return Bi(e,t)+Fi(e,r)+Oi(e,a)}//
function Hi(e,t){var r=1-e;return r*r*r*t}function Vi(e,t){var r=1-e;return 3*r*r*e*t}function ki(e,t){return 3*(1-e)*e*e*t}function Wi(e,t){return e*e*e*t}function ji(e,t,r,a,i){return Hi(e,t)+Vi(e,r)+ki(e,a)+Wi(e,i)}function qi(e,t,r,a){Ci.call(this),this.type="CubicBezierCurve",this.v0=e||new h,this.v1=t||new h,this.v2=r||new h,this.v3=a||new h}function Xi(e,t,r,a){Ci.call(this),this.type="CubicBezierCurve3",this.v0=e||new S,this.v1=t||new S,this.v2=r||new S,this.v3=a||new S}function Yi(e,t){Ci.call(this),this.type="LineCurve",this.v1=e||new h,this.v2=t||new h}function Zi(e,t){Ci.call(this),this.type="LineCurve3",this.v1=e||new S,this.v2=t||new S}function Ji(e,t,r){Ci.call(this),this.type="QuadraticBezierCurve",this.v0=e||new h,this.v1=t||new h,this.v2=r||new h}function Qi(e,t,r){Ci.call(this),this.type="QuadraticBezierCurve3",this.v0=e||new S,this.v1=t||new S,this.v2=r||new S}function Ki(e/* array of Vector2 */){Ci.call(this),this.type="SplineCurve",this.points=e||[]}/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   *
   **/ /**************************************************************
   *	Curved Path - a curve path is simply a array of connected
   *  curves, but retains the api of a curve
   **************************************************************/function $i(){Ci.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   * Creates free form 2d path using series of points, lines or curves.
   **/function en(e){$i.call(this),this.type="Path",this.currentPoint=new h,e&&this.setFromPoints(e)}/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   * Defines a 2d shape plane using paths.
   **/ // STEP 1 Create a path.
// STEP 2 Turn path into shape.
// STEP 3 ExtrudeGeometry takes in Shape/Shapes
// STEP 3a - Extract points from each shape, turn to vertices
// STEP 3b - Triangulate each shape, add faces.
function tn(e){en.call(this,e),this.uuid=os.generateUUID(),this.type="Shape",this.holes=[]}/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   */function rn(e,t){L.call(this),this.type="Light",this.color=new U(e),this.intensity=t===void 0?1:t,this.receiveShadow=void 0}/**
   * @author alteredq / http://alteredqualia.com/
   */function an(e,t,r){rn.call(this,e,r),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(L.DefaultUp),this.updateMatrix(),this.groundColor=new U(t)}/**
   * @author mrdoob / http://mrdoob.com/
   */function nn(e){this.camera=e,this.bias=0,this.radius=1,this.mapSize=new h(512,512),this.map=null,this.mapPass=null,this.matrix=new T,this._frustum=new ge,this._frameExtents=new h(1,1),this._viewportCount=1,this._viewports=[new x(0,0,1,1)]}/**
   * @author mrdoob / http://mrdoob.com/
   */function on(){nn.call(this,new pe(50,1,.5,500))}/**
   * @author alteredq / http://alteredqualia.com/
   */function sn(e,t,r,a,i,n){// for physically correct lights, should be 2.
rn.call(this,e,t),this.type="SpotLight",this.position.copy(L.DefaultUp),this.updateMatrix(),this.target=new L,Object.defineProperty(this,"power",{get:function get(){// intensity = power per solid angle.
// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
return this.intensity*Eo},set:function set(e){// intensity = power per solid angle.
// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
this.intensity=e/Eo}}),this.distance=r===void 0?0:r,this.angle=a===void 0?Eo/3:a,this.penumbra=i===void 0?0:i,this.decay=n===void 0?1:n,this.shadow=new on}function ln(){nn.call(this,new pe(90,1,.5,500)),this._frameExtents=new h(4,2),this._viewportCount=6,this._viewports=[// These viewports map a cube-map onto a 2D texture with the
// following orientation:
//
//  xzXZ
//   y Y
//
// X - Positive x direction
// x - Negative x direction
// Y - Positive y direction
// y - Negative y direction
// Z - Positive z direction
// z - Negative z direction
// positive X
new x(2,1,1,1),// negative X
new x(0,1,1,1),// positive Z
new x(3,1,1,1),// negative Z
new x(1,1,1,1),// positive Y
new x(3,0,1,1),// negative Y
new x(1,0,1,1)],this._cubeDirections=[new S(1,0,0),new S(-1,0,0),new S(0,0,1),new S(0,0,-1),new S(0,1,0),new S(0,-1,0)],this._cubeUps=[new S(0,1,0),new S(0,1,0),new S(0,1,0),new S(0,1,0),new S(0,0,1),new S(0,0,-1)]}/**
   * @author mrdoob / http://mrdoob.com/
   */function dn(e,t,r,a){// for physically correct lights, should be 2.
rn.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function get(){// intensity = power per solid angle.
// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
return 4*this.intensity*Eo},set:function set(e){// intensity = power per solid angle.
// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
this.intensity=e/(4*Eo)}}),this.distance=r===void 0?0:r,this.decay=a===void 0?1:a,this.shadow=new ln}/**
   * @author alteredq / http://alteredqualia.com/
   * @author arose / http://github.com/arose
   */function pn(e,t,r,a,i,n){de.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e===void 0?-1:e,this.right=t===void 0?1:t,this.top=r===void 0?1:r,this.bottom=a===void 0?-1:a,this.near=i===void 0?.1:i,this.far=n===void 0?2e3:n,this.updateProjectionMatrix()}/**
   * @author mrdoob / http://mrdoob.com/
   */function cn(){nn.call(this,new pn(-5,5,5,-5,.5,500))}/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   */function un(e,t){rn.call(this,e,t),this.type="DirectionalLight",this.position.copy(L.DefaultUp),this.updateMatrix(),this.target=new L,this.shadow=new cn}/**
   * @author mrdoob / http://mrdoob.com/
   */function mn(e,t){rn.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0}/**
   * @author abelnation / http://github.com/abelnation
   */function gn(e,t,r,a){rn.call(this,e,t),this.type="RectAreaLight",this.width=r===void 0?10:r,this.height=a===void 0?10:a}/**
   * @author mrdoob / http://mrdoob.com/
   */function fn(e){Si.call(this,e),this.textures={}}/**
   * @author benaadams / https://twitter.com/ben_a_adams
   */function hn(){te.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}/**
   * @author benaadams / https://twitter.com/ben_a_adams
   */function yn(e,t,r,a){"number"==typeof r&&(a=r,r=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),k.call(this,e,t,r),this.meshPerAttribute=a||1}/**
   * @author mrdoob / http://mrdoob.com/
   */function vn(e){Si.call(this,e)}/**
   * @author mrdoob / http://mrdoob.com/
   */function xn(e){Si.call(this,e)}/**
   * @author thespite / http://clicktorelease.com/
   */function _n(e){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Si.call(this,e),this.options=void 0}/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   * minimal class for proxing functions to Path. Replaces old "extractSubpaths()"
   **/function bn(){this.type="ShapePath",this.color=new U,this.subPaths=[],this.currentPath=null}/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   * @author mrdoob / http://mrdoob.com/
   */function Mn(e){this.type="Font",this.data=e}function Sn(e,t,r){for(var a=Array.from?Array.from(e):(e+"").split(""),n=t/r.resolution,o=(r.boundingBox.yMax-r.boundingBox.yMin+r.underlineThickness)*n,s=[],l=0,d=0,p=0,c;p<a.length;p++)if(c=a[p],"\n"===c)l=0,d-=o;else{var u=Tn(c,n,l,d,r);l+=u.offsetX,s.push(u.path)}return s}function Tn(e,t,r,a,n){var o=n.glyphs[e]||n.glyphs["?"];if(!o)return void console.error("THREE.Font: character \""+e+"\" does not exists in font family "+n.familyName+".");var s=new bn,d,p,c,u,m,g,f,h;if(o.o)for(var v=o._cachedOutline||(o._cachedOutline=o.o.split(" ")),_=0,b=v.length,l;_<b;)l=v[_++],"m"===l?(d=v[_++]*t+r,p=v[_++]*t+a,s.moveTo(d,p)):"l"===l?(d=v[_++]*t+r,p=v[_++]*t+a,s.lineTo(d,p)):"q"===l?(c=v[_++]*t+r,u=v[_++]*t+a,m=v[_++]*t+r,g=v[_++]*t+a,s.quadraticCurveTo(m,g,c,u)):"b"===l?(c=v[_++]*t+r,u=v[_++]*t+a,m=v[_++]*t+r,g=v[_++]*t+a,f=v[_++]*t+r,h=v[_++]*t+a,s.bezierCurveTo(m,g,f,h,c,u)):void 0;return{offsetX:o.ha*t,path:s}}/**
   * @author mrdoob / http://mrdoob.com/
   */function En(e){Si.call(this,e)}/**
   * @author Reece Aaron Lecrivain / http://reecenotes.com/
   */function wn(e){Si.call(this,e)}/**
   * @author bhouston / http://clara.io
   * @author WestLangley / http://github.com/WestLangley
   *
   * Primary reference:
   *   https://graphics.stanford.edu/papers/envmap/envmap.pdf
   *
   * Secondary reference:
   *   https://www.ppsloan.org/publications/StupidSH36.pdf
   */ // 3-band SH defined by 9 coefficients
function Ln(){this.coefficients=[];for(var e=0;9>e;e++)this.coefficients.push(new S)}/**
   * @author WestLangley / http://github.com/WestLangley
   *
   * A LightProbe is a source of indirect-diffuse light
   */function An(e,t){rn.call(this,void 0,t),this.sh=e===void 0?new Ln:e}/**
   * @author WestLangley / http://github.com/WestLangley
   */function Rn(e,t,r){An.call(this,void 0,r);var a=new U().set(e),i=new U().set(t),n=new S(a.r,a.g,a.b),o=new S(i.r,i.g,i.b),s=wo(Math.PI),l=s*wo(.75);this.sh.coefficients[0].copy(n).add(o).multiplyScalar(s),this.sh.coefficients[1].copy(n).sub(o).multiplyScalar(l)}/**
   * @author WestLangley / http://github.com/WestLangley
   */function Pn(e,t){An.call(this,void 0,t);var r=new U().set(e);// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );
this.sh.coefficients[0].set(r.r,r.g,r.b).multiplyScalar(2*wo(Math.PI))}/**
   * @author alteredq / http://alteredqualia.com/
   */function Cn(e){this.autoStart=!(e!==void 0)||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}function Dn(){// private
L.call(this),this.type="AudioListener",this.context=up.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Cn}/**
   * @author mrdoob / http://mrdoob.com/
   * @author Reece Aaron Lecrivain / http://reecenotes.com/
   */function In(e){L.call(this),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this._startedAt=0,this._pausedAt=0,this.filters=[]}function Nn(e){In.call(this,e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}/**
   * @author mrdoob / http://mrdoob.com/
   */function zn(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t===void 0?2048:t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}/**
   *
   * Buffered scene graph property that allows weighted accumulation.
   *
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */function Un(e,t,r){this.binding=e,this.valueSize=r;var a=Float64Array,i;"quaternion"===t?i=this._slerp:"string"===t||"bool"===t?(a=Array,i=this._select):i=this._lerp;// layout: [ incoming | accu0 | accu1 | orig ]
//
// interpolators can use .buffer as their .result
// the data then goes to 'incoming'
//
// 'accu0' and 'accu1' are used frame-interleaved for
// the cumulative result and are compared to detect
// changes
//
// 'orig' stores the original state of the property
this.buffer=new a(4*r),this._mixBufferRegion=i,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}function Bn(e,t,r){var a=r||Fn.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,a)}function Fn(e,t,r){this.path=t,this.parsedPath=r||Fn.parseTrackName(t),this.node=Fn.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}/**
   *
   * A group of objects that receives a shared animation state.
   *
   * Usage:
   *
   *  - Add objects you would otherwise pass as 'root' to the
   *    constructor or the .clipAction method of AnimationMixer.
   *
   *  - Instead pass this object as 'root'.
   *
   *  - You can also add and remove objects later when the mixer
   *    is running.
   *
   * Note:
   *
   *    Objects of this class appear as one object to the mixer,
   *    so cache control of the individual objects must be done
   *    on the group.
   *
   * Limitation:
   *
   *  - The animated properties must be compatible among the
   *    all objects in the group.
   *
   *  - A single property can either be controlled through a
   *    target group or directly, but not both.
   *
   * @author tschw
   */function On(){this.uuid=os.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;// threshold
// note: read by PropertyBinding.Composite
var e={};this._indicesByUUID=e;// for bookkeeping
for(var t=0,r=arguments.length;t!==r;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};// inside: indices in these arrays
var a=this;this.stats={objects:{get total(){return a._objects.length},get inUse(){return this.total-a.nCachedObjects_}},get bindingsPerObject(){return a._bindings.length}}}/**
   *
   * Action provided by AnimationMixer for scheduling clip playback on specific
   * objects.
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   *
   */function Gn(e,t,r){this._mixer=e,this._clip=t,this._localRoot=r||null;for(var a=t.tracks,n=a.length,o=Array(n),s={endingStart:2400,endingEnd:2400},l=0,d;l!==n;++l)d=a[l].createInterpolant(null),o[l]=d,d.settings=s;// bound by the mixer
// inside: PropertyMixer (managed by the mixer)
// for the memory manager
// for the memory manager
// global mixer time when the action is to be started
// it's set back to 'null' upon start of the action
// scaled local time of the action
// gets clamped or wrapped to 0..clip.duration according to loop
// no. of repetitions when looping
// true -> zero effective time scale
// false -> zero effective weight
// keep feeding the last frame?
// for smooth interpolation w/o separate
this._interpolantSettings=s,this._interpolants=o,this._propertyBindings=Array(n),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}/**
   *
   * Player for AnimationClips.
   *
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */function Hn(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}/**
   * @author mrdoob / http://mrdoob.com/
   */function Vn(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}/**
   * @author benaadams / https://twitter.com/ben_a_adams
   */function kn(e,t,r){gr.call(this,e,t),this.meshPerAttribute=r||1}/**
   * @author mrdoob / http://mrdoob.com/
   * @author bhouston / http://clara.io/
   * @author stephomi / http://stephaneginier.com/
   */function Wn(e,t,r,a){// direction is assumed to be normalized (for accurate distance calculations)
this.ray=new D(e,t),this.near=r||0,this.far=a||1/0,this.camera=null,this.layers=new w,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function get(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function jn(e,t){return e.distance-t.distance}function qn(e,t,r,a){if(e.layers.test(t.layers)&&e.raycast(t,r),!0===a)for(var n=e.children,o=0,s=n.length;o<s;o++)qn(n[o],t,r,!0)}function Xn(e,t){this.min=e===void 0?new h(+Infinity,+Infinity):e,this.max=t===void 0?new h(-Infinity,-Infinity):t}function Yn(e,t){this.start=e===void 0?new S:e,this.end=t===void 0?new S:t}/**
   * @author alteredq / http://alteredqualia.com/
   */function Zn(e){L.call(this),this.material=e,this.render=function()/* renderCallback */{}}function Jn(e,t){L.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;for(var r=new te,a=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],n=0,o=1,s=32;n<s;n++,o++){var l=2*(n/s*Eo),d=2*(o/s*Eo);a.push(Ro(l),So(l),1,Ro(d),So(d),1)}r.setAttribute("position",new Q(a,3));var p=new Tr({fog:!1,toneMapped:!1});this.cone=new wr(r,p),this.add(this.cone),this.update()}function Qn(e){var t=[];e&&e.isBone&&t.push(e);for(var r=0;r<e.children.length;r++)t.push.apply(t,Qn(e.children[r]));return t}function Kn(e){for(var t=Qn(e),r=new te,a=[],n=[],o=new U(0,0,1),s=new U(0,1,0),l=0,d;l<t.length;l++)d=t[l],d.parent&&d.parent.isBone&&(a.push(0,0,0),a.push(0,0,0),n.push(o.r,o.g,o.b),n.push(s.r,s.g,s.b));r.setAttribute("position",new Q(a,3)),r.setAttribute("color",new Q(n,3));var p=new Tr({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});wr.call(this,r,p),this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}/**
   * @author alteredq / http://alteredqualia.com/
   * @author mrdoob / http://mrdoob.com/
   */function $n(e,t,r){this.light=e,this.light.updateMatrixWorld(),this.color=r;var a=new Ua(t,4,2),i=new V({wireframe:!0,fog:!1,toneMapped:!1});re.call(this,a,i),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}function eo(e,t,r){L.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r;var a=new kr(t);a.rotateY(.5*Eo),this.material=new V({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);var i=a.getAttribute("position"),n=new Float32Array(3*i.count);a.setAttribute("color",new k(n,3)),this.add(new re(a,this.material)),this.update()}/**
   * @author mrdoob / http://mrdoob.com/
   */function to(e,t,r,a){e=e||10,t=t||10,r=new U(r===void 0?4473924:r),a=new U(a===void 0?8947848:a);for(var n=t/2,o=e/t,s=e/2,l=[],d=[],p=0,c=0,u=-s;p<=t;p++,u+=o){l.push(-s,0,u,s,0,u),l.push(u,0,-s,u,0,s);var m=p===n?r:a;m.toArray(d,c),c+=3,m.toArray(d,c),c+=3,m.toArray(d,c),c+=3,m.toArray(d,c),c+=3}var g=new te;g.setAttribute("position",new Q(l,3)),g.setAttribute("color",new Q(d,3));var f=new Tr({vertexColors:!0,toneMapped:!1});wr.call(this,g,f)}/**
   * @author mrdoob / http://mrdoob.com/
   * @author Mugen87 / http://github.com/Mugen87
   * @author Hectate / http://www.github.com/Hectate
   */function ro(e,t,a,n,o,s){e=e||10,t=t||16,a=a||8,n=n||64,o=new U(o===void 0?4473924:o),s=new U(s===void 0?8947848:s);var l=[],d=[],p,c,u,m,g,f,h;// create the radials
for(m=0;m<=t;m++)u=m/t*(2*Eo),p=So(u)*e,c=Ro(u)*e,l.push(0,0,0),l.push(p,0,c),h=1&m?o:s,d.push(h.r,h.g,h.b),d.push(h.r,h.g,h.b);// create the circles
for(m=0;m<=a;m++)for(h=1&m?o:s,f=e-e/a*m,g=0;g<n;g++)// first vertex
// second vertex
u=g/n*(2*Eo),p=So(u)*f,c=Ro(u)*f,l.push(p,0,c),d.push(h.r,h.g,h.b),u=(g+1)/n*(2*Eo),p=So(u)*f,c=Ro(u)*f,l.push(p,0,c),d.push(h.r,h.g,h.b);var y=new te;y.setAttribute("position",new Q(l,3)),y.setAttribute("color",new Q(d,3));var _=new Tr({vertexColors:!0,toneMapped:!1});wr.call(this,y,_)}function ao(e,t,r){L.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r,t===void 0&&(t=1);var a=new te;a.setAttribute("position",new Q([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));var i=new Tr({fog:!1,toneMapped:!1});this.lightPlane=new Er(a,i),this.add(this.lightPlane),a=new te,a.setAttribute("position",new Q([0,0,0,0,0,1],3)),this.targetLine=new Er(a,i),this.add(this.targetLine),this.update()}function io(e){function t(e,t,a){r(e,a),r(t,a)}function r(e,t){n.push(0,0,0),o.push(t.r,t.g,t.b),s[e]===void 0&&(s[e]=[]),s[e].push(n.length/3-1)}var a=new te,i=new Tr({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],o=[],s={},l=new U(16755200),d=new U(16711680),p=new U(43775),c=new U(16777215),u=new U(3355443);// near
// far
// sides
// cone
// up
// target
// cross
t("n1","n2",l),t("n2","n4",l),t("n4","n3",l),t("n3","n1",l),t("f1","f2",l),t("f2","f4",l),t("f4","f3",l),t("f3","f1",l),t("n1","f1",l),t("n2","f2",l),t("n3","f3",l),t("n4","f4",l),t("p","n1",d),t("p","n2",d),t("p","n3",d),t("p","n4",d),t("u1","u2",p),t("u2","u3",p),t("u3","u1",p),t("c","t",c),t("p","c",u),t("cn1","cn2",u),t("cn3","cn4",u),t("cf1","cf2",u),t("cf3","cf4",u),a.setAttribute("position",new Q(n,3)),a.setAttribute("color",new Q(o,3)),wr.call(this,a,i),this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}function no(e,t,r,a,n,o,s){jp.set(n,o,s).unproject(a);var d=t[e];if(d!==void 0)for(var p=r.getAttribute("position"),c=0,u=d.length;c<u;c++)p.setXYZ(d[c],jp.x,jp.y,jp.z)}/**
   * @author mrdoob / http://mrdoob.com/
   * @author Mugen87 / http://github.com/Mugen87
   */function oo(e,t){this.object=e,t===void 0&&(t=16776960);var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),a=new Float32Array(24),i=new te;i.setIndex(new k(r,1)),i.setAttribute("position",new k(a,3)),wr.call(this,i,new Tr({color:t,toneMapped:!1})),this.matrixAutoUpdate=!1,this.update()}/**
   * @author WestLangley / http://github.com/WestLangley
   */function so(e,t){this.type="Box3Helper",this.box=e,t=t||16776960;var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),a=new te;a.setIndex(new k(r,1)),a.setAttribute("position",new Q([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),wr.call(this,a,new Tr({color:t,toneMapped:!1})),this.geometry.computeBoundingSphere()}/**
   * @author WestLangley / http://github.com/WestLangley
   */function lo(e,t,r){this.type="PlaneHelper",this.plane=e,this.size=t===void 0?1:t;var a=r===void 0?16776960:r,i=new te;i.setAttribute("position",new Q([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),i.computeBoundingSphere(),Er.call(this,i,new Tr({color:a,toneMapped:!1}));//
var n=new te;n.setAttribute("position",new Q([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),n.computeBoundingSphere(),this.add(new re(n,new V({color:a,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}function po(e,t,r,a,i,n){// dir is assumed to be normalized
L.call(this),e===void 0&&(e=new S(0,0,1)),t===void 0&&(t=new S(0,0,0)),r===void 0&&(r=1),a===void 0&&(a=16776960),i===void 0&&(i=.2*r),n===void 0&&(n=.2*i),Zp===void 0&&(Zp=new te,Zp.setAttribute("position",new Q([0,0,0,0,1,0],3)),Jp=new qa(0,.5,1,5,1),Jp.translate(0,-.5,0)),this.position.copy(t),this.line=new Er(Zp,new Tr({color:a,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new re(Jp,new V({color:a,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(r,i,n)}/**
   * @author sroucheray / http://sroucheray.org/
   * @author mrdoob / http://mrdoob.com/
   */function co(e){e=e||1;var t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],r=new te;r.setAttribute("position",new Q(t,3)),r.setAttribute("color",new Q([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));var a=new Tr({vertexColors:!0,toneMapped:!1});wr.call(this,r,a)}function uo(){for(var e=[],t=[],r=[],a=8,n=0,o;n<Kp;n++){o=Do(2,a),t.push(o);var s=1/o;n>4?s=Qp[n-8+4-1]:0==n&&(s=0),r.push(s);for(var l=1/(o-1),d=-l/2,p=1+l/2,c=[d,d,p,d,p,p,d,d,p,p,d,p],u=6,m=6,g=3,f=2,h=1,v=new Float32Array(g*m*u),_=new Float32Array(f*m*u),b=new Float32Array(h*m*u),M=0;M<u;M++){var S=2*(M%3)/3-1,x=2<M?0:-1;v.set([S,x,0,S+2/3,x,0,S+2/3,x+1,0,S,x,0,S+2/3,x+1,0,S,x+1,0],g*m*M),_.set(c,f*m*M);var y=[M,M,M,M,M,M];b.set(y,h*m*M)}var T=new te;T.setAttribute("position",new k(v,g)),T.setAttribute("uv",new k(_,f)),T.setAttribute("faceIndex",new k(b,h)),e.push(T),a>4&&a--}return{_lodPlanes:e,_sizeLods:t,_sigmas:r}}function mo(){return"\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.x *= -1.0;\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.y *= -1.0;\n\t} else if (face == 5.0) {\n\t\tdirection.xz *= -1.0;\n\t}\n\treturn direction;\n}\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t"}function go(){return"\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t"}//
//
function fo(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),zi.call(this,e),this.type="catmullrom"}var Uo={isiOS:function(){return /(ipad|iphone|ipod)/ig.test(navigator.userAgent)},isEdge:function(){return /(Edge)/ig.test(navigator.userAgent)},shouldUseAudioDriver:function(){var e=/iphone.*(7|8|9)_[0-9]/i.test(navigator.userAgent),t=/(iPhone|iPod).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent);return e||t},shouldUseCanvasInBetween:function(){var e=/trident|edge/i.test(navigator.userAgent),t=this.isiOS();return e||t}},Bo;Mo===void 0&&(Mo=Do(2,-52)),Co===void 0&&(Co=function(e){return"number"==typeof e&&isFinite(e)&&Po(e)===e}),bo===void 0&&(bo=function(e){return 0>e?-1:0<e?1:+e}),!1=="name"in Function.prototype&&Object.defineProperty(Function.prototype,"name",{get:function get(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),Object.assign===void 0&&(Object.assign=function(e){if(e===void 0||null===e)throw new TypeError("Cannot convert undefined or null to object");for(var t=Object(e),r=1,a;r<arguments.length;r++)if(a=arguments[r],void 0!==a&&null!==a)for(var i in a)Object.prototype.hasOwnProperty.call(a,i)&&(t[i]=a[i]);return t});var Fo=0,Oo=1,Go=1,Ho=300,Vo=1e3,ko=1001,Wo=1002,jo=1006,qo=1008,Xo=1022,Yo=2300,Zo=2301,Jo=2302,Qo=2400,Ko=2401,$o=2402,es=3e3,ts=3001,rs=35044,as=35048;Object.assign(f.prototype,{addEventListener:function addEventListener(e,t){this._listeners===void 0&&(this._listeners={});var r=this._listeners;r[e]===void 0&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function hasEventListener(e,t){if(this._listeners===void 0)return!1;var r=this._listeners;return r[e]!==void 0&&-1!==r[e].indexOf(t)},removeEventListener:function removeEventListener(e,t){if(void 0!==this._listeners){var r=this._listeners,a=r[e];if(void 0!==a){var i=a.indexOf(t);-1!==i&&a.splice(i,1)}}},dispatchEvent:function dispatchEvent(e){if(void 0!==this._listeners){var t=this._listeners,r=t[e.type];if(void 0!==r){e.target=this;for(var a=r.slice(0),n=0,o=a.length;n<o;n++)a[n].call(this,e)}}}});for(var is=[],ns=0;256>ns;ns++)is[ns]=(16>ns?"0":"")+ns.toString(16);var os={DEG2RAD:Eo/180,RAD2DEG:180/Eo,generateUUID:function generateUUID(){// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136
var e=0|4294967295*Math.random(),t=0|4294967295*Math.random(),r=0|4294967295*Math.random(),a=0|4294967295*Math.random(),i=is[255&e]+is[255&e>>8]+is[255&e>>16]+is[255&e>>24]+"-"+is[255&t]+is[255&t>>8]+"-"+is[64|15&t>>16]+is[255&t>>24]+"-"+is[128|63&r]+is[255&r>>8]+"-"+is[255&r>>16]+is[255&r>>24]+is[255&a]+is[255&a>>8]+is[255&a>>16]+is[255&a>>24];// .toUpperCase() here flattens concatenated strings to save heap memory space.
return i.toUpperCase()},clamp:function clamp(e,t,r){return No(t,Io(r,e))},// compute euclidian modulo of m % n
// https://en.wikipedia.org/wiki/Modulo_operation
euclideanModulo:function euclideanModulo(e,t){return(e%t+t)%t},// Linear mapping from range <a1, a2> to range <b1, b2>
mapLinear:function mapLinear(e,t,r,a,i){return a+(e-t)*(i-a)/(r-t)},// https://en.wikipedia.org/wiki/Linear_interpolation
lerp:function lerp(e,r,a){return(1-a)*e+a*r},// http://en.wikipedia.org/wiki/Smoothstep
smoothstep:function smoothstep(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t),e*e*(3-2*e))},smootherstep:function smootherstep(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t),e*e*e*(e*(6*e-15)+10))},// Random integer from <low, high> interval
randInt:function randInt(e,t){return e+Po(Math.random()*(t-e+1))},// Random float from <low, high> interval
randFloat:function randFloat(e,t){return e+Math.random()*(t-e)},// Random float from <-range/2, range/2> interval
randFloatSpread:function randFloatSpread(e){return e*(.5-Math.random())},degToRad:function degToRad(e){return e*os.DEG2RAD},radToDeg:function radToDeg(e){return e*os.RAD2DEG},isPowerOfTwo:function isPowerOfTwo(e){return 0==(e&e-1)&&0!==e},ceilPowerOfTwo:function ceilPowerOfTwo(e){return Do(2,_o(Ao(e)/Lo))},floorPowerOfTwo:function floorPowerOfTwo(e){return Do(2,Po(Ao(e)/Lo))},setQuaternionFromProperEuler:function setQuaternionFromProperEuler(e,t,r,a,i){// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles
// rotations are applied to the axes in the order specified by 'order'
// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'
// angles are in radians
var n=Ro,o=So,s=n(r/2),l=o(r/2),d=n((t+a)/2),p=o((t+a)/2),c=n((t-a)/2),u=o((t-a)/2),m=n((a-t)/2),g=o((a-t)/2);"XYX"===i?e.set(s*p,l*c,l*u,s*d):"YZY"===i?e.set(l*u,s*p,l*c,s*d):"ZXZ"===i?e.set(l*c,l*u,s*p,s*d):"XZX"===i?e.set(s*p,l*g,l*m,s*d):"YXY"===i?e.set(l*m,s*p,l*g,s*d):"ZYZ"===i?e.set(l*g,l*m,s*p,s*d):console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order.")}};Object.defineProperties(h.prototype,{width:{get:function get(){return this.x},set:function set(e){this.x=e}},height:{get:function get(){return this.y},set:function set(e){this.y=e}}}),Object.assign(h.prototype,{isVector2:!0,set:function set(e,t){return this.x=e,this.y=t,this},setScalar:function setScalar(e){return this.x=e,this.y=e,this},setX:function setX(e){return this.x=e,this},setY:function setY(e){return this.y=e,this},setComponent:function setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e);}return this},getComponent:function getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e);}},clone:function clone(){return new this.constructor(this.x,this.y)},copy:function copy(e){return this.x=e.x,this.y=e.y,this},add:function add(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this):(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t))},addScalar:function addScalar(e){return this.x+=e,this.y+=e,this},addVectors:function addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function sub(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this):(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t))},subScalar:function subScalar(e){return this.x-=e,this.y-=e,this},subVectors:function subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function multiply(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function multiplyScalar(e){return this.x*=e,this.y*=e,this},divide:function divide(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function divideScalar(e){return this.multiplyScalar(1/e)},applyMatrix3:function applyMatrix3(t){var r=this.x,a=this.y,i=t.elements;return this.x=i[0]*r+i[3]*a+i[6],this.y=i[1]*r+i[4]*a+i[7],this},min:function min(e){return this.x=Io(this.x,e.x),this.y=Io(this.y,e.y),this},max:function max(e){return this.x=No(this.x,e.x),this.y=No(this.y,e.y),this},clamp:function clamp(e,t){return this.x=No(e.x,Io(t.x,this.x)),this.y=No(e.y,Io(t.y,this.y)),this},clampScalar:function clampScalar(e,t){return this.x=No(e,Io(t,this.x)),this.y=No(e,Io(t,this.y)),this},clampLength:function clampLength(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(No(e,Io(t,r)))},floor:function floor(){return this.x=Po(this.x),this.y=Po(this.y),this},ceil:function ceil(){return this.x=_o(this.x),this.y=_o(this.y),this},round:function round(){return this.x=xo(this.x),this.y=xo(this.y),this},roundToZero:function roundToZero(){return this.x=0>this.x?_o(this.x):Po(this.x),this.y=0>this.y?_o(this.y):Po(this.y),this},negate:function negate(){return this.x=-this.x,this.y=-this.y,this},dot:function dot(e){return this.x*e.x+this.y*e.y},cross:function cross(e){return this.x*e.y-this.y*e.x},lengthSq:function lengthSq(){return this.x*this.x+this.y*this.y},length:function length(){return wo(this.x*this.x+this.y*this.y)},manhattanLength:function manhattanLength(){return zo(this.x)+zo(this.y)},normalize:function normalize(){return this.divideScalar(this.length()||1)},angle:function(){// computes the angle in radians with respect to the positive x-axis
var e=To(-this.y,-this.x)+Eo;return e},distanceTo:function distanceTo(e){return wo(this.distanceToSquared(e))},distanceToSquared:function distanceToSquared(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},manhattanDistanceTo:function manhattanDistanceTo(e){return zo(this.x-e.x)+zo(this.y-e.y)},setLength:function setLength(e){return this.normalize().multiplyScalar(e)},lerp:function lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function lerpVectors(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function fromArray(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function toArray(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromBufferAttribute:function fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this},rotateAround:function rotateAround(e,t){var r=Ro(t),a=So(t),i=this.x-e.x,n=this.y-e.y;return this.x=i*r-n*a+e.x,this.y=i*a+n*r+e.y,this}}),Object.assign(y.prototype,{isMatrix3:!0,set:function set(e,t,r,a,i,n,o,s,l){var d=this.elements;return d[0]=e,d[1]=a,d[2]=o,d[3]=t,d[4]=i,d[5]=s,d[6]=r,d[7]=n,d[8]=l,this},identity:function identity(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function clone(){return new this.constructor().fromArray(this.elements)},copy:function copy(e){var t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],this},extractBasis:function extractBasis(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this},setFromMatrix4:function setFromMatrix4(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},multiply:function multiply(e){return this.multiplyMatrices(this,e)},premultiply:function premultiply(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function multiplyMatrices(e,t){var r=e.elements,a=t.elements,i=this.elements,n=r[0],o=r[3],s=r[6],l=r[1],d=r[4],p=r[7],c=r[2],u=r[5],m=r[8],g=a[0],f=a[3],h=a[6],y=a[1],v=a[4],x=a[7],_=a[2],b=a[5],M=a[8];return i[0]=n*g+o*y+s*_,i[3]=n*f+o*v+s*b,i[6]=n*h+o*x+s*M,i[1]=l*g+d*y+p*_,i[4]=l*f+d*v+p*b,i[7]=l*h+d*x+p*M,i[2]=c*g+u*y+m*_,i[5]=c*f+u*v+m*b,i[8]=c*h+u*x+m*M,this},multiplyScalar:function multiplyScalar(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function determinant(){var t=this.elements,r=t[0],a=t[1],n=t[2],o=t[3],s=t[4],e=t[5],l=t[6],d=t[7],p=t[8];return r*s*p-r*e*d-a*o*p+a*e*l+n*o*d-n*s*l},getInverse:function getInverse(e,t){void 0!==t&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");var r=e.elements,a=this.elements,i=r[0],n=r[1],o=r[2],s=r[3],l=r[4],d=r[5],p=r[6],c=r[7],u=r[8],m=u*l-d*c,g=d*p-u*s,f=c*s-l*p,h=i*m+n*g+o*f;if(0==h)return this.set(0,0,0,0,0,0,0,0,0);var y=1/h;return a[0]=m*y,a[1]=(o*c-u*n)*y,a[2]=(d*n-o*l)*y,a[3]=g*y,a[4]=(u*i-o*p)*y,a[5]=(o*s-d*i)*y,a[6]=f*y,a[7]=(n*p-c*i)*y,a[8]=(l*i-n*s)*y,this},transpose:function transpose(){var e=this.elements,t;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function getNormalMatrix(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function transposeIntoArray(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},setUvTransform:function setUvTransform(e,t,r,a,i,n,o){var l=Ro(i),d=So(i);this.set(r*l,r*d,-r*(l*n+d*o)+n+e,-a*d,a*l,-a*(-d*n+l*o)+o+t,0,0,1)},scale:function scale(e,t){var r=this.elements;return r[0]*=e,r[3]*=e,r[6]*=e,r[1]*=t,r[4]*=t,r[7]*=t,this},rotate:function rotate(e){var t=Ro(e),r=So(e),a=this.elements,i=a[0],n=a[3],o=a[6],s=a[1],l=a[4],d=a[7];return a[0]=t*i+r*s,a[3]=t*n+r*l,a[6]=t*o+r*d,a[1]=-r*i+t*s,a[4]=-r*n+t*l,a[7]=-r*o+t*d,this},translate:function translate(e,t){var r=this.elements;return r[0]+=e*r[2],r[3]+=e*r[5],r[6]+=e*r[8],r[1]+=t*r[2],r[4]+=t*r[5],r[7]+=t*r[8],this},equals:function(e){for(var t=this.elements,r=e.elements,a=0;9>a;a++)if(t[a]!==r[a])return!1;return!0},fromArray:function fromArray(e,t){t===void 0&&(t=0);for(var r=0;9>r;r++)this.elements[r]=e[r+t];return this},toArray:function toArray(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}});/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   * @author szimek / https://github.com/szimek/
   */var ss={getDataURL:function getDataURL(e){var t;if("undefined"==typeof HTMLCanvasElement)return e.src;if(e instanceof HTMLCanvasElement)t=e;else{void 0===ds&&(ds=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),ds.width=e.width,ds.height=e.height;var r=ds.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),t=ds}return 2048<t.width||2048<t.height?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}},ls=0,ds;v.DEFAULT_IMAGE=void 0,v.DEFAULT_MAPPING=Ho,v.prototype=Object.assign(Object.create(f.prototype),{constructor:v,isTexture:!0,updateMatrix:function updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function clone(){return new this.constructor().copy(this)},copy:function copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];var r={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){// TODO: Move to THREE.Image
var a=this.image;if(void 0===a.uuid&&(a.uuid=os.generateUUID()),!t&&void 0===e.images[a.uuid]){var n;if(Array.isArray(a)){n=[];for(var o=0,s=a.length;o<s;o++)n.push(ss.getDataURL(a[o]))}else// process single image
n=ss.getDataURL(a);e.images[a.uuid]={uuid:a.uuid,url:n}}r.image=a.uuid}return t||(e.textures[this.uuid]=r),r},dispose:function dispose(){this.dispatchEvent({type:"dispose"})},transformUv:function transformUv(e){if(this.mapping!==Ho)return e;if(e.applyMatrix3(this.matrix),0>e.x||1<e.x)switch(this.wrapS){case Vo:e.x-=Po(e.x);break;case ko:e.x=0>e.x?0:1;break;case Wo:1===zo(Po(e.x)%2)?e.x=_o(e.x)-e.x:e.x-=Po(e.x);}if(0>e.y||1<e.y)switch(this.wrapT){case Vo:e.y-=Po(e.y);break;case ko:e.y=0>e.y?0:1;break;case Wo:1===zo(Po(e.y)%2)?e.y=_o(e.y)-e.y:e.y-=Po(e.y);}return this.flipY&&(e.y=1-e.y),e}}),Object.defineProperty(v.prototype,"needsUpdate",{set:function set(e){!0===e&&this.version++}}),Object.defineProperties(x.prototype,{width:{get:function get(){return this.z},set:function set(e){this.z=e}},height:{get:function get(){return this.w},set:function set(e){this.w=e}}}),Object.assign(x.prototype,{isVector4:!0,set:function set(e,t,r,a){return this.x=e,this.y=t,this.z=r,this.w=a,this},setScalar:function setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function setX(e){return this.x=e,this},setY:function setY(e){return this.y=e,this},setZ:function setZ(e){return this.z=e,this},setW:function setW(e){return this.w=e,this},setComponent:function setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e);}return this},getComponent:function getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e);}},clone:function clone(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0===e.w?1:e.w,this},add:function add(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this):(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t))},addScalar:function addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function sub(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this):(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t))},subScalar:function subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function applyMatrix4(t){var r=this.x,a=this.y,i=this.z,n=this.w,o=t.elements;return this.x=o[0]*r+o[4]*a+o[8]*i+o[12]*n,this.y=o[1]*r+o[5]*a+o[9]*i+o[13]*n,this.z=o[2]*r+o[6]*a+o[10]*i+o[14]*n,this.w=o[3]*r+o[7]*a+o[11]*i+o[15]*n,this},divideScalar:function divideScalar(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function setAxisAngleFromQuaternion(e){this.w=2*vo(e.w);var t=wo(1-e.w*e.w);return 1e-4>t?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function setAxisAngleFromRotationMatrix(e){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm
// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
var// variables for result
t=.01,// margin to allow for rounding errors
r=.1,// margin to distinguish between 0 and 180 degrees
a=e.elements,i=a[0],n=a[4],o=a[8],l=a[1],d=a[5],p=a[9],c=a[2],u=a[6],m=a[10],g,f,h,v;if(zo(n-l)<t&&zo(o-c)<t&&zo(p-u)<t){// singularity found
// first check for identity matrix which must have +1 for all terms
// in leading diagonal and zero in other terms
if(zo(n+l)<r&&zo(o+c)<r&&zo(p+u)<r&&zo(i+d+m-3)<r)return this.set(1,0,0,0),this;// zero angle, arbitrary axis
// otherwise this singularity is angle = 180
g=Eo;var _=(i+1)/2,b=(d+1)/2,M=(m+1)/2,S=(n+l)/4,T=(o+c)/4,E=(p+u)/4;return _>b&&_>M?_<t?(f=0,h=.707106781,v=.707106781):(f=wo(_),h=S/f,v=T/f):b>M?b<t?(f=.707106781,h=0,v=.707106781):(h=wo(b),f=S/h,v=E/h):M<t?(f=.707106781,h=.707106781,v=0):(v=wo(M),f=T/v,h=E/v),this.set(f,h,v,g),this;// return 180 deg rotation
}// as we have reached here there are no singularities so we can handle normally
var w=wo((u-p)*(u-p)+(o-c)*(o-c)+(l-n)*(l-n));// used to normalize
return .001>zo(w)&&(w=1),this.x=(u-p)/w,this.y=(o-c)/w,this.z=(l-n)/w,this.w=vo((i+d+m-1)/2),this},min:function min(e){return this.x=Io(this.x,e.x),this.y=Io(this.y,e.y),this.z=Io(this.z,e.z),this.w=Io(this.w,e.w),this},max:function max(e){return this.x=No(this.x,e.x),this.y=No(this.y,e.y),this.z=No(this.z,e.z),this.w=No(this.w,e.w),this},clamp:function clamp(e,t){return this.x=No(e.x,Io(t.x,this.x)),this.y=No(e.y,Io(t.y,this.y)),this.z=No(e.z,Io(t.z,this.z)),this.w=No(e.w,Io(t.w,this.w)),this},clampScalar:function clampScalar(e,t){return this.x=No(e,Io(t,this.x)),this.y=No(e,Io(t,this.y)),this.z=No(e,Io(t,this.z)),this.w=No(e,Io(t,this.w)),this},clampLength:function clampLength(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(No(e,Io(t,r)))},floor:function floor(){return this.x=Po(this.x),this.y=Po(this.y),this.z=Po(this.z),this.w=Po(this.w),this},ceil:function ceil(){return this.x=_o(this.x),this.y=_o(this.y),this.z=_o(this.z),this.w=_o(this.w),this},round:function round(){return this.x=xo(this.x),this.y=xo(this.y),this.z=xo(this.z),this.w=xo(this.w),this},roundToZero:function roundToZero(){return this.x=0>this.x?_o(this.x):Po(this.x),this.y=0>this.y?_o(this.y):Po(this.y),this.z=0>this.z?_o(this.z):Po(this.z),this.w=0>this.w?_o(this.w):Po(this.w),this},negate:function negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function length(){return wo(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function manhattanLength(){return zo(this.x)+zo(this.y)+zo(this.z)+zo(this.w)},normalize:function normalize(){return this.divideScalar(this.length()||1)},setLength:function setLength(e){return this.normalize().multiplyScalar(e)},lerp:function lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function lerpVectors(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function fromArray(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function toArray(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromBufferAttribute:function fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}}),_.prototype=Object.assign(Object.create(f.prototype),{constructor:_,isWebGLRenderTarget:!0,setSize:function setSize(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function clone(){return new this.constructor().copy(this)},copy:function copy(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function dispose(){this.dispatchEvent({type:"dispose"})}}),b.prototype=Object.assign(Object.create(_.prototype),{constructor:b,isWebGLMultisampleRenderTarget:!0,copy:function copy(e){return _.prototype.copy.call(this,e),this.samples=e.samples,this}}),Object.assign(M,{slerp:function slerp(e,r,a,i){return a.copy(e).slerp(r,i)},slerpFlat:function slerpFlat(e,r,a,i,n,o,l){// fuzz-free, array-based Quaternion SLERP operation
var d=a[i+0],p=a[i+1],c=a[i+2],u=a[i+3],m=n[o+0],g=n[o+1],h=n[o+2],y=n[o+3];if(u!==y||d!==m||p!==g||c!==h){var v=1-l,x=d*m+p*g+c*h+u*y,_=0<=x?1:-1,b=1-x*x;// Skip the Slerp for tiny steps to avoid numeric problems:
if(b>Mo){var M=wo(b),S=To(M,x*_);v=So(v*S)/M,l=So(l*S)/M}var T=l*_;// Normalize in case we just did a lerp:
if(d=d*v+m*T,p=p*v+g*T,c=c*v+h*T,u=u*v+y*T,v==1-l){var E=1/wo(d*d+p*p+c*c+u*u);d*=E,p*=E,c*=E,u*=E}}e[r]=d,e[r+1]=p,e[r+2]=c,e[r+3]=u}}),Object.defineProperties(M.prototype,{x:{get:function get(){return this._x},set:function set(e){this._x=e,this._onChangeCallback()}},y:{get:function get(){return this._y},set:function set(e){this._y=e,this._onChangeCallback()}},z:{get:function get(){return this._z},set:function set(e){this._z=e,this._onChangeCallback()}},w:{get:function get(){return this._w},set:function set(e){this._w=e,this._onChangeCallback()}}}),Object.assign(M.prototype,{isQuaternion:!0,set:function set(e,t,r,a){return this._x=e,this._y=t,this._z=r,this._w=a,this._onChangeCallback(),this},clone:function clone(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this},setFromEuler:function setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var r=e._x,a=e._y,i=e._z,n=e.order,o=Ro,s=So,l=o(r/2),d=o(a/2),p=o(i/2),c=s(r/2),u=s(a/2),m=s(i/2);// http://www.mathworks.com/matlabcentral/fileexchange/
// 	20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/
//	content/SpinCalc.m
return"XYZ"===n?(this._x=c*d*p+l*u*m,this._y=l*u*p-c*d*m,this._z=l*d*m+c*u*p,this._w=l*d*p-c*u*m):"YXZ"===n?(this._x=c*d*p+l*u*m,this._y=l*u*p-c*d*m,this._z=l*d*m-c*u*p,this._w=l*d*p+c*u*m):"ZXY"===n?(this._x=c*d*p-l*u*m,this._y=l*u*p+c*d*m,this._z=l*d*m+c*u*p,this._w=l*d*p-c*u*m):"ZYX"===n?(this._x=c*d*p-l*u*m,this._y=l*u*p+c*d*m,this._z=l*d*m-c*u*p,this._w=l*d*p+c*u*m):"YZX"===n?(this._x=c*d*p+l*u*m,this._y=l*u*p+c*d*m,this._z=l*d*m-c*u*p,this._w=l*d*p-c*u*m):"XZY"===n&&(this._x=c*d*p-l*u*m,this._y=l*u*p-c*d*m,this._z=l*d*m+c*u*p,this._w=l*d*p+c*u*m),!1!==t&&this._onChangeCallback(),this},setFromAxisAngle:function setFromAxisAngle(e,t){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm
// assumes axis is normalized
var r=t/2,a=So(r);return this._x=e.x*a,this._y=e.y*a,this._z=e.z*a,this._w=Ro(r),this._onChangeCallback(),this},setFromRotationMatrix:function setFromRotationMatrix(e){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm
// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
var t=e.elements,r=t[0],a=t[4],i=t[8],n=t[1],o=t[5],l=t[9],d=t[2],p=t[6],c=t[10],u=r+o+c,m;return 0<u?(m=.5/wo(u+1),this._w=.25/m,this._x=(p-l)*m,this._y=(i-d)*m,this._z=(n-a)*m):r>o&&r>c?(m=2*wo(1+r-o-c),this._w=(p-l)/m,this._x=.25*m,this._y=(a+n)/m,this._z=(i+d)/m):o>c?(m=2*wo(1+o-r-c),this._w=(i-d)/m,this._x=(a+n)/m,this._y=.25*m,this._z=(l+p)/m):(m=2*wo(1+c-r-o),this._w=(n-a)/m,this._x=(i+d)/m,this._y=(l+p)/m,this._z=.25*m),this._onChangeCallback(),this},setFromUnitVectors:function setFromUnitVectors(e,t){// assumes direction vectors vFrom and vTo are normalized
var a=e.dot(t)+1;return a<1e-6?(a=0,zo(e.x)>zo(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=a):(this._x=0,this._y=-e.z,this._z=e.y,this._w=a)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=a),this.normalize()},angleTo:function angleTo(e){return 2*vo(zo(os.clamp(this.dot(e),-1,1)))},rotateTowards:function rotateTowards(e,r){var a=this.angleTo(e);if(0===a)return this;var i=Io(1,r/a);return this.slerp(e,i),this},inverse:function inverse(){// quaternion is assumed to have unit length
return this.conjugate()},conjugate:function conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this},dot:function dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function length(){return wo(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function normalize(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x*=e,this._y*=e,this._z*=e,this._w*=e),this._onChangeCallback(),this},multiply:function multiply(e,t){return void 0===t?this.multiplyQuaternions(this,e):(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t))},premultiply:function premultiply(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function multiplyQuaternions(e,t){// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm
var r=e._x,a=e._y,i=e._z,n=e._w,o=t._x,s=t._y,l=t._z,d=t._w;return this._x=r*d+n*o+a*l-i*s,this._y=a*d+n*s+i*o-r*l,this._z=i*d+n*l+r*s-a*o,this._w=n*d-r*o-a*s-i*l,this._onChangeCallback(),this},slerp:function slerp(e,r){if(0===r)return this;if(1===r)return this.copy(e);var t=this._x,a=this._y,i=this._z,n=this._w,o=n*e._w+t*e._x+a*e._y+i*e._z;// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/
if(0>o?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),1<=o)return this._w=n,this._x=t,this._y=a,this._z=i,this;var l=1-o*o;if(l<=Mo){var d=1-r;return this._w=d*n+r*this._w,this._x=d*t+r*this._x,this._y=d*a+r*this._y,this._z=d*i+r*this._z,this.normalize(),this._onChangeCallback(),this}var s=wo(l),p=To(s,o),c=So((1-r)*p)/s,u=So(r*p)/s;return this._w=n*c+this._w*u,this._x=t*c+this._x*u,this._y=a*c+this._y*u,this._z=i*c+this._z*u,this._onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function fromArray(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this},toArray:function toArray(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},fromBufferAttribute:function fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this},_onChange:function _onChange(e){return this._onChangeCallback=e,this},_onChangeCallback:function _onChangeCallback(){}});/**
   * @author mrdoob / http://mrdoob.com/
   * @author kile / http://kile.stravaganza.org/
   * @author philogb / http://blog.thejit.org/
   * @author mikael emtinger / http://gomo.se/
   * @author egraether / http://egraether.com/
   * @author WestLangley / http://github.com/WestLangley
   */var ps=new S,cs=new M;Object.assign(S.prototype,{isVector3:!0,set:function set(e,t,r){return this.x=e,this.y=t,this.z=r,this},setScalar:function setScalar(e){return this.x=e,this.y=e,this.z=e,this},setX:function setX(e){return this.x=e,this},setY:function setY(e){return this.y=e,this},setZ:function setZ(e){return this.z=e,this},setComponent:function setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e);}return this},getComponent:function getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e);}},clone:function clone(){return new this.constructor(this.x,this.y,this.z)},copy:function copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function add(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this.z+=e.z,this):(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t))},addScalar:function addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function sub(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this.z-=e.z,this):(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t))},subScalar:function subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function multiply(e,t){return void 0===t?(this.x*=e.x,this.y*=e.y,this.z*=e.z,this):(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t))},multiplyScalar:function multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(cs.setFromEuler(e))},applyAxisAngle:function applyAxisAngle(e,t){return this.applyQuaternion(cs.setFromAxisAngle(e,t))},applyMatrix3:function applyMatrix3(t){var r=this.x,a=this.y,i=this.z,n=t.elements;return this.x=n[0]*r+n[3]*a+n[6]*i,this.y=n[1]*r+n[4]*a+n[7]*i,this.z=n[2]*r+n[5]*a+n[8]*i,this},applyNormalMatrix:function applyNormalMatrix(e){return this.applyMatrix3(e).normalize()},applyMatrix4:function applyMatrix4(t){var r=this.x,a=this.y,i=this.z,n=t.elements,e=1/(n[3]*r+n[7]*a+n[11]*i+n[15]);return this.x=(n[0]*r+n[4]*a+n[8]*i+n[12])*e,this.y=(n[1]*r+n[5]*a+n[9]*i+n[13])*e,this.z=(n[2]*r+n[6]*a+n[10]*i+n[14])*e,this},applyQuaternion:function applyQuaternion(e){var t=this.x,r=this.y,a=this.z,i=e.x,n=e.y,o=e.z,s=e.w,l=s*t+n*a-o*r,d=s*r+o*t-i*a,p=s*a+i*r-n*t,c=-i*t-n*r-o*a;return this.x=l*s+c*-i+d*-o-p*-n,this.y=d*s+c*-n+p*-i-l*-o,this.z=p*s+c*-o+l*-n-d*-i,this},project:function project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)},unproject:function unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)},transformDirection:function transformDirection(t){// input: THREE.Matrix4 affine matrix
// vector interpreted as a direction
var r=this.x,a=this.y,i=this.z,n=t.elements;return this.x=n[0]*r+n[4]*a+n[8]*i,this.y=n[1]*r+n[5]*a+n[9]*i,this.z=n[2]*r+n[6]*a+n[10]*i,this.normalize()},divide:function divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function divideScalar(e){return this.multiplyScalar(1/e)},min:function min(e){return this.x=Io(this.x,e.x),this.y=Io(this.y,e.y),this.z=Io(this.z,e.z),this},max:function max(e){return this.x=No(this.x,e.x),this.y=No(this.y,e.y),this.z=No(this.z,e.z),this},clamp:function clamp(e,t){return this.x=No(e.x,Io(t.x,this.x)),this.y=No(e.y,Io(t.y,this.y)),this.z=No(e.z,Io(t.z,this.z)),this},clampScalar:function clampScalar(e,t){return this.x=No(e,Io(t,this.x)),this.y=No(e,Io(t,this.y)),this.z=No(e,Io(t,this.z)),this},clampLength:function clampLength(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(No(e,Io(t,r)))},floor:function floor(){return this.x=Po(this.x),this.y=Po(this.y),this.z=Po(this.z),this},ceil:function ceil(){return this.x=_o(this.x),this.y=_o(this.y),this.z=_o(this.z),this},round:function round(){return this.x=xo(this.x),this.y=xo(this.y),this.z=xo(this.z),this},roundToZero:function roundToZero(){return this.x=0>this.x?_o(this.x):Po(this.x),this.y=0>this.y?_o(this.y):Po(this.y),this.z=0>this.z?_o(this.z):Po(this.z),this},negate:function negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function dot(e){return this.x*e.x+this.y*e.y+this.z*e.z},// TODO lengthSquared?
lengthSq:function lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function length(){return wo(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function manhattanLength(){return zo(this.x)+zo(this.y)+zo(this.z)},normalize:function normalize(){return this.divideScalar(this.length()||1)},setLength:function setLength(e){return this.normalize().multiplyScalar(e)},lerp:function lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function lerpVectors(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},cross:function cross(e,t){return void 0===t?this.crossVectors(this,e):(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t))},crossVectors:function crossVectors(e,t){var r=e.x,a=e.y,i=e.z,n=t.x,o=t.y,s=t.z;return this.x=a*s-i*o,this.y=i*n-r*s,this.z=r*o-a*n,this},projectOnVector:function projectOnVector(e){var t=e.lengthSq();if(0===t)return this.set(0,0,0);var r=e.dot(this)/t;return this.copy(e).multiplyScalar(r)},projectOnPlane:function projectOnPlane(e){return ps.copy(this).projectOnVector(e),this.sub(ps)},reflect:function reflect(e){// reflect incident vector off plane orthogonal to normal
// normal is assumed to have unit length
return this.sub(ps.copy(e).multiplyScalar(2*this.dot(e)))},angleTo:function angleTo(e){var t=wo(this.lengthSq()*e.lengthSq());if(0===t)return Eo/2;var r=this.dot(e)/t;// clamp, to handle numerical problems
return vo(os.clamp(r,-1,1))},distanceTo:function distanceTo(e){return wo(this.distanceToSquared(e))},distanceToSquared:function distanceToSquared(e){var t=this.x-e.x,r=this.y-e.y,a=this.z-e.z;return t*t+r*r+a*a},manhattanDistanceTo:function manhattanDistanceTo(e){return zo(this.x-e.x)+zo(this.y-e.y)+zo(this.z-e.z)},setFromSpherical:function setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)},setFromSphericalCoords:function setFromSphericalCoords(e,t,r){var a=So(t)*e;return this.x=a*So(r),this.y=Ro(t)*e,this.z=a*Ro(r),this},setFromCylindrical:function setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)},setFromCylindricalCoords:function setFromCylindricalCoords(e,t,r){return this.x=e*So(t),this.y=r,this.z=e*Ro(t),this},setFromMatrixPosition:function setFromMatrixPosition(t){var r=t.elements;return this.x=r[12],this.y=r[13],this.z=r[14],this},setFromMatrixScale:function setFromMatrixScale(e){var t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),a=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=a,this},setFromMatrixColumn:function setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)},setFromMatrix3Column:function setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function fromArray(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function toArray(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromBufferAttribute:function fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}});var us=new S,ms=new T,gs=new S(0,0,0),fs=new S(1,1,1),hs=new S,a=new S,z=new S;Object.assign(T.prototype,{isMatrix4:!0,set:function set(e,t,r,a,i,n,o,s,l,d,p,c,u,m,g,f){var h=this.elements;return h[0]=e,h[4]=t,h[8]=r,h[12]=a,h[1]=i,h[5]=n,h[9]=o,h[13]=s,h[2]=l,h[6]=d,h[10]=p,h[14]=c,h[3]=u,h[7]=m,h[11]=g,h[15]=f,this},identity:function identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function clone(){return new T().fromArray(this.elements)},copy:function copy(e){var t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],this},copyPosition:function copyPosition(e){var t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractBasis:function extractBasis(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this},makeBasis:function makeBasis(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this},extractRotation:function extractRotation(e){// this method does not support reflection matrices
var t=this.elements,r=e.elements,a=1/us.setFromMatrixColumn(e,0).length(),i=1/us.setFromMatrixColumn(e,1).length(),n=1/us.setFromMatrixColumn(e,2).length();return t[0]=r[0]*a,t[1]=r[1]*a,t[2]=r[2]*a,t[3]=0,t[4]=r[4]*i,t[5]=r[5]*i,t[6]=r[6]*i,t[7]=0,t[8]=r[8]*n,t[9]=r[9]*n,t[10]=r[10]*n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromEuler:function makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var r=this.elements,i=t.x,n=t.y,o=t.z,s=Ro(i),a=So(i),l=Ro(n),p=So(n),d=Ro(o),e=So(o);if("XYZ"===t.order){var c=s*d,u=s*e,m=a*d,g=a*e;r[0]=l*d,r[4]=-l*e,r[8]=p,r[1]=u+m*p,r[5]=c-g*p,r[9]=-a*l,r[2]=g-c*p,r[6]=m+u*p,r[10]=s*l}else if("YXZ"===t.order){var f=l*d,h=l*e,y=p*d,v=p*e;r[0]=f+v*a,r[4]=y*a-h,r[8]=s*p,r[1]=s*e,r[5]=s*d,r[9]=-a,r[2]=h*a-y,r[6]=v+f*a,r[10]=s*l}else if("ZXY"===t.order){var f=l*d,h=l*e,y=p*d,v=p*e;r[0]=f-v*a,r[4]=-s*e,r[8]=y+h*a,r[1]=h+y*a,r[5]=s*d,r[9]=v-f*a,r[2]=-s*p,r[6]=a,r[10]=s*l}else if("ZYX"===t.order){var c=s*d,u=s*e,m=a*d,g=a*e;r[0]=l*d,r[4]=m*p-u,r[8]=c*p+g,r[1]=l*e,r[5]=g*p+c,r[9]=u*p-m,r[2]=-p,r[6]=a*l,r[10]=s*l}else if("YZX"===t.order){var x=s*l,_=s*p,b=a*l,M=a*p;r[0]=l*d,r[4]=M-x*e,r[8]=b*e+_,r[1]=e,r[5]=s*d,r[9]=-a*d,r[2]=-p*d,r[6]=_*e+b,r[10]=x-M*e}else if("XZY"===t.order){var x=s*l,_=s*p,b=a*l,M=a*p;r[0]=l*d,r[4]=-e,r[8]=p*d,r[1]=x*e+M,r[5]=s*d,r[9]=_*e-b,r[2]=b*e-_,r[6]=a*d,r[10]=M*e+x}// bottom row
return r[3]=0,r[7]=0,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,this},makeRotationFromQuaternion:function makeRotationFromQuaternion(e){return this.compose(gs,e,fs)},lookAt:function lookAt(e,t,r){var i=this.elements;return z.subVectors(e,t),0===z.lengthSq()&&(z.z=1),z.normalize(),hs.crossVectors(r,z),0===hs.lengthSq()&&(1===zo(r.z)?z.x+=1e-4:z.z+=1e-4,z.normalize(),hs.crossVectors(r,z)),hs.normalize(),a.crossVectors(z,hs),i[0]=hs.x,i[4]=a.x,i[8]=z.x,i[1]=hs.y,i[5]=a.y,i[9]=z.y,i[2]=hs.z,i[6]=a.z,i[10]=z.z,this},multiply:function multiply(e,t){return void 0===t?this.multiplyMatrices(this,e):(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t))},premultiply:function premultiply(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function multiplyMatrices(e,t){var r=e.elements,a=t.elements,i=this.elements,n=r[0],o=r[4],s=r[8],l=r[12],d=r[1],p=r[5],c=r[9],u=r[13],m=r[2],g=r[6],f=r[10],h=r[14],y=r[3],v=r[7],x=r[11],_=r[15],b=a[0],M=a[4],S=a[8],T=a[12],E=a[1],w=a[5],L=a[9],A=a[13],R=a[2],P=a[6],C=a[10],D=a[14],I=a[3],N=a[7],z=a[11],U=a[15];return i[0]=n*b+o*E+s*R+l*I,i[4]=n*M+o*w+s*P+l*N,i[8]=n*S+o*L+s*C+l*z,i[12]=n*T+o*A+s*D+l*U,i[1]=d*b+p*E+c*R+u*I,i[5]=d*M+p*w+c*P+u*N,i[9]=d*S+p*L+c*C+u*z,i[13]=d*T+p*A+c*D+u*U,i[2]=m*b+g*E+f*R+h*I,i[6]=m*M+g*w+f*P+h*N,i[10]=m*S+g*L+f*C+h*z,i[14]=m*T+g*A+f*D+h*U,i[3]=y*b+v*E+x*R+_*I,i[7]=y*M+v*w+x*P+_*N,i[11]=y*S+v*L+x*C+_*z,i[15]=y*T+v*A+x*D+_*U,this},multiplyScalar:function multiplyScalar(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},determinant:function determinant(){var e=this.elements,t=e[0],r=e[4],a=e[8],i=e[12],n=e[1],o=e[5],s=e[9],l=e[13],d=e[2],p=e[6],c=e[10],u=e[14],m=e[3],g=e[7],f=e[11],h=e[15];//TODO: make this more efficient
//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )
return m*(+i*s*p-a*l*p-i*o*c+r*l*c+a*o*u-r*s*u)+g*(+t*s*u-t*l*c+i*n*c-a*n*u+a*l*d-i*s*d)+f*(+t*l*p-t*o*u-i*n*p+r*n*u+i*o*d-r*l*d)+h*(-a*o*d-t*s*p+t*o*c+a*n*p-r*n*c+r*s*d)},transpose:function transpose(){var e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function setPosition(e,t,r){var a=this.elements;return e.isVector3?(a[12]=e.x,a[13]=e.y,a[14]=e.z):(a[12]=e,a[13]=t,a[14]=r),this},getInverse:function getInverse(e,t){void 0!==t&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
var r=this.elements,a=e.elements,i=a[0],n=a[1],o=a[2],s=a[3],l=a[4],d=a[5],p=a[6],c=a[7],u=a[8],m=a[9],g=a[10],f=a[11],h=a[12],y=a[13],v=a[14],x=a[15],_=m*v*c-y*g*c+y*p*f-d*v*f-m*p*x+d*g*x,b=h*g*c-u*v*c-h*p*f+l*v*f+u*p*x-l*g*x,M=u*y*c-h*m*c+h*d*f-l*y*f-u*d*x+l*m*x,S=h*m*p-u*y*p-h*d*g+l*y*g+u*d*v-l*m*v,T=i*_+n*b+o*M+s*S;if(0===T)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var E=1/T;return r[0]=_*E,r[1]=(y*g*s-m*v*s-y*o*f+n*v*f+m*o*x-n*g*x)*E,r[2]=(d*v*s-y*p*s+y*o*c-n*v*c-d*o*x+n*p*x)*E,r[3]=(m*p*s-d*g*s-m*o*c+n*g*c+d*o*f-n*p*f)*E,r[4]=b*E,r[5]=(u*v*s-h*g*s+h*o*f-i*v*f-u*o*x+i*g*x)*E,r[6]=(h*p*s-l*v*s-h*o*c+i*v*c+l*o*x-i*p*x)*E,r[7]=(l*g*s-u*p*s+u*o*c-i*g*c-l*o*f+i*p*f)*E,r[8]=M*E,r[9]=(h*m*s-u*y*s-h*n*f+i*y*f+u*n*x-i*m*x)*E,r[10]=(l*y*s-h*d*s+h*n*c-i*y*c-l*n*x+i*d*x)*E,r[11]=(u*d*s-l*m*s-u*n*c+i*m*c+l*n*f-i*d*f)*E,r[12]=S*E,r[13]=(u*y*o-h*m*o+h*n*g-i*y*g-u*n*v+i*m*v)*E,r[14]=(h*d*o-l*y*o-h*n*p+i*y*p+l*n*v-i*d*v)*E,r[15]=(l*m*o-u*d*o+u*n*p-i*m*p-l*n*g+i*d*g)*E,this},scale:function scale(e){var t=this.elements,r=e.x,a=e.y,i=e.z;return t[0]*=r,t[4]*=a,t[8]*=i,t[1]*=r,t[5]*=a,t[9]*=i,t[2]*=r,t[6]*=a,t[10]*=i,t[3]*=r,t[7]*=a,t[11]*=i,this},getMaxScaleOnAxis:function getMaxScaleOnAxis(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],a=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return wo(No(t,r,a))},makeTranslation:function makeTranslation(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function makeRotationX(e){var t=Ro(e),r=So(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},makeRotationY:function makeRotationY(e){var t=Ro(e),r=So(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},makeRotationZ:function makeRotationZ(e){var t=Ro(e),r=So(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function makeRotationAxis(e,r){// Based on http://www.gamedev.net/reference/articles/article1199.asp
var a=Ro(r),i=So(r),n=1-a,t=e.x,o=e.y,s=e.z,l=n*t,d=n*o;return this.set(l*t+a,l*o-i*s,l*s+i*o,0,l*o+i*s,d*o+a,d*s-i*t,0,l*s-i*o,d*s+i*t,n*s*s+a,0,0,0,0,1),this},makeScale:function makeScale(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},makeShear:function makeShear(e,t,r){return this.set(1,t,r,0,e,1,r,0,e,t,1,0,0,0,0,1),this},compose:function compose(e,t,r){var a=this.elements,i=t._x,n=t._y,o=t._z,s=t._w,l=i+i,d=n+n,p=o+o,c=i*l,u=i*d,m=i*p,g=n*d,f=n*p,h=o*p,y=s*l,v=s*d,x=s*p,_=r.x,b=r.y,M=r.z;return a[0]=(1-(g+h))*_,a[1]=(u+x)*_,a[2]=(m-v)*_,a[3]=0,a[4]=(u-x)*b,a[5]=(1-(c+h))*b,a[6]=(f+y)*b,a[7]=0,a[8]=(m+v)*M,a[9]=(f-y)*M,a[10]=(1-(c+g))*M,a[11]=0,a[12]=e.x,a[13]=e.y,a[14]=e.z,a[15]=1,this},decompose:function decompose(e,t,r){var a=this.elements,i=us.set(a[0],a[1],a[2]).length(),n=us.set(a[4],a[5],a[6]).length(),o=us.set(a[8],a[9],a[10]).length(),s=this.determinant();0>s&&(i=-i),e.x=a[12],e.y=a[13],e.z=a[14],ms.copy(this);var l=1/i,d=1/n,p=1/o;return ms.elements[0]*=l,ms.elements[1]*=l,ms.elements[2]*=l,ms.elements[4]*=d,ms.elements[5]*=d,ms.elements[6]*=d,ms.elements[8]*=p,ms.elements[9]*=p,ms.elements[10]*=p,t.setFromRotationMatrix(ms),r.x=i,r.y=n,r.z=o,this},makePerspective:function makePerspective(e,t,r,a,i,n){void 0===n&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var o=this.elements;return o[0]=2*i/(t-e),o[4]=0,o[8]=(t+e)/(t-e),o[12]=0,o[1]=0,o[5]=2*i/(r-a),o[9]=(r+a)/(r-a),o[13]=0,o[2]=0,o[6]=0,o[10]=-(n+i)/(n-i),o[14]=-2*n*i/(n-i),o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function makeOrthographic(e,t,r,a,i,n){var o=this.elements,s=1/(t-e),l=1/(r-a),d=1/(n-i);return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-((t+e)*s),o[1]=0,o[5]=2*l,o[9]=0,o[13]=-((r+a)*l),o[2]=0,o[6]=0,o[10]=-2*d,o[14]=-((n+i)*d),o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(e){for(var t=this.elements,r=e.elements,a=0;16>a;a++)if(t[a]!==r[a])return!1;return!0},fromArray:function fromArray(e,t){t===void 0&&(t=0);for(var r=0;16>r;r++)this.elements[r]=e[r+t];return this},toArray:function toArray(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}});/**
   * @author mrdoob / http://mrdoob.com/
   * @author WestLangley / http://github.com/WestLangley
   * @author bhouston / http://clara.io
   */var ys=new T,vs=new M;E.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],E.DefaultOrder="XYZ",Object.defineProperties(E.prototype,{x:{get:function get(){return this._x},set:function set(e){this._x=e,this._onChangeCallback()}},y:{get:function get(){return this._y},set:function set(e){this._y=e,this._onChangeCallback()}},z:{get:function get(){return this._z},set:function set(e){this._z=e,this._onChangeCallback()}},order:{get:function get(){return this._order},set:function set(e){this._order=e,this._onChangeCallback()}}}),Object.assign(E.prototype,{isEuler:!0,set:function set(e,t,r,a){return this._x=e,this._y=t,this._z=r,this._order=a||this._order,this._onChangeCallback(),this},clone:function clone(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this},setFromRotationMatrix:function setFromRotationMatrix(e,t,r){var a=Math.asin,i=os.clamp,n=e.elements,o=n[0],s=n[4],l=n[8],d=n[1],p=n[5],c=n[9],u=n[2],m=n[6],g=n[10];return t=t||this._order,"XYZ"===t?(this._y=a(i(l,-1,1)),.9999999>zo(l)?(this._x=To(-c,g),this._z=To(-s,o)):(this._x=To(m,p),this._z=0)):"YXZ"===t?(this._x=a(-i(c,-1,1)),.9999999>zo(c)?(this._y=To(l,g),this._z=To(d,p)):(this._y=To(-u,o),this._z=0)):"ZXY"===t?(this._x=a(i(m,-1,1)),.9999999>zo(m)?(this._y=To(-u,g),this._z=To(-s,p)):(this._y=0,this._z=To(d,o))):"ZYX"===t?(this._y=a(-i(u,-1,1)),.9999999>zo(u)?(this._x=To(m,g),this._z=To(d,o)):(this._x=0,this._z=To(-s,p))):"YZX"===t?(this._z=a(i(d,-1,1)),.9999999>zo(d)?(this._x=To(-c,p),this._y=To(-u,o)):(this._x=0,this._y=To(l,g))):"XZY"===t?(this._z=a(-i(s,-1,1)),.9999999>zo(s)?(this._x=To(m,p),this._y=To(l,o)):(this._x=To(-c,g),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,!1!==r&&this._onChangeCallback(),this},setFromQuaternion:function setFromQuaternion(e,t,r){return ys.makeRotationFromQuaternion(e),this.setFromRotationMatrix(ys,t,r)},setFromVector3:function setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function reorder(e){return vs.setFromEuler(this),this.setFromQuaternion(vs,e)},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this},toArray:function toArray(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function toVector3(e){return e?e.set(this._x,this._y,this._z):new S(this._x,this._y,this._z)},_onChange:function _onChange(e){return this._onChangeCallback=e,this},_onChangeCallback:function _onChangeCallback(){}}),Object.assign(w.prototype,{set:function set(e){this.mask=0|1<<e},enable:function enable(e){this.mask|=0|1<<e},enableAll:function enableAll(){this.mask=-1},toggle:function toggle(e){this.mask^=0|1<<e},disable:function disable(e){this.mask&=~(0|1<<e)},disableAll:function disableAll(){this.mask=0},test:function test(e){return 0!=(this.mask&e.mask)}});var xs=0,_s=new S,bs=new M,Ms=new T,Ss=new S,Ts=new S,Es=new S,ws=new M,Ls=new S(1,0,0),As=new S(0,1,0),Rs=new S(0,0,1),Ps={type:"added"},Cs={type:"removed"};L.DefaultUp=new S(0,1,0),L.DefaultMatrixAutoUpdate=!0,L.prototype=Object.assign(Object.create(f.prototype),{constructor:L,isObject3D:!0,onBeforeRender:function onBeforeRender(){},onAfterRender:function onAfterRender(){},applyMatrix4:function applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function applyQuaternion(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function setRotationFromAxisAngle(e,t){// assumes axis is normalized
this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function setRotationFromMatrix(e){// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function setRotationFromQuaternion(e){// assumes q is normalized
this.quaternion.copy(e)},rotateOnAxis:function rotateOnAxis(e,t){return bs.setFromAxisAngle(e,t),this.quaternion.multiply(bs),this},rotateOnWorldAxis:function rotateOnWorldAxis(e,t){return bs.setFromAxisAngle(e,t),this.quaternion.premultiply(bs),this},rotateX:function rotateX(e){return this.rotateOnAxis(Ls,e)},rotateY:function rotateY(e){return this.rotateOnAxis(As,e)},rotateZ:function rotateZ(e){return this.rotateOnAxis(Rs,e)},translateOnAxis:function translateOnAxis(e,t){return _s.copy(e).applyQuaternion(this.quaternion),this.position.add(_s.multiplyScalar(t)),this},translateX:function translateX(e){return this.translateOnAxis(Ls,e)},translateY:function translateY(e){return this.translateOnAxis(As,e)},translateZ:function translateZ(e){return this.translateOnAxis(Rs,e)},localToWorld:function localToWorld(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function worldToLocal(e){return e.applyMatrix4(Ms.getInverse(this.matrixWorld))},lookAt:function lookAt(e,t,r){e.isVector3?Ss.copy(e):Ss.set(e,t,r);var a=this.parent;this.updateWorldMatrix(!0,!1),Ts.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ms.lookAt(Ts,Ss,this.up):Ms.lookAt(Ss,Ts,this.up),this.quaternion.setFromRotationMatrix(Ms),a&&(Ms.extractRotation(a.matrixWorld),bs.setFromRotationMatrix(Ms),this.quaternion.premultiply(bs.inverse()))},add:function add(e){if(1<arguments.length){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Ps)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function remove(e){if(1<arguments.length){for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}var r=this.children.indexOf(e);return-1!==r&&(e.parent=null,this.children.splice(r,1),e.dispatchEvent(Cs)),this},attach:function attach(e){return this.updateWorldMatrix(!0,!1),Ms.getInverse(this.matrixWorld),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Ms.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ms),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function getObjectById(e){return this.getObjectByProperty("id",e)},getObjectByName:function getObjectByName(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function getObjectByProperty(e,t){if(this[e]===t)return this;for(var r=0,a=this.children.length;r<a;r++){var n=this.children[r],o=n.getObjectByProperty(e,t);if(o!==void 0)return o}},getWorldPosition:function getWorldPosition(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new S),this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function getWorldQuaternion(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new M),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Ts,e,Es),e},getWorldScale:function getWorldScale(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new S),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Ts,ws,e),e},getWorldDirection:function getWorldDirection(t){t===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new S),this.updateMatrixWorld(!0);var r=this.matrixWorld.elements;return t.set(r[8],r[9],r[10]).normalize()},raycast:function raycast(){},traverse:function traverse(e){e(this);for(var t=this.children,r=0,a=t.length;r<a;r++)t[r].traverse(e)},traverseVisible:function traverseVisible(e){if(!1!==this.visible){e(this);for(var t=this.children,r=0,a=t.length;r<void 0;r++)t[r].traverseVisible(e)}},traverseAncestors:function traverseAncestors(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=this.children,r=0,a=t.length;r<a;r++)t[r].updateMatrixWorld(e)},updateWorldMatrix:function updateWorldMatrix(e,t){var r=this.parent;// update children
if(!0===e&&null!==r&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t)for(var a=this.children,n=0,o=a.length;n<o;n++)a[n].updateWorldMatrix(!1,!0)},toJSON:function(e){//
function t(t,r){return void 0===t[r.uuid]&&(t[r.uuid]=r.toJSON(e)),r.uuid}// extract data from the cache hash
// remove metadata on each item
// and return as array
function r(e){var t=[];for(var r in e){var a=e[r];delete a.metadata,t.push(a)}return t}// meta is a string when called from JSON.stringify
var a=void 0===e||"string"==typeof e,n={};a&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});// standard Object3D serialization
var o={};if(o.uuid=this.uuid,o.type=this.type,""!==this.name&&(o.name=this.name),!0===this.castShadow&&(o.castShadow=!0),!0===this.receiveShadow&&(o.receiveShadow=!0),!1===this.visible&&(o.visible=!1),!1===this.frustumCulled&&(o.frustumCulled=!1),0!==this.renderOrder&&(o.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(o.userData=this.userData),o.layers=this.layers.mask,o.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(o.matrixAutoUpdate=!1),this.isInstancedMesh&&(o.type="InstancedMesh",o.count=this.count,o.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){o.geometry=t(e.geometries,this.geometry);var s=this.geometry.parameters;if(void 0!==s&&void 0!==s.shapes){var d=s.shapes;if(Array.isArray(d))for(var p=0,c=d.length,u;p<c;p++)u=d[p],t(e.shapes,u);else t(e.shapes,d)}}if(void 0!==this.material)if(Array.isArray(this.material)){for(var m=[],p=0,c=this.material.length;p<c;p++)m.push(t(e.materials,this.material[p]));o.material=m}else o.material=t(e.materials,this.material);//
if(0<this.children.length){o.children=[];for(var p=0;p<this.children.length;p++)o.children.push(this.children[p].toJSON(e).object)}if(a){var g=r(e.geometries),f=r(e.materials),h=r(e.textures),y=r(e.images),d=r(e.shapes);0<g.length&&(n.geometries=g),0<f.length&&(n.materials=f),0<h.length&&(n.textures=h),0<y.length&&(n.images=y),0<d.length&&(n.shapes=d)}return n.object=o,n},clone:function clone(e){return new this.constructor().copy(this,e)},copy:function copy(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var r=0,a;r<e.children.length;r++)a=e.children[r],this.add(a.clone());return this}}),A.prototype=Object.assign(Object.create(L.prototype),{constructor:A,isScene:!0,copy:function copy(e,t){return L.prototype.copy.call(this,e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},toJSON:function(e){var t=L.prototype.toJSON.call(this,e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t},dispose:function dispose(){this.dispatchEvent({type:"dispose"})}});var Ds=[new S,new S,new S,new S,new S,new S,new S,new S],Is=new S,Ns=new R,zs=new S,Us=new S,Bs=new S,Fs=new S,Os=new S,Gs=new S,Hs=new S,Vs=new S,ks=new S,Ws=new S;Object.assign(R.prototype,{isBox3:!0,set:function set(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function setFromArray(e){for(var t=+Infinity,r=+Infinity,a=+Infinity,n=-Infinity,o=-Infinity,s=-Infinity,d=0,p=e.length;d<p;d+=3){var l=e[d],c=e[d+1],u=e[d+2];l<t&&(t=l),c<r&&(r=c),u<a&&(a=u),l>n&&(n=l),c>o&&(o=c),u>s&&(s=u)}return this.min.set(t,r,a),this.max.set(n,o,s),this},setFromBufferAttribute:function setFromBufferAttribute(e){for(var t=+Infinity,r=+Infinity,a=+Infinity,n=-Infinity,o=-Infinity,s=-Infinity,d=0,p=e.count;d<p;d++){var l=e.getX(d),c=e.getY(d),u=e.getZ(d);l<t&&(t=l),c<r&&(r=c),u<a&&(a=u),l>n&&(n=l),c>o&&(o=c),u>s&&(s=u)}return this.min.set(t,r,a),this.max.set(n,o,s),this},setFromPoints:function setFromPoints(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function setFromCenterAndSize(e,t){var r=Is.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this},setFromObject:function setFromObject(e){return this.makeEmpty(),this.expandByObject(e)},clone:function clone(){return new this.constructor().copy(this)},copy:function copy(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function makeEmpty(){return this.min.x=this.min.y=this.min.z=+Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this},isEmpty:function isEmpty(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes
return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function getCenter(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new S),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function getSize(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new S),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function expandByPoint(e){return this.min.min(e),this.max.max(e),this},expandByVector:function expandByVector(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByObject:function expandByObject(e){e.updateWorldMatrix(!1,!1);var t=e.geometry;t!==void 0&&(null===t.boundingBox&&t.computeBoundingBox(),Ns.copy(t.boundingBox),Ns.applyMatrix4(e.matrixWorld),this.union(Ns));for(var r=e.children,a=0,n=r.length;a<n;a++)this.expandByObject(r[a]);return this},containsPoint:function containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function getParameter(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new S),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function intersectsBox(e){// using 6 splitting planes to rule out intersections.
return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function intersectsSphere(e){// If that point is inside the sphere, the AABB and sphere intersect.
return this.clampPoint(e.center,Is),Is.distanceToSquared(e.center)<=e.radius*e.radius},intersectsPlane:function intersectsPlane(e){// We compute the minimum and maximum dot product values. If those values
// are on the same side (back or front) of the plane, then there is no intersection.
var t,r;return 0<e.normal.x?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant},intersectsTriangle:function intersectsTriangle(e){if(this.isEmpty())return!1;// compute box center and extents
this.getCenter(Hs),Vs.subVectors(this.max,Hs),zs.subVectors(e.a,Hs),Us.subVectors(e.b,Hs),Bs.subVectors(e.c,Hs),Fs.subVectors(Us,zs),Os.subVectors(Bs,Us),Gs.subVectors(zs,Bs);// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb
// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation
// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)
var t=[0,-Fs.z,Fs.y,0,-Os.z,Os.y,0,-Gs.z,Gs.y,Fs.z,0,-Fs.x,Os.z,0,-Os.x,Gs.z,0,-Gs.x,-Fs.y,Fs.x,0,-Os.y,Os.x,0,-Gs.y,Gs.x,0];return!!P(t,zs,Us,Bs,Vs)&&(t=[1,0,0,0,1,0,0,0,1],!!P(t,zs,Us,Bs,Vs))&&(ks.crossVectors(Fs,Os),t=[ks.x,ks.y,ks.z],P(t,zs,Us,Bs,Vs));// test 3 face normals from the aabb
// finally testing the face normal of the triangle
// use already existing triangle edge vectors here
},clampPoint:function clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new S),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function distanceToPoint(e){var t=Is.copy(e).clamp(this.min,this.max);return t.sub(e).length()},getBoundingSphere:function getBoundingSphere(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(Is).length(),e},intersect:function intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function union(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function applyMatrix4(e){// transform of empty box is an empty box.
return this.isEmpty()?this:(Ds[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ds[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ds[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ds[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ds[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ds[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ds[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ds[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ds),this);// NOTE: I am using a binary pattern to specify all 2^3 combinations below
},translate:function translate(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});var js=new R;Object.assign(C.prototype,{set:function set(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function setFromPoints(e,t){var r=this.center;void 0===t?js.setFromPoints(e).getCenter(r):r.copy(t);for(var a=0,n=0,o=e.length;n<o;n++)a=No(a,r.distanceToSquared(e[n]));return this.radius=wo(a),this},clone:function clone(){return new this.constructor().copy(this)},copy:function copy(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function empty(){return 0>=this.radius},containsPoint:function containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function distanceToPoint(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function intersectsSphere(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function intersectsBox(e){return e.intersectsSphere(this)},intersectsPlane:function intersectsPlane(e){return zo(e.distanceToPoint(this.center))<=this.radius},clampPoint:function clampPoint(e,t){var r=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new S),t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t},getBoundingBox:function getBoundingBox(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new R),e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function applyMatrix4(e){return this.center.applyMatrix4(e),this.radius*=e.getMaxScaleOnAxis(),this},translate:function translate(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}});var qs=new S,Xs=new S,Ys=new S,Zs=new S,Js=new S,Qs=new S,Ks=new S;Object.assign(D.prototype,{set:function set(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function clone(){return new this.constructor().copy(this)},copy:function copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function at(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new S),t.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function recast(e){return this.origin.copy(this.at(e,qs)),this},closestPointToPoint:function closestPointToPoint(e,t){t===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new S),t.subVectors(e,this.origin);var r=t.dot(this.direction);return 0>r?t.copy(this.origin):t.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function distanceToPoint(e){return wo(this.distanceSqToPoint(e))},distanceSqToPoint:function distanceSqToPoint(e){var t=qs.subVectors(e,this.origin).dot(this.direction);// point behind the ray
return 0>t?this.origin.distanceToSquared(e):(qs.copy(this.direction).multiplyScalar(t).add(this.origin),qs.distanceToSquared(e))},distanceSqToSegment:function distanceSqToSegment(e,t,r,a){Xs.copy(e).add(t).multiplyScalar(.5),Ys.copy(t).sub(e).normalize(),Zs.copy(this.origin).sub(Xs);var i=.5*e.distanceTo(t),n=-this.direction.dot(Ys),o=Zs.dot(this.direction),s=-Zs.dot(Ys),l=Zs.lengthSq(),d=zo(1-n*n),p,c,u,m;if(!(0<d))c=0<n?-i:i,p=No(0,-(n*c+o)),u=-p*p+c*(c+2*s)+l;else if(p=n*s-o,c=n*o-s,m=i*d,!(0<=p))c<=-m?(p=No(0,-(-n*i+o)),c=0<p?-i:Io(No(-i,-s),i),u=-p*p+c*(c+2*s)+l):c<=m?(p=0,c=Io(No(-i,-s),i),u=c*(c+2*s)+l):(p=No(0,-(n*i+o)),c=0<p?i:Io(No(-i,-s),i),u=-p*p+c*(c+2*s)+l);else if(!(c>=-m))c=-i,p=No(0,-(n*c+o)),u=-p*p+c*(c+2*s)+l;else if(c<=m){// region 0
// Minimum at interior points of ray and segment.
var g=1/d;p*=g,c*=g,u=p*(p+n*c+2*o)+c*(n*p+c+2*s)+l}else// region 1
c=i,p=No(0,-(n*c+o)),u=-p*p+c*(c+2*s)+l;return r&&r.copy(this.direction).multiplyScalar(p).add(this.origin),a&&a.copy(Ys).multiplyScalar(c).add(Xs),u},intersectSphere:function intersectSphere(e,t){qs.subVectors(e.center,this.origin);var r=qs.dot(this.direction),a=qs.dot(qs)-r*r,i=e.radius*e.radius;if(a>i)return null;var n=wo(i-a),o=r-n,s=r+n;// t0 = first intersect point - entrance on front of sphere
// test to see if both t0 and t1 are behind the ray - if so, return null
return 0>o&&0>s?null:0>o?this.at(s,t):this.at(o,t);// test to see if t0 is behind the ray:
// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,
// in order to always return an intersect point that is in front of the ray.
// else t0 is in front of the ray, so return the first collision point scaled by t0
},intersectsSphere:function intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius},distanceToPlane:function distanceToPlane(e){var r=e.normal.dot(this.direction);if(0===r)// line is coplanar, return origin
return 0===e.distanceToPoint(this.origin)?0:null;// Null is preferable to undefined since undefined means.... it is undefined
var a=-(this.origin.dot(e.normal)+e.constant)/r;// Return if the ray never intersects the plane
return 0<=a?a:null},intersectPlane:function intersectPlane(e,r){var a=this.distanceToPlane(e);return null===a?null:this.at(a,r)},intersectsPlane:function intersectsPlane(e){// check if the ray lies on the plane first
var t=e.distanceToPoint(this.origin);if(0===t)return!0;var r=e.normal.dot(this.direction);return!!(0>r*t);// ray origin is behind the plane (and is pointing behind it)
},intersectBox:function intersectBox(e,t){var r=1/this.direction.x,a=1/this.direction.y,i=1/this.direction.z,n=this.origin,o,s,l,d,p,c;return(0<=r?(o=(e.min.x-n.x)*r,s=(e.max.x-n.x)*r):(o=(e.max.x-n.x)*r,s=(e.min.x-n.x)*r),0<=a?(l=(e.min.y-n.y)*a,d=(e.max.y-n.y)*a):(l=(e.max.y-n.y)*a,d=(e.min.y-n.y)*a),o>d||l>s)?null:((l>o||o!==o)&&(o=l),(d<s||s!==s)&&(s=d),0<=i?(p=(e.min.z-n.z)*i,c=(e.max.z-n.z)*i):(p=(e.max.z-n.z)*i,c=(e.min.z-n.z)*i),o>c||p>s)?null:((p>o||o!==o)&&(o=p),(c<s||s!==s)&&(s=c),0>s?null:this.at(0<=o?o:s,t));// These lines also handle the case where tmin or tmax is NaN
// (result of 0 * Infinity). x !== x returns true if x is NaN
},intersectsBox:function intersectsBox(e){return null!==this.intersectBox(e,qs)},intersectTriangle:function intersectTriangle(e,t,r,a,i){Js.subVectors(t,e),Qs.subVectors(r,e),Ks.crossVectors(Js,Qs);// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,
// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by
//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))
//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))
//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)
var n=this.direction.dot(Ks),o;if(0<n){if(a)return null;o=1}else if(0>n)o=-1,n=-n;else return null;Zs.subVectors(this.origin,e);var s=o*this.direction.dot(Qs.crossVectors(Zs,Qs));// b1 < 0, no intersection
if(0>s)return null;var l=o*this.direction.dot(Js.cross(Zs));// b2 < 0, no intersection
if(0>l)return null;// b1+b2 > 1, no intersection
if(s+l>n)return null;// Line intersects triangle, check if ray does.
var d=-o*Zs.dot(Ks);// t < 0, no intersection
return 0>d?null:this.at(d/n,i);// Ray intersects triangle.
},applyMatrix4:function applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}});/**
   * @author bhouston / http://clara.io
   */var $s=new S,el=new S,tl=new y;Object.assign(I.prototype,{isPlane:!0,set:function set(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function setComponents(e,t,r,a){return this.normal.set(e,t,r),this.constant=a,this},setFromNormalAndCoplanarPoint:function setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function setFromCoplanarPoints(e,t,r){var a=$s.subVectors(r,t).cross(el.subVectors(e,t)).normalize();// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?
return this.setFromNormalAndCoplanarPoint(a,e),this},clone:function clone(){return new this.constructor().copy(this)},copy:function copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function normalize(){// Note: will lead to a divide by zero if the plane is invalid.
var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function negate(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function distanceToPoint(e){return this.normal.dot(e)+this.constant},distanceToSphere:function distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function projectPoint(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new S),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)},intersectLine:function intersectLine(e,r){r===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),r=new S);var a=e.delta($s),i=this.normal.dot(a);if(0===i)// line is coplanar, return origin
return 0===this.distanceToPoint(e.start)?r.copy(e.start):void 0;// Unsure if this is the correct method to handle this case.
var n=-(e.start.dot(this.normal)+this.constant)/i;return 0>n||1<n?void 0:r.copy(a).multiplyScalar(n).add(e.start)},intersectsLine:function intersectsLine(e){// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.
var t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return 0>t&&0<r||0>r&&0<t},intersectsBox:function intersectsBox(e){return e.intersectsPlane(this)},intersectsSphere:function intersectsSphere(e){return e.intersectsPlane(this)},coplanarPoint:function coplanarPoint(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new S),e.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function applyMatrix4(e,t){var r=t||tl.getNormalMatrix(e),a=this.coplanarPoint($s).applyMatrix4(e),i=this.normal.applyMatrix3(r).normalize();return this.constant=-a.dot(i),this},translate:function translate(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}});/**
   * @author bhouston / http://clara.io
   * @author mrdoob / http://mrdoob.com/
   */var rl=new S,al=new S,il=new S,nl=new S,ol=new S,sl=new S,ll=new S,dl=new S,pl=new S,cl=new S;Object.assign(N,{getNormal:function getNormal(e,t,r,a){a===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),a=new S),a.subVectors(r,t),rl.subVectors(e,t),a.cross(rl);var i=a.lengthSq();return 0<i?a.multiplyScalar(1/wo(i)):a.set(0,0,0)},// static/instance method to calculate barycentric coordinates
// based on: http://www.blackpawn.com/texts/pointinpoly/default.html
getBarycoord:function getBarycoord(e,t,r,a,i){rl.subVectors(a,t),al.subVectors(r,t),il.subVectors(e,t);var n=rl.dot(rl),o=rl.dot(al),s=rl.dot(il),l=al.dot(al),d=al.dot(il),p=n*l-o*o;// collinear or singular triangle
if(void 0===i&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),i=new S),0===p)// arbitrary location outside of triangle?
// not sure if this is the best idea, maybe should be returning undefined
return i.set(-2,-1,-1);var c=1/p,m=(l*s-o*d)*c,u=(n*d-o*s)*c;// barycentric coordinates must always sum to 1
return i.set(1-m-u,u,m)},containsPoint:function containsPoint(e,t,r,a){return N.getBarycoord(e,t,r,a,nl),0<=nl.x&&0<=nl.y&&1>=nl.x+nl.y},getUV:function getUV(e,t,r,a,i,n,o,s){return this.getBarycoord(e,t,r,a,nl),s.set(0,0),s.addScaledVector(i,nl.x),s.addScaledVector(n,nl.y),s.addScaledVector(o,nl.z),s},isFrontFacing:function isFrontFacing(e,t,r,a){// strictly front facing
return rl.subVectors(r,t),al.subVectors(e,t),!!(0>rl.cross(al).dot(a))}}),Object.assign(N.prototype,{set:function set(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function setFromPointsAndIndices(e,t,r,a){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[a]),this},clone:function clone(){return new this.constructor().copy(this)},copy:function copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},getArea:function getArea(){return rl.subVectors(this.c,this.b),al.subVectors(this.a,this.b),.5*rl.cross(al).length()},getMidpoint:function getMidpoint(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new S),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function getNormal(e){return N.getNormal(this.a,this.b,this.c,e)},getPlane:function getPlane(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new I),e.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function getBarycoord(e,t){return N.getBarycoord(e,this.a,this.b,this.c,t)},getUV:function getUV(e,t,r,a,i){return N.getUV(e,this.a,this.b,this.c,t,r,a,i)},containsPoint:function containsPoint(e){return N.containsPoint(e,this.a,this.b,this.c)},isFrontFacing:function isFrontFacing(e){return N.isFrontFacing(this.a,this.b,this.c,e)},intersectsBox:function intersectsBox(e){return e.intersectsTriangle(this)},closestPointToPoint:function closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new S);var r=this.a,a=this.b,i=this.c,n,o;ol.subVectors(a,r),sl.subVectors(i,r),dl.subVectors(e,r);var s=ol.dot(dl),l=sl.dot(dl);if(0>=s&&0>=l)// vertex region of A; barycentric coords (1, 0, 0)
return t.copy(r);pl.subVectors(e,a);var d=ol.dot(pl),p=sl.dot(pl);if(0<=d&&p<=d)// vertex region of B; barycentric coords (0, 1, 0)
return t.copy(a);var c=s*p-d*l;if(0>=c&&0<=s&&0>=d)// edge region of AB; barycentric coords (1-v, v, 0)
return n=s/(s-d),t.copy(r).addScaledVector(ol,n);cl.subVectors(e,i);var u=ol.dot(cl),m=sl.dot(cl);if(0<=m&&u<=m)// vertex region of C; barycentric coords (0, 0, 1)
return t.copy(i);var g=u*l-s*m;if(0>=g&&0<=l&&0>=m)// edge region of AC; barycentric coords (1-w, 0, w)
return o=l/(l-m),t.copy(r).addScaledVector(sl,o);var f=d*m-u*p;if(0>=f&&0<=p-d&&0<=u-m)// edge region of BC; barycentric coords (0, 1-w, w)
return ll.subVectors(i,a),o=(p-d)/(p-d+(u-m)),t.copy(a).addScaledVector(ll,o);// edge region of BC
// face region
var h=1/(f+g+c);// u = va * denom
return n=g*h,o=c*h,t.copy(r).addScaledVector(ol,n).addScaledVector(sl,o)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}});/**
   * @author mrdoob / http://mrdoob.com/
   */var ul={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ml={h:0,s:0,l:0},gl={h:0,s:0,l:0};Object.assign(U.prototype,{isColor:!0,r:1,g:1,b:1,set:function set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setScalar:function setScalar(e){return this.r=e,this.g=e,this.b=e,this},setHex:function setHex(e){return e=Po(e),this.r=(255&e>>16)/255,this.g=(255&e>>8)/255,this.b=(255&e)/255,this},setRGB:function setRGB(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function setHSL(e,t,r){if(e=os.euclideanModulo(e,1),t=os.clamp(t,0,1),r=os.clamp(r,0,1),0===t)this.r=this.g=this.b=r;else{var a=.5>=r?r*(1+t):r+t-r*t,i=2*r-a;this.r=B(i,a,e+1/3),this.g=B(i,a,e),this.b=B(i,a,e-1/3)}return this},setStyle:function setStyle(e){function t(t){void 0===t||1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}var r;if(r=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){// rgb / hsl
var a=r[1],i=r[2],n;switch(a){case"rgb":case"rgba":if(n=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=Io(255,parseInt(n[1],10))/255,this.g=Io(255,parseInt(n[2],10))/255,this.b=Io(255,parseInt(n[3],10))/255,t(n[5]),this;if(n=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=Io(100,parseInt(n[1],10))/100,this.g=Io(100,parseInt(n[2],10))/100,this.b=Io(100,parseInt(n[3],10))/100,t(n[5]),this;break;case"hsl":case"hsla":if(n=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i)){// hsl(120,50%,50%) hsla(120,50%,50%,0.5)
var o=parseFloat(n[1])/360,d=parseInt(n[2],10)/100,s=parseInt(n[3],10)/100;return t(n[5]),this.setHSL(o,d,s)}}}else if(r=/^\#([A-Fa-f0-9]+)$/.exec(e)){// hex color
var l=r[1],p=l.length;if(3===p)return this.r=parseInt(l.charAt(0)+l.charAt(0),16)/255,this.g=parseInt(l.charAt(1)+l.charAt(1),16)/255,this.b=parseInt(l.charAt(2)+l.charAt(2),16)/255,this;if(6===p)return this.r=parseInt(l.charAt(0)+l.charAt(1),16)/255,this.g=parseInt(l.charAt(2)+l.charAt(3),16)/255,this.b=parseInt(l.charAt(4)+l.charAt(5),16)/255,this}return e&&0<e.length?this.setColorName(e):this},setColorName:function setColorName(e){// color keywords
var t=ul[e];return void 0===t?console.warn("THREE.Color: Unknown color "+e):this.setHex(t),this},clone:function clone(){return new this.constructor(this.r,this.g,this.b)},copy:function copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function copyGammaToLinear(e,t){return void 0===t&&(t=2),this.r=Do(e.r,t),this.g=Do(e.g,t),this.b=Do(e.b,t),this},copyLinearToGamma:function copyLinearToGamma(e,t){void 0===t&&(t=2);var r=0<t?1/t:1;return this.r=Do(e.r,r),this.g=Do(e.g,r),this.b=Do(e.b,r),this},convertGammaToLinear:function convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this},convertLinearToGamma:function convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this},copySRGBToLinear:function copySRGBToLinear(e){return this.r=F(e.r),this.g=F(e.g),this.b=F(e.b),this},copyLinearToSRGB:function copyLinearToSRGB(e){return this.r=O(e.r),this.g=O(e.g),this.b=O(e.b),this},convertSRGBToLinear:function convertSRGBToLinear(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function convertLinearToSRGB(){return this.copyLinearToSRGB(this),this},getHex:function getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function getHSL(e){void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});var t=this.r,r=this.g,a=this.b,i=No(t,r,a),n=Io(t,r,a),o=(n+i)/2,s,l;if(n===i)s=0,l=0;else{var d=i-n;l=.5>=o?d/(i+n):d/(2-i-n),i===t?s=(r-a)/d+(r<a?6:0):i===r?s=(a-t)/d+2:i===a?s=(t-r)/d+4:void 0,s/=6}return e.h=s,e.s=l,e.l=o,e},getStyle:function getStyle(){return"rgb("+(0|255*this.r)+","+(0|255*this.g)+","+(0|255*this.b)+")"},offsetHSL:function offsetHSL(e,t,r){return this.getHSL(ml),ml.h+=e,ml.s+=t,ml.l+=r,this.setHSL(ml.h,ml.s,ml.l),this},add:function add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function sub(e){return this.r=No(0,this.r-e.r),this.g=No(0,this.g-e.g),this.b=No(0,this.b-e.b),this},multiply:function multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},lerpHSL:function lerpHSL(e,t){this.getHSL(ml),e.getHSL(gl);var r=os.lerp(ml.h,gl.h,t),a=os.lerp(ml.s,gl.s,t),i=os.lerp(ml.l,gl.l,t);return this.setHSL(r,a,i),this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function fromArray(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function toArray(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},toJSON:function(){return this.getHex()}}),U.NAMES=ul,Object.assign(G.prototype,{clone:function clone(){return new this.constructor().copy(this)},copy:function copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,r=e.vertexNormals.length;t<r;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(var t=0,r=e.vertexColors.length;t<r;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}});/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   */var fl=0;H.prototype=Object.assign(Object.create(f.prototype),{constructor:H,isMaterial:!0,onBeforeCompile:function onBeforeCompile(){},setValues:function setValues(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0===r){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}// for backward compatability if shading is set in the constructor
if("shading"==t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===Go;continue}var a=this[t];if(void 0===a){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}a&&a.isColor?a.set(r):a&&a.isVector3&&r&&r.isVector3?a.copy(r):this[t]=r}},toJSON:function(e){// TODO: Copied from Object3D.toJSON
function t(e){var t=[];for(var r in e){var a=e[r];delete a.metadata,t.push(a)}return t}var r=void 0===e||"string"==typeof e;r&&(e={textures:{},images:{}});var a={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};// standard Material serialization
if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),this.color&&this.color.isColor&&(a.color=this.color.getHex()),void 0!==this.roughness&&(a.roughness=this.roughness),void 0!==this.metalness&&(a.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(a.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(a.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(a.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(a.specular=this.specular.getHex()),void 0!==this.shininess&&(a.shininess=this.shininess),void 0!==this.clearcoat&&(a.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(a.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(a.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(a.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(a.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,a.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(a.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(a.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(a.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(a.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(a.aoMap=this.aoMap.toJSON(e).uuid,a.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(a.bumpMap=this.bumpMap.toJSON(e).uuid,a.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(a.normalMap=this.normalMap.toJSON(e).uuid,a.normalMapType=this.normalMapType,a.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(a.displacementMap=this.displacementMap.toJSON(e).uuid,a.displacementScale=this.displacementScale,a.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(a.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(a.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(a.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(a.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(a.envMap=this.envMap.toJSON(e).uuid,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,void 0!==this.combine&&(a.combine=this.combine),void 0!==this.envMapIntensity&&(a.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(a.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(a.size=this.size),void 0!==this.sizeAttenuation&&(a.sizeAttenuation=this.sizeAttenuation),this.blending!==1&&(a.blending=this.blending),!0===this.flatShading&&(a.flatShading=this.flatShading),this.side!==Fo&&(a.side=this.side),this.vertexColors&&(a.vertexColors=!0),1>this.opacity&&(a.opacity=this.opacity),!0===this.transparent&&(a.transparent=this.transparent),a.depthFunc=this.depthFunc,a.depthTest=this.depthTest,a.depthWrite=this.depthWrite,a.stencilWrite=this.stencilWrite,a.stencilWriteMask=this.stencilWriteMask,a.stencilFunc=this.stencilFunc,a.stencilRef=this.stencilRef,a.stencilFuncMask=this.stencilFuncMask,a.stencilFail=this.stencilFail,a.stencilZFail=this.stencilZFail,a.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(a.rotation=this.rotation),!0===this.polygonOffset&&(a.polygonOffset=!0),0!==this.polygonOffsetFactor&&(a.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(a.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(a.linewidth=this.linewidth),void 0!==this.dashSize&&(a.dashSize=this.dashSize),void 0!==this.gapSize&&(a.gapSize=this.gapSize),void 0!==this.scale&&(a.scale=this.scale),!0===this.dithering&&(a.dithering=!0),0<this.alphaTest&&(a.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(a.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(a.wireframe=this.wireframe),1<this.wireframeLinewidth&&(a.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(a.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(a.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(a.morphTargets=!0),!0===this.morphNormals&&(a.morphNormals=!0),!0===this.skinning&&(a.skinning=!0),!1===this.visible&&(a.visible=!1),!1===this.toneMapped&&(a.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),r){var i=t(e.textures),n=t(e.images);0<i.length&&(a.textures=i),0<n.length&&(a.images=n)}return a},clone:function clone(){return new this.constructor().copy(this)},copy:function copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;var t=e.clippingPlanes,r=null;if(null!==t){var a=t.length;r=Array(a);for(var n=0;n!==a;++n)r[n]=t[n].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function dispose(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(H.prototype,"needsUpdate",{set:function set(e){!0===e&&this.version++}}),V.prototype=Object.create(H.prototype),V.prototype.constructor=V,V.prototype.isMeshBasicMaterial=!0,V.prototype.copy=function(e){return H.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};/**
   * @author mrdoob / http://mrdoob.com/
   */var hl=new S;Object.defineProperty(k.prototype,"needsUpdate",{set:function set(e){!0===e&&this.version++}}),Object.assign(k.prototype,{isBufferAttribute:!0,onUploadCallback:function onUploadCallback(){},setUsage:function setUsage(e){return this.usage=e,this},copy:function copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function copyAt(e,t,r){e*=this.itemSize,r*=t.itemSize;for(var a=0,n=this.itemSize;a<n;a++)this.array[e+a]=t.array[r+a];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function copyColorsArray(e){for(var t=this.array,r=0,a=0,n=e.length,o;a<n;a++)o=e[a],void 0===o&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",a),o=new U),t[r++]=o.r,t[r++]=o.g,t[r++]=o.b;return this},copyVector2sArray:function copyVector2sArray(e){for(var t=this.array,r=0,a=0,n=e.length,o;a<n;a++)o=e[a],void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",a),o=new h),t[r++]=o.x,t[r++]=o.y;return this},copyVector3sArray:function copyVector3sArray(e){for(var t=this.array,r=0,a=0,n=e.length,o;a<n;a++)o=e[a],void 0===o&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",a),o=new S),t[r++]=o.x,t[r++]=o.y,t[r++]=o.z;return this},copyVector4sArray:function copyVector4sArray(e){for(var t=this.array,r=0,a=0,n=e.length,o;a<n;a++)o=e[a],void 0===o&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",a),o=new x),t[r++]=o.x,t[r++]=o.y,t[r++]=o.z,t[r++]=o.w;return this},applyMatrix3:function applyMatrix3(e){for(var t=0,r=this.count;t<r;t++)hl.x=this.getX(t),hl.y=this.getY(t),hl.z=this.getZ(t),hl.applyMatrix3(e),this.setXYZ(t,hl.x,hl.y,hl.z);return this},applyMatrix4:function applyMatrix4(e){for(var t=0,r=this.count;t<r;t++)hl.x=this.getX(t),hl.y=this.getY(t),hl.z=this.getZ(t),hl.applyMatrix4(e),this.setXYZ(t,hl.x,hl.y,hl.z);return this},applyNormalMatrix:function applyNormalMatrix(e){for(var t=0,r=this.count;t<r;t++)hl.x=this.getX(t),hl.y=this.getY(t),hl.z=this.getZ(t),hl.applyNormalMatrix(e),this.setXYZ(t,hl.x,hl.y,hl.z);return this},transformDirection:function transformDirection(e){for(var t=0,r=this.count;t<r;t++)hl.x=this.getX(t),hl.y=this.getY(t),hl.z=this.getZ(t),hl.transformDirection(e),this.setXYZ(t,hl.x,hl.y,hl.z);return this},set:function set(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function getX(e){return this.array[e*this.itemSize]},setX:function setX(e,t){return this.array[e*this.itemSize]=t,this},getY:function getY(e){return this.array[e*this.itemSize+1]},setY:function setY(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function getZ(e){return this.array[e*this.itemSize+2]},setZ:function setZ(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function getW(e){return this.array[e*this.itemSize+3]},setW:function setW(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function setXY(e,t,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this},setXYZ:function setXYZ(e,t,r,a){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=a,this},setXYZW:function setXYZW(e,t,r,a,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=a,this.array[e+3]=i,this},onUpload:function onUpload(e){return this.onUploadCallback=e,this},clone:function clone(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),W.prototype=Object.create(k.prototype),W.prototype.constructor=W,j.prototype=Object.create(k.prototype),j.prototype.constructor=j,q.prototype=Object.create(k.prototype),q.prototype.constructor=q,X.prototype=Object.create(k.prototype),X.prototype.constructor=X,Y.prototype=Object.create(k.prototype),Y.prototype.constructor=Y,Z.prototype=Object.create(k.prototype),Z.prototype.constructor=Z,J.prototype=Object.create(k.prototype),J.prototype.constructor=J,Q.prototype=Object.create(k.prototype),Q.prototype.constructor=Q,K.prototype=Object.create(k.prototype),K.prototype.constructor=K,Object.assign($.prototype,{computeGroups:function computeGroups(e){for(var t=[],r=void 0,a=e.faces,n=0,o,s;n<a.length;n++)s=a[n],s.materialIndex!==r&&(r=s.materialIndex,void 0!==o&&(o.count=3*n-o.start,t.push(o)),o={start:3*n,materialIndex:r});o!==void 0&&(o.count=3*n-o.start,t.push(o)),this.groups=t},fromGeometry:function fromGeometry(e){var t=e.faces,r=e.vertices,a=e.faceVertexUvs,n=a[0]&&0<a[0].length,o=a[1]&&0<a[1].length,s=e.morphTargets,l=s.length,d;if(0<l){d=[];for(var p=0;p<l;p++)d[p]={name:s[p].name,data:[]};this.morphTargets.position=d}var c=e.morphNormals,u=c.length,m;if(0<u){m=[];for(var p=0;p<u;p++)m[p]={name:c[p].name,data:[]};this.morphTargets.normal=m}// skins
var g=e.skinIndices,f=e.skinWeights,y=g.length===r.length,v=f.length===r.length;0<r.length&&0===t.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(var p=0,x;p<t.length;p++){x=t[p],this.vertices.push(r[x.a],r[x.b],r[x.c]);var _=x.vertexNormals;if(3===_.length)this.normals.push(_[0],_[1],_[2]);else{var b=x.normal;this.normals.push(b,b,b)}var M=x.vertexColors;if(3===M.length)this.colors.push(M[0],M[1],M[2]);else{var S=x.color;this.colors.push(S,S,S)}if(!0===n){var T=a[0][p];void 0===T?(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",p),this.uvs.push(new h,new h,new h)):this.uvs.push(T[0],T[1],T[2])}if(!0===o){var T=a[1][p];void 0===T?(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",p),this.uvs2.push(new h,new h,new h)):this.uvs2.push(T[0],T[1],T[2])}// morphs
for(var E=0,w;E<l;E++)w=s[E].vertices,d[E].data.push(w[x.a],w[x.b],w[x.c]);for(var E=0,L;E<u;E++)L=c[E].vertexNormals[p],m[E].data.push(L.a,L.b,L.c);// skins
y&&this.skinIndices.push(g[x.a],g[x.b],g[x.c]),v&&this.skinWeights.push(f[x.a],f[x.b],f[x.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this}});var yl=1,vl=new T,xl=new L,_l=new S,bl=new R,Ml=new R,Sl=new S;// BufferGeometry uses odd numbers as Id
te.prototype=Object.assign(Object.create(f.prototype),{constructor:te,isBufferGeometry:!0,getIndex:function getIndex(){return this.index},setIndex:function setIndex(e){this.index=Array.isArray(e)?new(65535<ee(e)?J:Y)(e,1):e},getAttribute:function getAttribute(e){return this.attributes[e]},setAttribute:function setAttribute(e,t){return this.attributes[e]=t,this},deleteAttribute:function deleteAttribute(e){return delete this.attributes[e],this},addGroup:function addGroup(e,t,r){this.groups.push({start:e,count:t,materialIndex:r===void 0?0:r})},clearGroups:function clearGroups(){this.groups=[]},setDrawRange:function setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function applyMatrix4(e){var t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);var r=this.attributes.normal;if(void 0!==r){var a=new y().getNormalMatrix(e);r.applyNormalMatrix(a),r.needsUpdate=!0}var i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function rotateX(e){return vl.makeRotationX(e),this.applyMatrix4(vl),this},rotateY:function rotateY(e){return vl.makeRotationY(e),this.applyMatrix4(vl),this},rotateZ:function rotateZ(e){return vl.makeRotationZ(e),this.applyMatrix4(vl),this},translate:function translate(e,t,r){return vl.makeTranslation(e,t,r),this.applyMatrix4(vl),this},scale:function scale(e,t,r){return vl.makeScale(e,t,r),this.applyMatrix4(vl),this},lookAt:function lookAt(e){return xl.lookAt(e),xl.updateMatrix(),this.applyMatrix4(xl.matrix),this},center:function center(){return this.computeBoundingBox(),this.boundingBox.getCenter(_l).negate(),this.translate(_l.x,_l.y,_l.z),this},setFromObject:function setFromObject(e){// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );
var t=e.geometry;if(e.isPoints||e.isLine){var r=new Q(3*t.vertices.length,3),a=new Q(3*t.colors.length,3);if(this.setAttribute("position",r.copyVector3sArray(t.vertices)),this.setAttribute("color",a.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){var i=new Q(t.lineDistances.length,1);this.setAttribute("lineDistance",i.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function setFromPoints(e){for(var t=[],r=0,a=e.length,n;r<a;r++)n=e[r],t.push(n.x,n.y,n.z||0);return this.setAttribute("position",new Q(t,3)),this},updateFromObject:function updateFromObject(e){var t=e.geometry;if(e.isMesh){var r=t.__directGeometry;if(!0===t.elementsNeedUpdate&&(r=void 0,t.elementsNeedUpdate=!1),void 0===r)return this.fromGeometry(t);r.verticesNeedUpdate=t.verticesNeedUpdate,r.normalsNeedUpdate=t.normalsNeedUpdate,r.colorsNeedUpdate=t.colorsNeedUpdate,r.uvsNeedUpdate=t.uvsNeedUpdate,r.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=r}var a;return!0===t.verticesNeedUpdate&&(a=this.attributes.position,void 0!==a&&(a.copyVector3sArray(t.vertices),a.needsUpdate=!0),t.verticesNeedUpdate=!1),!0===t.normalsNeedUpdate&&(a=this.attributes.normal,void 0!==a&&(a.copyVector3sArray(t.normals),a.needsUpdate=!0),t.normalsNeedUpdate=!1),!0===t.colorsNeedUpdate&&(a=this.attributes.color,void 0!==a&&(a.copyColorsArray(t.colors),a.needsUpdate=!0),t.colorsNeedUpdate=!1),t.uvsNeedUpdate&&(a=this.attributes.uv,void 0!==a&&(a.copyVector2sArray(t.uvs),a.needsUpdate=!0),t.uvsNeedUpdate=!1),t.lineDistancesNeedUpdate&&(a=this.attributes.lineDistance,void 0!==a&&(a.copyArray(t.lineDistances),a.needsUpdate=!0),t.lineDistancesNeedUpdate=!1),t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function fromGeometry(e){return e.__directGeometry=new $().fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function fromDirectGeometry(e){var t=new Float32Array(3*e.vertices.length);if(this.setAttribute("position",new k(t,3).copyVector3sArray(e.vertices)),0<e.normals.length){var r=new Float32Array(3*e.normals.length);this.setAttribute("normal",new k(r,3).copyVector3sArray(e.normals))}if(0<e.colors.length){var a=new Float32Array(3*e.colors.length);this.setAttribute("color",new k(a,3).copyColorsArray(e.colors))}if(0<e.uvs.length){var n=new Float32Array(2*e.uvs.length);this.setAttribute("uv",new k(n,2).copyVector2sArray(e.uvs))}if(0<e.uvs2.length){var o=new Float32Array(2*e.uvs2.length);this.setAttribute("uv2",new k(o,2).copyVector2sArray(e.uvs2))}// groups
// morphs
for(var s in this.groups=e.groups,e.morphTargets){for(var d=[],p=e.morphTargets[s],c=0,u=p.length;c<u;c++){var l=p[c],m=new Q(3*l.data.length,3);m.name=l.name,d.push(m.copyVector3sArray(l.data))}this.morphAttributes[s]=d}// skinning
if(0<e.skinIndices.length){var g=new Q(4*e.skinIndices.length,4);this.setAttribute("skinIndex",g.copyVector4sArray(e.skinIndices))}if(0<e.skinWeights.length){var f=new Q(4*e.skinWeights.length,4);this.setAttribute("skinWeight",f.copyVector4sArray(e.skinWeights))}//
return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new R);var e=this.attributes.position,t=this.morphAttributes.position;if(void 0===e)this.boundingBox.makeEmpty();else// process morph attributes if present
if(this.boundingBox.setFromBufferAttribute(e),t)for(var r=0,a=t.length,n;r<a;r++)n=t[r],bl.setFromBufferAttribute(n),this.morphTargetsRelative?(Sl.addVectors(this.boundingBox.min,bl.min),this.boundingBox.expandByPoint(Sl),Sl.addVectors(this.boundingBox.max,bl.max),this.boundingBox.expandByPoint(Sl)):(this.boundingBox.expandByPoint(bl.min),this.boundingBox.expandByPoint(bl.max));(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error("THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.",this)},computeBoundingSphere:function computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new C);var e=this.attributes.position,t=this.morphAttributes.position;if(e){// first, find the center of the bounding sphere
var r=this.boundingSphere.center;// process morph attributes if present
if(bl.setFromBufferAttribute(e),t)for(var a=0,n=t.length,o;a<n;a++)o=t[a],Ml.setFromBufferAttribute(o),this.morphTargetsRelative?(Sl.addVectors(bl.min,Ml.min),bl.expandByPoint(Sl),Sl.addVectors(bl.max,Ml.max),bl.expandByPoint(Sl)):(bl.expandByPoint(Ml.min),bl.expandByPoint(Ml.max));bl.getCenter(r);for(var s=0,a=0,n=e.count;a<n;a++)Sl.fromBufferAttribute(e,a),s=No(s,r.distanceToSquared(Sl));// process morph attributes if present
if(t)for(var a=0,n=t.length;a<n;a++)for(var o=t[a],l=this.morphTargetsRelative,d=0,p=o.count;d<p;d++)Sl.fromBufferAttribute(o,d),l&&(_l.fromBufferAttribute(e,d),Sl.add(_l)),s=No(s,r.distanceToSquared(Sl));this.boundingSphere.radius=wo(s),isNaN(this.boundingSphere.radius)&&console.error("THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.",this)}},computeFaceNormals:function computeFaceNormals(){// backwards compatibility
},computeVertexNormals:function computeVertexNormals(){var e=this.index,t=this.attributes;if(t.position){var r=t.position.array;if(t.normal===void 0)this.setAttribute("normal",new k(new Float32Array(r.length),3));else// reset existing normals to zero
for(var a=t.normal.array,n=0,o=a.length;n<o;n++)a[n]=0;var s=t.normal.array,l=new S,d=new S,p=new S,c=new S,u=new S,m,g,f;// indexed elements
if(e)for(var h=e.array,n=0,o=e.count;n<o;n+=3)m=3*h[n+0],g=3*h[n+1],f=3*h[n+2],l.fromArray(r,m),d.fromArray(r,g),p.fromArray(r,f),c.subVectors(p,d),u.subVectors(l,d),c.cross(u),s[m]+=c.x,s[m+1]+=c.y,s[m+2]+=c.z,s[g]+=c.x,s[g+1]+=c.y,s[g+2]+=c.z,s[f]+=c.x,s[f+1]+=c.y,s[f+2]+=c.z;else// non-indexed elements (unconnected triangle soup)
for(var n=0,o=r.length;n<o;n+=9)l.fromArray(r,n),d.fromArray(r,n+3),p.fromArray(r,n+6),c.subVectors(p,d),u.subVectors(l,d),c.cross(u),s[n]=c.x,s[n+1]=c.y,s[n+2]=c.z,s[n+3]=c.x,s[n+4]=c.y,s[n+5]=c.z,s[n+6]=c.x,s[n+7]=c.y,s[n+8]=c.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},merge:function merge(e,t){if(!(e&&e.isBufferGeometry))return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var r=this.attributes;for(var a in r)if(e.attributes[a]!==void 0)for(var n=r[a],o=n.array,s=e.attributes[a],l=s.array,d=s.itemSize*t,p=Io(l.length,o.length-d),c=0,u=d;c<p;c++,u++)o[u]=l[c];return this},normalizeNormals:function normalizeNormals(){for(var e=this.attributes.normal,t=0,r=e.count;t<r;t++)Sl.x=e.getX(t),Sl.y=e.getY(t),Sl.z=e.getZ(t),Sl.normalize(),e.setXYZ(t,Sl.x,Sl.y,Sl.z)},toNonIndexed:function toNonIndexed(){function e(e,t){for(var r=e.array,a=e.itemSize,n=new r.constructor(t.length*a),o=0,s=0,d=0,p=t.length;d<p;d++){o=t[d]*a;for(var l=0;l<a;l++)n[s++]=r[o++]}return new k(n,a)}//
if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var t=new te,r=this.index.array,a=this.attributes;// attributes
for(var n in a){var o=a[n],s=e(o,r);t.setAttribute(n,s)}// morph attributes
var d=this.morphAttributes;for(n in d){// morphAttribute: array of Float32BufferAttributes
for(var p=[],c=d[n],u=0,m=c.length;u<m;u++){var o=c[u],s=e(o,r);p.push(s)}t.morphAttributes[n]=p}t.morphTargetsRelative=this.morphTargetsRelative;for(var g=this.groups,u=0,f=g.length,l;u<f;u++)l=g[u],t.addGroup(l.start,l.count,l.materialIndex);return t},toJSON:function(){var e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};// standard BufferGeometry serialization
if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),0<Object.keys(this.userData).length&&(e.userData=this.userData),void 0!==this.parameters){var t=this.parameters;for(var r in t)void 0!==t[r]&&(e[r]=t[r]);return e}e.data={attributes:{}};var a=this.index;null!==a&&(e.data.index={type:a.array.constructor.name,array:Array.prototype.slice.call(a.array)});var n=this.attributes;for(var r in n){var o=n[r],s=o.toJSON();""!==o.name&&(s.name=o.name),e.data.attributes[r]=s}var l={},d=!1;for(var r in this.morphAttributes){for(var p=this.morphAttributes[r],c=[],u=0,m=p.length;u<m;u++){var o=p[u],s=o.toJSON();""!==o.name&&(s.name=o.name),c.push(s)}0<c.length&&(l[r]=c,d=!0)}d&&(e.data.morphAttributes=l,e.data.morphTargetsRelative=this.morphTargetsRelative);var g=this.groups;0<g.length&&(e.data.groups=JSON.parse(JSON.stringify(g)));var f=this.boundingSphere;return null!==f&&(e.data.boundingSphere={center:f.center.toArray(),radius:f.radius}),e},clone:function clone(){/*
  		 // Handle primitives

  		 var parameters = this.parameters;

  		 if ( parameters !== undefined ) {

  		 var values = [];

  		 for ( var key in parameters ) {

  		 values.push( parameters[ key ] );

  		 }

  		 var geometry = Object.create( this.constructor.prototype );
  		 this.constructor.apply( geometry, values );
  		 return geometry;

  		 }

  		 return new this.constructor().copy( this );
  		 */return new te().copy(this)},copy:function copy(e){var t,r,a;// reset
this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;// index
var n=e.index;null!==n&&this.setIndex(n.clone());// attributes
var o=e.attributes;for(t in o){var s=o[t];this.setAttribute(t,s.clone())}// morph attributes
var d=e.morphAttributes;for(t in d){var p=[],c=d[t];// morphAttribute: array of Float32BufferAttributes
for(r=0,a=c.length;r<a;r++)p.push(c[r].clone());this.morphAttributes[t]=p}this.morphTargetsRelative=e.morphTargetsRelative;// groups
var u=e.groups;for(r=0,a=u.length;r<a;r++){var m=u[r];this.addGroup(m.start,m.count,m.materialIndex)}// bounding box
var g=e.boundingBox;null!==g&&(this.boundingBox=g.clone());// bounding sphere
var f=e.boundingSphere;return null!==f&&(this.boundingSphere=f.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function dispose(){this.dispatchEvent({type:"dispose"})}});/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   * @author mikael emtinger / http://gomo.se/
   * @author jonobr1 / http://jonobr1.com/
   */var Tl=new T,El=new D,wl=new C,Ll=new S,Al=new S,Rl=new S,Pl=new S,Cl=new S,Dl=new S,Il=new S,Nl=new S,zl=new S,Ul=new h,Bl=new h,Fl=new h,Ol=new S,Gl=new S;re.prototype=Object.assign(Object.create(L.prototype),{constructor:re,isMesh:!0,copy:function copy(e){return L.prototype.copy.call(this,e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this},updateMorphTargets:function updateMorphTargets(){var e=this.geometry,t,r,a;if(e.isBufferGeometry){var i=e.morphAttributes,n=Object.keys(i);if(0<n.length){var o=i[n[0]];if(o!==void 0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},(t=0,r=o.length);t<r;t++)a=o[t].name||t+"",this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=t}}else{var s=e.morphTargets;s!==void 0&&0<s.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function raycast(e,t){var r=this.geometry,n=this.material,o=this.matrixWorld;if(void 0!==n&&(null===r.boundingSphere&&r.computeBoundingSphere(),wl.copy(r.boundingSphere),wl.applyMatrix4(o),!1!==e.ray.intersectsSphere(wl))&&(Tl.getInverse(o),El.copy(e.ray).applyMatrix4(Tl),null===r.boundingBox||!1!==El.intersectsBox(r.boundingBox)))// Check boundingBox before continuing
{var s;if(r.isBufferGeometry){var l=r.index,d=r.attributes.position,p=r.morphAttributes.position,u=r.morphTargetsRelative,m=r.attributes.uv,g=r.attributes.uv2,y=r.groups,v=r.drawRange,x,_,M,S,T,E,w,L,A,R,P;if(null!==l){// indexed buffer geometry
if(Array.isArray(n))for(S=0,E=y.length;S<E;S++)for(L=y[S],A=n[L.materialIndex],R=No(L.start,v.start),P=Io(L.start+L.count,v.start+v.count),(T=R,w=P);T<w;T+=3)x=l.getX(T),_=l.getX(T+1),M=l.getX(T+2),s=ie(this,A,e,El,d,p,u,m,g,x,_,M),s&&(s.faceIndex=Po(T/3),s.face.materialIndex=L.materialIndex,t.push(s));else for(R=No(0,v.start),P=Io(l.count,v.start+v.count),(S=R,E=P);S<E;S+=3)x=l.getX(S),_=l.getX(S+1),M=l.getX(S+2),s=ie(this,n,e,El,d,p,u,m,g,x,_,M),s&&(s.faceIndex=Po(S/3),t.push(s));}else if(void 0!==d)// non-indexed buffer geometry
if(Array.isArray(n))for(S=0,E=y.length;S<E;S++)for(L=y[S],A=n[L.materialIndex],R=No(L.start,v.start),P=Io(L.start+L.count,v.start+v.count),(T=R,w=P);T<w;T+=3)x=T,_=T+1,M=T+2,s=ie(this,A,e,El,d,p,u,m,g,x,_,M),s&&(s.faceIndex=Po(T/3),s.face.materialIndex=L.materialIndex,t.push(s));else for(R=No(0,v.start),P=Io(d.count,v.start+v.count),(S=R,E=P);S<E;S+=3)x=S,_=S+1,M=S+2,s=ie(this,n,e,El,d,p,u,m,g,x,_,M),s&&(s.faceIndex=Po(S/3),t.push(s))}else if(r.isGeometry){var C=Array.isArray(n),D=r.vertices,I=r.faces,z=r.faceVertexUvs[0],U,B,F,O;0<z.length&&(O=z);for(var G=0,H=I.length;G<H;G++){var V=I[G],k=C?n[V.materialIndex]:n;if(void 0!==k&&(U=D[V.a],B=D[V.b],F=D[V.c],s=ae(this,k,e,El,U,B,F,Ol),s)){if(O&&O[G]){var W=O[G];Ul.copy(W[0]),Bl.copy(W[1]),Fl.copy(W[2]),s.uv=N.getUV(Ol,U,B,F,Ul,Bl,Fl,new h)}s.face=V,s.faceIndex=G,t.push(s)}}}}//
// Checking boundingSphere distance to ray
},clone:function clone(){return new this.constructor(this.geometry,this.material).copy(this)}});var Hl=0,Vl=new T,kl=new L,Wl=new S;// Geometry uses even numbers as Id
ne.prototype=Object.assign(Object.create(f.prototype),{constructor:ne,isGeometry:!0,applyMatrix4:function applyMatrix4(e){for(var t=new y().getNormalMatrix(e),r=0,a=this.vertices.length,n;r<a;r++)n=this.vertices[r],n.applyMatrix4(e);for(var r=0,a=this.faces.length,o;r<a;r++){o=this.faces[r],o.normal.applyMatrix3(t).normalize();for(var s=0,l=o.vertexNormals.length;s<l;s++)o.vertexNormals[s].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function rotateX(e){return Vl.makeRotationX(e),this.applyMatrix4(Vl),this},rotateY:function rotateY(e){return Vl.makeRotationY(e),this.applyMatrix4(Vl),this},rotateZ:function rotateZ(e){return Vl.makeRotationZ(e),this.applyMatrix4(Vl),this},translate:function translate(e,t,r){return Vl.makeTranslation(e,t,r),this.applyMatrix4(Vl),this},scale:function scale(e,t,r){return Vl.makeScale(e,t,r),this.applyMatrix4(Vl),this},lookAt:function lookAt(e){return kl.lookAt(e),kl.updateMatrix(),this.applyMatrix4(kl.matrix),this},fromBufferGeometry:function fromBufferGeometry(e){function t(e,t,a,i){var n=void 0===l?[]:[r.colors[e].clone(),r.colors[t].clone(),r.colors[a].clone()],o=void 0===s?[]:[new S().fromArray(s,3*e),new S().fromArray(s,3*t),new S().fromArray(s,3*a)],c=new G(e,t,a,o,n,i);r.faces.push(c),void 0!==d&&r.faceVertexUvs[0].push([new h().fromArray(d,2*e),new h().fromArray(d,2*t),new h().fromArray(d,2*a)]),void 0!==p&&r.faceVertexUvs[1].push([new h().fromArray(p,2*e),new h().fromArray(p,2*t),new h().fromArray(p,2*a)])}var r=this,a=null===e.index?void 0:e.index.array,n=e.attributes;if(void 0===n.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;var o=n.position.array,s=void 0===n.normal?void 0:n.normal.array,l=void 0===n.color?void 0:n.color.array,d=void 0===n.uv?void 0:n.uv.array,p=void 0===n.uv2?void 0:n.uv2.array;void 0!==p&&(this.faceVertexUvs[1]=[]);for(var c=0;c<o.length;c+=3)r.vertices.push(new S().fromArray(o,c)),void 0!==l&&r.colors.push(new U().fromArray(l,c));var u=e.groups;if(0<u.length)for(var c=0;c<u.length;c++)for(var m=u[c],g=m.start,f=m.count,y=g;y<g+f;y+=3)void 0===a?t(y,y+1,y+2,m.materialIndex):t(a[y],a[y+1],a[y+2],m.materialIndex);else if(void 0!==a)for(var c=0;c<a.length;c+=3)t(a[c],a[c+1],a[c+2]);else for(var c=0;c<o.length/3;c+=3)t(c,c+1,c+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Wl).negate(),this.translate(Wl.x,Wl.y,Wl.z),this},normalize:function normalize(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,r=0===t?1:1/t,a=new T;return a.set(r,0,0,-r*e.x,0,r,0,-r*e.y,0,0,r,-r*e.z,0,0,0,1),this.applyMatrix4(a),this},computeFaceNormals:function computeFaceNormals(){for(var e=new S,t=new S,r=0,a=this.faces.length;r<a;r++){var i=this.faces[r],n=this.vertices[i.a],o=this.vertices[i.b],s=this.vertices[i.c];e.subVectors(s,o),t.subVectors(n,o),e.cross(t),e.normalize(),i.normal.copy(e)}},computeVertexNormals:function computeVertexNormals(e){e===void 0&&(e=!0);var t,r,a,i,n,o;for(o=Array(this.vertices.length),t=0,r=this.vertices.length;t<r;t++)o[t]=new S;if(e){// vertex normals weighted by triangle areas
// http://www.iquilezles.org/www/articles/normals/normals.htm
var s=new S,l=new S,d,p,c;for(a=0,i=this.faces.length;a<i;a++)n=this.faces[a],d=this.vertices[n.a],p=this.vertices[n.b],c=this.vertices[n.c],s.subVectors(c,p),l.subVectors(d,p),s.cross(l),o[n.a].add(s),o[n.b].add(s),o[n.c].add(s)}else for(this.computeFaceNormals(),a=0,i=this.faces.length;a<i;a++)n=this.faces[a],o[n.a].add(n.normal),o[n.b].add(n.normal),o[n.c].add(n.normal);for(t=0,r=this.vertices.length;t<r;t++)o[t].normalize();for(a=0,i=this.faces.length;a<i;a++){n=this.faces[a];var u=n.vertexNormals;3===u.length?(u[0].copy(o[n.a]),u[1].copy(o[n.b]),u[2].copy(o[n.c])):(u[0]=o[n.a].clone(),u[1]=o[n.b].clone(),u[2]=o[n.c].clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function computeFlatVertexNormals(){var e,t,r;for(this.computeFaceNormals(),e=0,t=this.faces.length;e<t;e++){r=this.faces[e];var a=r.vertexNormals;3===a.length?(a[0].copy(r.normal),a[1].copy(r.normal),a[2].copy(r.normal)):(a[0]=r.normal.clone(),a[1]=r.normal.clone(),a[2]=r.normal.clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function computeMorphNormals(){var e,t,r,a,n;// save original normals
// - create temp variables on first access
//   otherwise just copy (for faster repeated calls)
for(r=0,a=this.faces.length;r<a;r++)for(n=this.faces[r],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),(e=0,t=n.vertexNormals.length);e<t;e++)n.__originalVertexNormals[e]?n.__originalVertexNormals[e].copy(n.vertexNormals[e]):n.__originalVertexNormals[e]=n.vertexNormals[e].clone();// use temp geometry to compute face and vertex normals for each morph
var o=new ne;for(o.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){// create on first access
if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var s=this.morphNormals[e].faceNormals,l=this.morphNormals[e].vertexNormals,d,p;for(r=0,a=this.faces.length;r<a;r++)d=new S,p={a:new S,b:new S,c:new S},s.push(d),l.push(p)}var c=this.morphNormals[e];// set vertices to morph target
o.vertices=this.morphTargets[e].vertices,o.computeFaceNormals(),o.computeVertexNormals();// store morph normals
var d,p;for(r=0,a=this.faces.length;r<a;r++)n=this.faces[r],d=c.faceNormals[r],p=c.vertexNormals[r],d.copy(n.normal),p.a.copy(n.vertexNormals[0]),p.b.copy(n.vertexNormals[1]),p.c.copy(n.vertexNormals[2])}// restore original normals
for(r=0,a=this.faces.length;r<a;r++)n=this.faces[r],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeBoundingBox:function computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new R),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new C),this.boundingSphere.setFromPoints(this.vertices)},merge:function merge(e,t,r){if(!(e&&e.isGeometry))return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);var a=this.vertices.length,n=this.vertices,o=e.vertices,s=this.faces,l=e.faces,d=this.colors,p=e.colors,c;r===void 0&&(r=0),t!==void 0&&(c=new y().getNormalMatrix(t));// vertices
for(var u=0,m=o.length;u<m;u++){var g=o[u],f=g.clone();t!==void 0&&f.applyMatrix4(t),n.push(f)}// colors
for(var u=0,m=p.length;u<m;u++)d.push(p[u].clone());// faces
for(u=0,m=l.length;u<m;u++){var h=l[u],v=h.vertexNormals,x=h.vertexColors,_,b,M;_=new G(h.a+a,h.b+a,h.c+a),_.normal.copy(h.normal),c!==void 0&&_.normal.applyMatrix3(c).normalize();for(var S=0,T=v.length;S<T;S++)b=v[S].clone(),void 0!==c&&b.applyMatrix3(c).normalize(),_.vertexNormals.push(b);_.color.copy(h.color);for(var S=0,T=x.length;S<T;S++)M=x[S],_.vertexColors.push(M.clone());_.materialIndex=h.materialIndex+r,s.push(_)}// uvs
for(var u=0,m=e.faceVertexUvs.length,E;u<m;u++){E=e.faceVertexUvs[u],this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(var S=0,T=E.length;S<T;S++){for(var w=E[S],L=[],A=0,R=w.length;A<R;A++)L.push(w[A].clone());this.faceVertexUvs[u].push(L)}}},mergeMesh:function mergeMesh(e){return e&&e.isMesh?void(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)):void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e)},/*
  	 * Checks for duplicate vertices with hashmap.
  	 * Duplicated vertices are removed
  	 * and faces' vertices are updated.
  	 */mergeVertices:function mergeVertices(){var e={},t=[],r=[],a=Do(10,4),o,s,l,d,p,c,u,m;// Hashmap for looking up vertices by position coordinates (and making sure they are unique)
for(l=0,d=this.vertices.length;l<d;l++)o=this.vertices[l],s=xo(o.x*a)+"_"+xo(o.y*a)+"_"+xo(o.z*a),void 0===e[s]?(e[s]=l,t.push(this.vertices[l]),r[l]=t.length-1):r[l]=r[e[s]];// if faces are completely degenerate after merging vertices, we
// have to remove them from the geometry.
var g=[];for(l=0,d=this.faces.length;l<d;l++){p=this.faces[l],p.a=r[p.a],p.b=r[p.b],p.c=r[p.c],c=[p.a,p.b,p.c];// if any duplicate vertices are found in a Face3
// we have to remove the face as nothing can be saved
for(var f=0;3>f;f++)if(c[f]===c[(f+1)%3]){g.push(l);break}}for(l=g.length-1;0<=l;l--){var h=g[l];for(this.faces.splice(h,1),u=0,m=this.faceVertexUvs.length;u<m;u++)this.faceVertexUvs[u].splice(h,1)}// Use unique set of vertices
var y=this.vertices.length-t.length;return this.vertices=t,y},setFromPoints:function setFromPoints(e){this.vertices=[];for(var t=0,r=e.length,a;t<r;t++)a=e[t],this.vertices.push(new S(a.x,a.y,a.z||0));return this},sortFacesByMaterialIndex:function sortFacesByMaterialIndex(){// sort faces
// tag faces
for(var e=this.faces,t=e.length,r=0;r<t;r++)e[r]._id=r;e.sort(function(e,t){return e.materialIndex-t.materialIndex});// sort uvs
var a=this.faceVertexUvs[0],n=this.faceVertexUvs[1],o,s;a&&a.length===t&&(o=[]),n&&n.length===t&&(s=[]);for(var r=0,l;r<t;r++)l=e[r]._id,o&&o.push(a[l]),s&&s.push(n[l]);o&&(this.faceVertexUvs[0]=o),s&&(this.faceVertexUvs[1]=s)},toJSON:function(){function e(e,t,r){return r?e|1<<t:e&~(1<<t)}function t(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0===m[t]?(m[t]=u.length/3,u.push(e.x,e.y,e.z),m[t]):m[t]}function r(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0===f[t]?(f[t]=g.length,g.push(e.getHex()),f[t]):f[t]}function a(e){var t=e.x.toString()+e.y.toString();return void 0===y[t]?(y[t]=h.length/2,h.push(e.x,e.y),y[t]):y[t]}var n={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};// standard Geometry serialization
if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),void 0!==this.parameters){var o=this.parameters;for(var s in o)void 0!==o[s]&&(n[s]=o[s]);return n}for(var l=[],d=0,p;d<this.vertices.length;d++)p=this.vertices[d],l.push(p.x,p.y,p.z);for(var c=[],u=[],m={},g=[],f={},h=[],y={},d=0;d<this.faces.length;d++){var v=this.faces[d],x=void 0!==this.faceVertexUvs[0][d],_=0<v.normal.length(),b=0<v.vertexNormals.length,M=1!==v.color.r||1!==v.color.g||1!==v.color.b,S=0<v.vertexColors.length,T=0;if(T=e(T,0,0),T=e(T,1,!0),T=e(T,2,!1),T=e(T,3,x),T=e(T,4,_),T=e(T,5,b),T=e(T,6,M),T=e(T,7,S),c.push(T),c.push(v.a,v.b,v.c),c.push(v.materialIndex),x){var E=this.faceVertexUvs[0][d];c.push(a(E[0]),a(E[1]),a(E[2]))}if(_&&c.push(t(v.normal)),b){var w=v.vertexNormals;c.push(t(w[0]),t(w[1]),t(w[2]))}if(M&&c.push(r(v.color)),S){var L=v.vertexColors;c.push(r(L[0]),r(L[1]),r(L[2]))}}return n.data={},n.data.vertices=l,n.data.normals=u,0<g.length&&(n.data.colors=g),0<h.length&&(n.data.uvs=[h]),n.data.faces=c,n},clone:function clone(){/*
  		 // Handle primitives

  		 var parameters = this.parameters;

  		 if ( parameters !== undefined ) {

  		 var values = [];

  		 for ( var key in parameters ) {

  		 values.push( parameters[ key ] );

  		 }

  		 var geometry = Object.create( this.constructor.prototype );
  		 this.constructor.apply( geometry, values );
  		 return geometry;

  		 }

  		 return new this.constructor().copy( this );
  		 */return new ne().copy(this)},copy:function copy(e){var t,r,a,n,o,s;// reset
this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;// vertices
var l=e.vertices;for(t=0,r=l.length;t<r;t++)this.vertices.push(l[t].clone());// colors
var d=e.colors;for(t=0,r=d.length;t<r;t++)this.colors.push(d[t].clone());// faces
var p=e.faces;for(t=0,r=p.length;t<r;t++)this.faces.push(p[t].clone());// face vertex uvs
for(t=0,r=e.faceVertexUvs.length;t<r;t++){var c=e.faceVertexUvs[t];for(void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]),a=0,n=c.length;a<n;a++){var u=c[a],m=[];for(o=0,s=u.length;o<s;o++){var g=u[o];m.push(g.clone())}this.faceVertexUvs[t].push(m)}}// morph targets
var f=e.morphTargets;for(t=0,r=f.length;t<r;t++){var h={name:f[t].name};// vertices
if(void 0!==f[t].vertices)for(h.vertices=[],a=0,n=f[t].vertices.length;a<n;a++)h.vertices.push(f[t].vertices[a].clone());// normals
if(void 0!==f[t].normals)for(h.normals=[],a=0,n=f[t].normals.length;a<n;a++)h.normals.push(f[t].normals[a].clone());this.morphTargets.push(h)}// morph normals
var y=e.morphNormals;for(t=0,r=y.length;t<r;t++){var v={};// vertex normals
if(void 0!==y[t].vertexNormals)for(v.vertexNormals=[],a=0,n=y[t].vertexNormals.length;a<n;a++){var x=y[t].vertexNormals[a],_={};_.a=x.a.clone(),_.b=x.b.clone(),_.c=x.c.clone(),v.vertexNormals.push(_)}// face normals
if(void 0!==y[t].faceNormals)for(v.faceNormals=[],a=0,n=y[t].faceNormals.length;a<n;a++)v.faceNormals.push(y[t].faceNormals[a].clone());this.morphNormals.push(v)}// skin weights
var b=e.skinWeights;for(t=0,r=b.length;t<r;t++)this.skinWeights.push(b[t].clone());// skin indices
var M=e.skinIndices;for(t=0,r=M.length;t<r;t++)this.skinIndices.push(M[t].clone());// line distances
var S=e.lineDistances;for(t=0,r=S.length;t<r;t++)this.lineDistances.push(S[t]);// bounding box
var T=e.boundingBox;null!==T&&(this.boundingBox=T.clone());// bounding sphere
var E=e.boundingSphere;return null!==E&&(this.boundingSphere=E.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function dispose(){this.dispatchEvent({type:"dispose"})}});/**
   * @author mrdoob / http://mrdoob.com/
   * @author Mugen87 / https://github.com/Mugen87
   */ // BoxGeometry
var jl=/*#__PURE__*/function(e){function t(e,a,i,n,o,s){var l;return _classCallCheck2(this,t),l=r.call(this),l.type="BoxGeometry",l.parameters={width:e,height:a,depth:i,widthSegments:n,heightSegments:o,depthSegments:s},l.fromBufferGeometry(new ql(e,a,i,n,o,s)),l.mergeVertices(),l}_inherits2(t,e);var r=_createSuper2(t);return t}(ne),ql=/*#__PURE__*/function(e){function t(e,a,i,n,o,s){var d;function l(e,t,r,i,n,o,s,l,v,M,T){var E=v+1,w=0,L=0,A=new S,R,P;// generate vertices, normals and uvs
for(P=0;P<M+1;P++){var C=P*(s/M)-s/2;for(R=0;R<E;R++){var y=R*(o/v)-o/2;// set values to correct vector component
A[e]=y*i,A[t]=C*n,A[r]=l/2,m.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[r]=0<l?1:-1,g.push(A.x,A.y,A.z),f.push(R/v),f.push(1-P/M),w+=1}}// indices
// 1. you need three indices to draw a single face
// 2. a single segment consists of two faces
// 3. so we need to generate six (2*3) indices per segment
for(P=0;P<M;P++)for(R=0;R<v;R++){var x=h+R+E*P,a=h+R+E*(P+1),b=h+(R+1)+E*(P+1),c=h+(R+1)+E*P;u.push(x,a,c),u.push(a,b,c),L+=6}// add a group to the geometry. this will ensure multi material support
p.addGroup(_,L,T),_+=L,h+=w}_classCallCheck2(this,t),d=r.call(this),d.type="BoxBufferGeometry",d.parameters={width:e,height:a,depth:i,widthSegments:n,heightSegments:o,depthSegments:s};var p=_assertThisInitialized2(d);e=e||1,a=a||1,i=i||1,n=Po(n)||1,o=Po(o)||1,s=Po(s)||1;// buffers
var u=[],m=[],g=[],f=[],h=0,_=0;return l("z","y","x",-1,-1,i,a,e,s,o,0),l("z","y","x",1,-1,i,a,-e,s,o,1),l("x","z","y",1,1,e,i,a,n,s,2),l("x","z","y",1,-1,e,i,-a,n,s,3),l("x","y","z",1,-1,e,a,i,n,o,4),l("x","y","z",-1,-1,e,a,-i,n,o,5),d.setIndex(u),d.setAttribute("position",new Q(m,3)),d.setAttribute("normal",new Q(g,3)),d.setAttribute("uv",new Q(f,2)),d}_inherits2(t,e);var r=_createSuper2(t);return t}(te),Xl={clone:oe,merge:se};// BoxBufferGeometry
le.prototype=Object.create(H.prototype),le.prototype.constructor=le,le.prototype.isShaderMaterial=!0,le.prototype.copy=function(e){return H.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=oe(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=e.extensions,this},le.prototype.toJSON=function(e){var t=H.prototype.toJSON.call(this,e);for(var r in t.uniforms={},this.uniforms){var a=this.uniforms[r],i=a.value;t.uniforms[r]=i&&i.isTexture?{type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?{type:"c",value:i.getHex()}:i&&i.isVector2?{type:"v2",value:i.toArray()}:i&&i.isVector3?{type:"v3",value:i.toArray()}:i&&i.isVector4?{type:"v4",value:i.toArray()}:i&&i.isMatrix3?{type:"m3",value:i.toArray()}:i&&i.isMatrix4?{type:"m4",value:i.toArray()}:{value:i}}0<Object.keys(this.defines).length&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;var n={};for(var o in this.extensions)!0===this.extensions[o]&&(n[o]=!0);return 0<Object.keys(n).length&&(t.extensions=n),t},de.prototype=Object.assign(Object.create(L.prototype),{constructor:de,isCamera:!0,copy:function copy(e,t){return L.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function getWorldDirection(t){t===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new S),this.updateMatrixWorld(!0);var r=this.matrixWorld.elements;return t.set(-r[8],-r[9],-r[10]).normalize()},updateMatrixWorld:function updateMatrixWorld(e){L.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function updateWorldMatrix(e,t){L.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function clone(){return new this.constructor().copy(this)}}),pe.prototype=Object.assign(Object.create(de.prototype),{constructor:pe,isPerspectiveCamera:!0,copy:function copy(e,t){return de.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},/**
  	 * Sets the FOV by focal length in respect to the current .filmGauge.
  	 *
  	 * The default film gauge is 35, so that the focal length can be specified for
  	 * a 35mm (full frame) camera.
  	 *
  	 * Values for focal length and film gauge must have the same unit.
  	 */setFocalLength:function setFocalLength(e){// see http://www.bobatkins.com/photography/technical/field_of_view.html
var t=.5*this.getFilmHeight()/e;this.fov=2*os.RAD2DEG*yo(t),this.updateProjectionMatrix()},/**
  	 * Calculates the focal length from the current .fov and .filmGauge.
  	 */getFocalLength:function getFocalLength(){var e=ho(.5*os.DEG2RAD*this.fov);return .5*this.getFilmHeight()/e},getEffectiveFOV:function getEffectiveFOV(){return 2*os.RAD2DEG*yo(ho(.5*os.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function getFilmWidth(){// film not completely covered in portrait format (aspect < 1)
return this.filmGauge*Io(this.aspect,1)},getFilmHeight:function getFilmHeight(){// film not completely covered in landscape format (aspect > 1)
return this.filmGauge/No(this.aspect,1)},/**
  	 * Sets an offset in a larger frustum. This is useful for multi-window or
  	 * multi-monitor/multi-machine setups.
  	 *
  	 * For example, if you have 3x2 monitors and each monitor is 1920x1080 and
  	 * the monitors are in grid like this
  	 *
  	 *   +---+---+---+
  	 *   | A | B | C |
  	 *   +---+---+---+
  	 *   | D | E | F |
  	 *   +---+---+---+
  	 *
  	 * then for each monitor you would call it like this
  	 *
  	 *   var w = 1920;
  	 *   var h = 1080;
  	 *   var fullWidth = w * 3;
  	 *   var fullHeight = h * 2;
  	 *
  	 *   --A--
  	 *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );
  	 *   --B--
  	 *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );
  	 *   --C--
  	 *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );
  	 *   --D--
  	 *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );
  	 *   --E--
  	 *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );
  	 *   --F--
  	 *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );
  	 *
  	 *   Note there is no reason monitors have to be the same size or in a grid.
  	 */setViewOffset:function setViewOffset(e,t,r,a,i,n){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=a,this.view.width=i,this.view.height=n,this.updateProjectionMatrix()},clearViewOffset:function clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function updateProjectionMatrix(){var e=this.near,t=e*ho(.5*os.DEG2RAD*this.fov)/this.zoom,r=2*t,a=this.aspect*r,i=-.5*a,n=this.view;if(null!==this.view&&this.view.enabled){var o=n.fullWidth,s=n.fullHeight;i+=n.offsetX*a/o,t-=n.offsetY*r/s,a*=n.width/o,r*=n.height/s}var l=this.filmOffset;0!==l&&(i+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+a,t,t-r,e,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){var t=L.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});ce.prototype=Object.create(L.prototype),ce.prototype.constructor=ce,ue.prototype=Object.create(_.prototype),ue.prototype.constructor=ue,ue.prototype.isWebGLCubeRenderTarget=!0,ue.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=t.format,this.texture.encoding=t.encoding;var r=new A,a={uniforms:{tEquirect:{value:null}},vertexShader:"varying vec3 vWorldDirection;\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",fragmentShader:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}"},i=new le({type:"CubemapFromEquirect",uniforms:oe(a.uniforms),vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,side:Oo,blending:0});i.uniforms.tEquirect.value=t;var n=new re(new ql(5,5,5),i);r.add(n);var o=new ce(1,10,1);return o.renderTarget=this,o.renderTarget.texture.name="CubeCameraTexture",o.update(e,r),n.geometry.dispose(),n.material.dispose(),this},me.prototype=Object.create(v.prototype),me.prototype.constructor=me,me.prototype.isDataTexture=!0;/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   * @author bhouston / http://clara.io
   */var Yl=new C,Zl=new S;Object.assign(ge.prototype,{set:function set(e,t,r,a,i,n){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(r),o[3].copy(a),o[4].copy(i),o[5].copy(n),this},clone:function clone(){return new this.constructor().copy(this)},copy:function copy(e){for(var t=this.planes,r=0;6>r;r++)t[r].copy(e.planes[r]);return this},setFromProjectionMatrix:function setFromProjectionMatrix(e){var t=this.planes,r=e.elements,a=r[0],i=r[1],n=r[2],o=r[3],s=r[4],l=r[5],d=r[6],p=r[7],c=r[8],u=r[9],m=r[10],g=r[11],f=r[12],h=r[13],y=r[14],v=r[15];return t[0].setComponents(o-a,p-s,g-c,v-f).normalize(),t[1].setComponents(o+a,p+s,g+c,v+f).normalize(),t[2].setComponents(o+i,p+l,g+u,v+h).normalize(),t[3].setComponents(o-i,p-l,g-u,v-h).normalize(),t[4].setComponents(o-n,p-d,g-m,v-y).normalize(),t[5].setComponents(o+n,p+d,g+m,v+y).normalize(),this},intersectsObject:function intersectsObject(e){var t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Yl.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Yl)},intersectsSprite:function intersectsSprite(e){return Yl.center.set(0,0,0),Yl.radius=.7071067811865476,Yl.applyMatrix4(e.matrixWorld),this.intersectsSphere(Yl)},intersectsSphere:function intersectsSphere(e){for(var t=this.planes,r=e.center,a=-e.radius,n=0,o;6>n;n++)if(o=t[n].distanceToPoint(r),o<a)return!1;return!0},intersectsBox:function intersectsBox(e){for(var t=this.planes,r=0,a;6>r;r++)if(a=t[r],Zl.x=0<a.normal.x?e.max.x:e.min.x,Zl.y=0<a.normal.y?e.max.y:e.min.y,Zl.z=0<a.normal.z?e.max.z:e.min.z,0>a.distanceToPoint(Zl))return!1;return!0},containsPoint:function containsPoint(e){for(var t=this.planes,r=0;6>r;r++)if(0>t[r].distanceToPoint(e))return!1;return!0}});/**
   * Uniforms library for shared webgl shaders
   */var Jl={common:{diffuse:{value:new U(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new y},uv2Transform:{value:new y},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new h(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new U(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src
rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new U(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new y}},sprite:{diffuse:{value:new U(15658734)},opacity:{value:1},center:{value:new h(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new y}}};ye.prototype=Object.create(ne.prototype),ye.prototype.constructor=ye,ve.prototype=Object.create(te.prototype),ve.prototype.constructor=ve;var Ql={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);\n    } else if (face == 1.0) {\n      uv = vec2(direction.x, -direction.z) / abs(direction.y);\n    } else if (face == 2.0) {\n      uv = direction.xy / abs(direction.z);\n    } else if (face == 3.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);\n    } else if (face == 4.0) {\n      uv = direction.xz / abs(direction.y);\n    } else {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);\n    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Kl={basic:{uniforms:se([Jl.common,Jl.specularmap,Jl.envmap,Jl.aomap,Jl.lightmap,Jl.fog]),vertexShader:Ql.meshbasic_vert,fragmentShader:Ql.meshbasic_frag},lambert:{uniforms:se([Jl.common,Jl.specularmap,Jl.envmap,Jl.aomap,Jl.lightmap,Jl.emissivemap,Jl.fog,Jl.lights,{emissive:{value:new U(0)}}]),vertexShader:Ql.meshlambert_vert,fragmentShader:Ql.meshlambert_frag},phong:{uniforms:se([Jl.common,Jl.specularmap,Jl.envmap,Jl.aomap,Jl.lightmap,Jl.emissivemap,Jl.bumpmap,Jl.normalmap,Jl.displacementmap,Jl.fog,Jl.lights,{emissive:{value:new U(0)},specular:{value:new U(1118481)},shininess:{value:30}}]),vertexShader:Ql.meshphong_vert,fragmentShader:Ql.meshphong_frag},standard:{uniforms:se([Jl.common,Jl.envmap,Jl.aomap,Jl.lightmap,Jl.emissivemap,Jl.bumpmap,Jl.normalmap,Jl.displacementmap,Jl.roughnessmap,Jl.metalnessmap,Jl.fog,Jl.lights,{emissive:{value:new U(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}// temporary
}]),vertexShader:Ql.meshphysical_vert,fragmentShader:Ql.meshphysical_frag},toon:{uniforms:se([Jl.common,Jl.specularmap,Jl.aomap,Jl.lightmap,Jl.emissivemap,Jl.bumpmap,Jl.normalmap,Jl.displacementmap,Jl.gradientmap,Jl.fog,Jl.lights,{emissive:{value:new U(0)},specular:{value:new U(1118481)},shininess:{value:30}}]),vertexShader:Ql.meshtoon_vert,fragmentShader:Ql.meshtoon_frag},matcap:{uniforms:se([Jl.common,Jl.bumpmap,Jl.normalmap,Jl.displacementmap,Jl.fog,{matcap:{value:null}}]),vertexShader:Ql.meshmatcap_vert,fragmentShader:Ql.meshmatcap_frag},points:{uniforms:se([Jl.points,Jl.fog]),vertexShader:Ql.points_vert,fragmentShader:Ql.points_frag},dashed:{uniforms:se([Jl.common,Jl.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ql.linedashed_vert,fragmentShader:Ql.linedashed_frag},depth:{uniforms:se([Jl.common,Jl.displacementmap]),vertexShader:Ql.depth_vert,fragmentShader:Ql.depth_frag},normal:{uniforms:se([Jl.common,Jl.bumpmap,Jl.normalmap,Jl.displacementmap,{opacity:{value:1}}]),vertexShader:Ql.normal_vert,fragmentShader:Ql.normal_frag},sprite:{uniforms:se([Jl.sprite,Jl.fog]),vertexShader:Ql.sprite_vert,fragmentShader:Ql.sprite_frag},background:{uniforms:{uvTransform:{value:new y},t2D:{value:null}},vertexShader:Ql.background_vert,fragmentShader:Ql.background_frag},/* -------------------------------------------------------------------------
  	//	Cube map shader
  	 ------------------------------------------------------------------------- */cube:{uniforms:se([Jl.envmap,{opacity:{value:1}}]),vertexShader:Ql.cube_vert,fragmentShader:Ql.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ql.equirect_vert,fragmentShader:Ql.equirect_frag},distanceRGBA:{uniforms:se([Jl.common,Jl.displacementmap,{referencePosition:{value:new S},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ql.distanceRGBA_vert,fragmentShader:Ql.distanceRGBA_frag},shadow:{uniforms:se([Jl.lights,Jl.fog,{color:{value:new U(0)},opacity:{value:1}}]),vertexShader:Ql.shadow_vert,fragmentShader:Ql.shadow_frag}};Kl.physical={uniforms:se([Kl.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new h(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new U(0)},transparency:{value:0}}]),vertexShader:Ql.meshphysical_vert,fragmentShader:Ql.meshphysical_frag},Pe.prototype=Object.create(v.prototype),Pe.prototype.constructor=Pe,Pe.prototype.isCubeTexture=!0,Object.defineProperty(Pe.prototype,"images",{get:function get(){return this.image},set:function set(e){this.image=e}}),Ce.prototype=Object.create(v.prototype),Ce.prototype.constructor=Ce,Ce.prototype.isDataTexture2DArray=!0,De.prototype=Object.create(v.prototype),De.prototype.constructor=De,De.prototype.isDataTexture3D=!0;/**
   * @author tschw
   * @author Mugen87 / https://github.com/Mugen87
   * @author mrdoob / http://mrdoob.com/
   *
   * Uniforms of a program.
   * Those form a tree structure with a special top-level container for the root,
   * which you get by calling 'new WebGLUniforms( gl, program )'.
   *
   *
   * Properties of inner nodes including the top-level container:
   *
   * .seq - array of nested uniforms
   * .map - nested uniforms by name
   *
   *
   * Methods of all nodes except the top-level container:
   *
   * .setValue( gl, value, [textures] )
   *
   * 		uploads a uniform value(s)
   *  	the 'textures' parameter is needed for sampler uniforms
   *
   *
   * Static methods of the top-level container (textures factorizations):
   *
   * .upload( gl, seq, values, textures )
   *
   * 		sets uniforms in 'seq' to 'values[id].value'
   *
   * .seqWithValue( seq, values ) : filteredSeq
   *
   * 		filters 'seq' entries with corresponding entry in values
   *
   *
   * Methods of the top-level container (textures factorizations):
   *
   * .setValue( gl, name, value, textures )
   *
   * 		sets uniform with  name 'name' to 'value'
   *
   * .setOptional( gl, obj, prop )
   *
   * 		like .set for an optional property of the object
   *
   */var $l=new v,ed=new Ce,td=new De,rd=new Pe,ad=[],id=[],nd=new Float32Array(16),od=new Float32Array(9),sd=new Float32Array(4);ft.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),ze(t,e)},ht.prototype.setValue=function(e,t,r){for(var a=this.seq,o=0,s=a.length,n;o!==s;++o)n=a[o],n.setValue(e,t[n.id],r)};// --- Top-level ---
// Parser - builds up the property tree from the path strings
var ld=/([\w\d_]+)(\])?(\[|\.)?/g;xt.prototype.setValue=function(e,t,r,a){var i=this.map[t];i!==void 0&&i.setValue(e,r,a)},xt.prototype.setOptional=function(e,t,r){var a=t[r];a!==void 0&&this.setValue(e,r,a)},xt.upload=function(e,t,r,a){for(var o=0,s=t.length;o!==s;++o){var n=t[o],l=r[n.id];!1!==l.needsUpdate&&n.setValue(e,l.value,a)}},xt.seqWithValue=function(e,t){for(var a=[],r=0,o=e.length,n;r!==o;++r)n=e[r],n.id in t&&a.push(n);return a};var dd=0,pd=/^[ \t]*#include +<([\w\d./]+)>/gm,cd=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,ud=/#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g,md=0;rr.prototype=Object.create(H.prototype),rr.prototype.constructor=rr,rr.prototype.isMeshDepthMaterial=!0,rr.prototype.copy=function(e){return H.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},ar.prototype=Object.create(H.prototype),ar.prototype.constructor=ar,ar.prototype.isMeshDistanceMaterial=!0,ar.prototype.copy=function(e){return H.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this};lr.prototype=Object.assign(Object.create(pe.prototype),{constructor:lr,isArrayCamera:!0}),dr.prototype=Object.assign(Object.create(L.prototype),{constructor:dr,isGroup:!0}),Object.assign(pr.prototype,f.prototype),Object.assign(ur.prototype,{isFogExp2:!0,clone:function clone(){return new ur(this.color,this.density)},toJSON:function()/* meta */{return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}),Object.assign(mr.prototype,{isFog:!0,clone:function clone(){return new mr(this.color,this.near,this.far)},toJSON:function()/* meta */{return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}),Object.defineProperty(gr.prototype,"needsUpdate",{set:function set(e){!0===e&&this.version++}}),Object.assign(gr.prototype,{isInterleavedBuffer:!0,onUploadCallback:function onUploadCallback(){},setUsage:function setUsage(e){return this.usage=e,this},copy:function copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function copyAt(e,t,r){e*=this.stride,r*=t.stride;for(var a=0,n=this.stride;a<n;a++)this.array[e+a]=t.array[r+a];return this},set:function set(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function clone(){return new this.constructor().copy(this)},onUpload:function onUpload(e){return this.onUploadCallback=e,this}});/**
   * @author benaadams / https://twitter.com/ben_a_adams
   */var gd=new S;Object.defineProperties(fr.prototype,{count:{get:function get(){return this.data.count}},array:{get:function get(){return this.data.array}}}),Object.assign(fr.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function applyMatrix4(e){for(var t=0,r=this.data.count;t<r;t++)gd.x=this.getX(t),gd.y=this.getY(t),gd.z=this.getZ(t),gd.applyMatrix4(e),this.setXYZ(t,gd.x,gd.y,gd.z);return this},setX:function setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function getX(e){return this.data.array[e*this.data.stride+this.offset]},getY:function getY(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function getZ(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function getW(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function setXY(e,t,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this},setXYZ:function setXYZ(e,t,r,a){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=a,this},setXYZW:function setXYZW(e,t,r,a,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=a,this.data.array[e+3]=i,this}}),hr.prototype=Object.create(H.prototype),hr.prototype.constructor=hr,hr.prototype.isSpriteMaterial=!0,hr.prototype.copy=function(e){return H.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this};/**
   * @author mikael emtinger / http://gomo.se/
   * @author alteredq / http://alteredqualia.com/
   */var fd=new S,hd=new S,yd=new S,vd=new h,xd=new h,_d=new T,bd=new S,Md=new S,Sd=new S,Td=new h,Ed=new h,wd=new h,Ld;yr.prototype=Object.assign(Object.create(L.prototype),{constructor:yr,isSprite:!0,raycast:function raycast(e,t){null===e.camera&&console.error("THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites."),hd.setFromMatrixScale(this.matrixWorld),_d.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),yd.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&hd.multiplyScalar(-yd.z);var r=this.material.rotation,a,i;0!==r&&(i=Ro(r),a=So(r));var n=this.center;vr(bd.set(-.5,-.5,0),yd,n,hd,a,i),vr(Md.set(.5,-.5,0),yd,n,hd,a,i),vr(Sd.set(.5,.5,0),yd,n,hd,a,i),Td.set(0,0),Ed.set(1,0),wd.set(1,1);// check first triangle
var o=e.ray.intersectTriangle(bd,Md,Sd,!1,fd);if(!(null===o&&(vr(Md.set(-.5,.5,0),yd,n,hd,a,i),Ed.set(0,1),o=e.ray.intersectTriangle(bd,Sd,Md,!1,fd),null===o))){var s=e.ray.origin.distanceTo(fd);s<e.near||s>e.far||t.push({distance:s,point:fd.clone(),uv:N.getUV(fd,bd,Md,Sd,Td,Ed,wd,new h),face:null,object:this})}},clone:function clone(){return new this.constructor(this.material).copy(this)},copy:function copy(e){return L.prototype.copy.call(this,e),void 0!==e.center&&this.center.copy(e.center),this}});var Ad=new S,Rd=new S;xr.prototype=Object.assign(Object.create(L.prototype),{constructor:xr,isLOD:!0,copy:function copy(e){L.prototype.copy.call(this,e,!1);for(var t=e.levels,r=0,a=t.length,n;r<a;r++)n=t[r],this.addLevel(n.object.clone(),n.distance);return this.autoUpdate=e.autoUpdate,this},addLevel:function addLevel(e,t){void 0===t&&(t=0),t=zo(t);for(var r=this.levels,a=0;a<r.length&&!(t<r[a].distance);a++);return r.splice(a,0,{distance:t,object:e}),this.add(e),this},getCurrentLevel:function getCurrentLevel(){return this._currentLevel},getObjectForDistance:function getObjectForDistance(e){var t=this.levels;if(0<t.length){for(var r=1,a=t.length;r<a&&!(e<t[r].distance);r++);return t[r-1].object}return null},raycast:function raycast(e,t){var r=this.levels;if(0<r.length){Ad.setFromMatrixPosition(this.matrixWorld);var a=e.ray.origin.distanceTo(Ad);this.getObjectForDistance(a).raycast(e,t)}},update:function update(e){var t=this.levels;if(1<t.length){Ad.setFromMatrixPosition(e.matrixWorld),Rd.setFromMatrixPosition(this.matrixWorld);var r=Ad.distanceTo(Rd)/e.zoom;t[0].object.visible=!0;for(var a=1,n=t.length;a<n&&r>=t[a].distance;a++)t[a-1].object.visible=!1,t[a].object.visible=!0;for(this._currentLevel=a-1;a<n;a++)t[a].object.visible=!1}},toJSON:function(e){var t=L.prototype.toJSON.call(this,e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];for(var r=this.levels,a=0,n=r.length,o;a<n;a++)o=r[a],t.object.levels.push({object:o.object.uuid,distance:o.distance});return t}}),_r.prototype=Object.assign(Object.create(re.prototype),{constructor:_r,isSkinnedMesh:!0,bind:function bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function pose(){this.skeleton.pose()},normalizeSkinWeights:function normalizeSkinWeights(){for(var e=new x,t=this.geometry.attributes.skinWeight,r=0,a=t.count;r<a;r++){e.x=t.getX(r),e.y=t.getY(r),e.z=t.getZ(r),e.w=t.getW(r);var n=1/e.manhattanLength();n==1/0?e.set(1,0,0,0):e.multiplyScalar(n),t.setXYZW(r,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function updateMatrixWorld(e){re.prototype.updateMatrixWorld.call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function clone(){return new this.constructor(this.geometry,this.material).copy(this)}});/**
   * @author mikael emtinger / http://gomo.se/
   * @author alteredq / http://alteredqualia.com/
   * @author michael guerrero / http://realitymeltdown.com
   * @author ikerr / http://verold.com
   */var Pd=new T,Cd=new T;Object.assign(br.prototype,{calculateInverses:function calculateInverses(){this.boneInverses=[];for(var e=0,t=this.bones.length,r;e<t;e++)r=new T,this.bones[e]&&r.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(r)},pose:function pose(){var e,t,r;// recover the bind-time world matrices
for(t=0,r=this.bones.length;t<r;t++)e=this.bones[t],e&&e.matrixWorld.getInverse(this.boneInverses[t]);// compute the local matrices, positions, rotations and scales
for(t=0,r=this.bones.length;t<r;t++)e=this.bones[t],e&&(e.parent&&e.parent.isBone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},update:function update(){// flatten bone matrices to array
for(var e=this.bones,t=this.boneInverses,r=this.boneMatrices,a=this.boneTexture,n=0,o=e.length,s;n<o;n++)// compute the offset between the current and the original transform
s=e[n]?e[n].matrixWorld:Cd,Pd.multiplyMatrices(s,t[n]),Pd.toArray(r,16*n);a!==void 0&&(a.needsUpdate=!0)},clone:function clone(){return new br(this.bones,this.boneInverses)},getBoneByName:function getBoneByName(e){for(var t=0,r=this.bones.length,a;t<r;t++)if(a=this.bones[t],a.name===e)return a},dispose:function dispose(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}}),Mr.prototype=Object.assign(Object.create(L.prototype),{constructor:Mr,isBone:!0});/**
   * @author mrdoob / http://mrdoob.com/
   */var Dd=new T,Id=new T,Nd=[],zd=new re;Sr.prototype=Object.assign(Object.create(re.prototype),{constructor:Sr,isInstancedMesh:!0,getMatrixAt:function getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)},raycast:function raycast(e,t){var r=this.matrixWorld,a=this.count;if(zd.geometry=this.geometry,zd.material=this.material,void 0!==zd.material)for(var i=0;i<a;i++)// calculate the world matrix for each instance
// the mesh represents this single instance
this.getMatrixAt(i,Dd),Id.multiplyMatrices(r,Dd),zd.matrixWorld=Id,zd.raycast(e,Nd),0<Nd.length&&(Nd[0].instanceId=i,Nd[0].object=this,t.push(Nd[0]),Nd.length=0)},setMatrixAt:function setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)},updateMorphTargets:function updateMorphTargets(){}}),Tr.prototype=Object.create(H.prototype),Tr.prototype.constructor=Tr,Tr.prototype.isLineBasicMaterial=!0,Tr.prototype.copy=function(e){return H.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this};/**
   * @author mrdoob / http://mrdoob.com/
   */var Ud=new S,Bd=new S,Fd=new T,Od=new D,Gd=new C;Er.prototype=Object.assign(Object.create(L.prototype),{constructor:Er,isLine:!0,computeLineDistances:function computeLineDistances(){var e=this.geometry;if(e.isBufferGeometry){// we assume non-indexed geometry
if(null===e.index){for(var t=e.attributes.position,r=[0],a=1,n=t.count;a<n;a++)Ud.fromBufferAttribute(t,a-1),Bd.fromBufferAttribute(t,a),r[a]=r[a-1],r[a]+=Ud.distanceTo(Bd);e.setAttribute("lineDistance",new Q(r,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");}else if(e.isGeometry){var o=e.vertices,r=e.lineDistances;r[0]=0;for(var a=1,n=o.length;a<n;a++)r[a]=r[a-1],r[a]+=o[a-1].distanceTo(o[a])}return this},raycast:function raycast(e,t){var r=this.geometry,n=this.matrixWorld,o=e.params.Line.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),Gd.copy(r.boundingSphere),Gd.applyMatrix4(n),Gd.radius+=o,!1!==e.ray.intersectsSphere(Gd)){Fd.getInverse(n),Od.copy(e.ray).applyMatrix4(Fd);var s=o/((this.scale.x+this.scale.y+this.scale.z)/3),d=s*s,p=new S,c=new S,u=new S,m=new S,g=this&&this.isLineSegments?2:1;if(r.isBufferGeometry){var f=r.index,h=r.attributes,y=h.position.array;if(null!==f)for(var v=f.array,x=0,_=v.length-1;x<_;x+=g){var M=v[x],a=v[x+1];p.fromArray(y,3*M),c.fromArray(y,3*a);var b=Od.distanceSqToSegment(p,c,m,u);if(!(b>d)){m.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation
var T=e.ray.origin.distanceTo(m);T<e.near||T>e.far||t.push({distance:T,// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:u.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else for(var x=0,_=y.length/3-1;x<_;x+=g){p.fromArray(y,3*x),c.fromArray(y,3*x+3);var b=Od.distanceSqToSegment(p,c,m,u);if(!(b>d)){m.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation
var T=e.ray.origin.distanceTo(m);T<e.near||T>e.far||t.push({distance:T,// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:u.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}else if(r.isGeometry)for(var E=r.vertices,w=E.length,x=0,b;x<w-1;x+=g)if(b=Od.distanceSqToSegment(E[x],E[x+1],m,u),!(b>d)){m.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation
var T=e.ray.origin.distanceTo(m);T<e.near||T>e.far||t.push({distance:T,// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:u.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}//
},clone:function clone(){return new this.constructor(this.geometry,this.material).copy(this)}});/**
   * @author mrdoob / http://mrdoob.com/
   */var Hd=new S,Vd=new S;wr.prototype=Object.assign(Object.create(Er.prototype),{constructor:wr,isLineSegments:!0,computeLineDistances:function computeLineDistances(){var e=this.geometry;if(e.isBufferGeometry){// we assume non-indexed geometry
if(null===e.index){for(var t=e.attributes.position,r=[],a=0,n=t.count;a<n;a+=2)Hd.fromBufferAttribute(t,a),Vd.fromBufferAttribute(t,a+1),r[a]=0==a?0:r[a-1],r[a+1]=r[a]+Hd.distanceTo(Vd);e.setAttribute("lineDistance",new Q(r,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");}else if(e.isGeometry)for(var o=e.vertices,r=e.lineDistances,a=0,n=o.length;a<n;a+=2)Hd.copy(o[a]),Vd.copy(o[a+1]),r[a]=0==a?0:r[a-1],r[a+1]=r[a]+Hd.distanceTo(Vd);return this}}),Lr.prototype=Object.assign(Object.create(Er.prototype),{constructor:Lr,isLineLoop:!0}),Ar.prototype=Object.create(H.prototype),Ar.prototype.constructor=Ar,Ar.prototype.isPointsMaterial=!0,Ar.prototype.copy=function(e){return H.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this};/**
   * @author alteredq / http://alteredqualia.com/
   */var kd=new T,Wd=new D,jd=new C,qd=new S;Rr.prototype=Object.assign(Object.create(L.prototype),{constructor:Rr,isPoints:!0,raycast:function raycast(e,t){var r=this.geometry,n=this.matrixWorld,o=e.params.Points.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),jd.copy(r.boundingSphere),jd.applyMatrix4(n),jd.radius+=o,!1!==e.ray.intersectsSphere(jd)){kd.getInverse(n),Wd.copy(e.ray).applyMatrix4(kd);var s=o/((this.scale.x+this.scale.y+this.scale.z)/3),d=s*s;if(r.isBufferGeometry){var p=r.index,c=r.attributes,u=c.position.array;if(null!==p)for(var m=p.array,g=0,f=m.length,h;g<f;g++)h=m[g],qd.fromArray(u,3*h),Pr(qd,h,d,n,e,t,this);else for(var g=0,y=u.length/3;g<y;g++)qd.fromArray(u,3*g),Pr(qd,g,d,n,e,t,this)}else for(var v=r.vertices,g=0,y=v.length;g<y;g++)Pr(v[g],g,d,n,e,t,this)}//
},updateMorphTargets:function updateMorphTargets(){var e=this.geometry,t,r,a;if(e.isBufferGeometry){var i=e.morphAttributes,n=Object.keys(i);if(0<n.length){var o=i[n[0]];if(o!==void 0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},(t=0,r=o.length);t<r;t++)a=o[t].name||t+"",this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=t}}else{var s=e.morphTargets;s!==void 0&&0<s.length&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}},clone:function clone(){return new this.constructor(this.geometry,this.material).copy(this)}}),Cr.prototype=Object.assign(Object.create(v.prototype),{constructor:Cr,isVideoTexture:!0,update:function update(){var e=this.image;e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),Dr.prototype=Object.create(v.prototype),Dr.prototype.constructor=Dr,Dr.prototype.isCompressedTexture=!0,Ir.prototype=Object.create(v.prototype),Ir.prototype.constructor=Ir,Ir.prototype.isCanvasTexture=!0,Nr.prototype=Object.create(v.prototype),Nr.prototype.constructor=Nr,Nr.prototype.isDepthTexture=!0,zr.prototype=Object.create(te.prototype),zr.prototype.constructor=zr,Ur.prototype=Object.create(ne.prototype),Ur.prototype.constructor=Ur,Br.prototype=Object.create(te.prototype),Br.prototype.constructor=Br,Fr.prototype=Object.create(ne.prototype),Fr.prototype.constructor=Fr,Or.prototype=Object.create(te.prototype),Or.prototype.constructor=Or,Gr.prototype=Object.create(ne.prototype),Gr.prototype.constructor=Gr,Hr.prototype=Object.create(Or.prototype),Hr.prototype.constructor=Hr,Vr.prototype=Object.create(ne.prototype),Vr.prototype.constructor=Vr,kr.prototype=Object.create(Or.prototype),kr.prototype.constructor=kr,Wr.prototype=Object.create(ne.prototype),Wr.prototype.constructor=Wr,jr.prototype=Object.create(Or.prototype),jr.prototype.constructor=jr,qr.prototype=Object.create(ne.prototype),qr.prototype.constructor=qr,Xr.prototype=Object.create(Or.prototype),Xr.prototype.constructor=Xr,Yr.prototype=Object.create(ne.prototype),Yr.prototype.constructor=Yr,Zr.prototype=Object.create(te.prototype),Zr.prototype.constructor=Zr,Zr.prototype.toJSON=function(){var e=te.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e},Jr.prototype=Object.create(ne.prototype),Jr.prototype.constructor=Jr,Qr.prototype=Object.create(te.prototype),Qr.prototype.constructor=Qr,Kr.prototype=Object.create(ne.prototype),Kr.prototype.constructor=Kr,$r.prototype=Object.create(te.prototype),$r.prototype.constructor=$r;/**
   * @author Mugen87 / https://github.com/Mugen87
   * Port from https://github.com/mapbox/earcut (v2.1.5)
   */var Xd={triangulate:function triangulate(e,t,r){r=r||2;var a=t&&t.length,n=a?t[0]*r:e.length,o=ea(e,0,n,r,!0),s=[];if(!o||o.next===o.prev)return s;var l,d,p,c,u,m,g;// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox
if(a&&(o=sa(e,t,o,r)),e.length>80*r){l=p=e[0],d=c=e[1];for(var f=r;f<n;f+=r)u=e[f],m=e[f+1],u<l&&(l=u),m<d&&(d=m),u>p&&(p=u),m>c&&(c=m);// minX, minY and invSize are later used to transform coords into integers for z-order calculation
g=No(p-l,c-d),g=0===g?0:1/g}return ra(o,s,r,l,d,g),s}},Yd={// calculate area of the contour polygon
area:function(e){for(var t=e.length,r=0,i=t-1,n=0;n<t;i=n++)r+=e[i].x*e[n].y-e[n].x*e[i].y;return .5*r},isClockWise:function isClockWise(e){return 0>Yd.area(e)},triangulateShape:function triangulateShape(e,t){var r=[],a=[],n=[];// flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]
Aa(e),Ra(r,e);//
var o=e.length;t.forEach(Aa);for(var s=0;s<t.length;s++)a.push(o),o+=t[s].length,Ra(r,t[s]);//
//
for(var l=Xd.triangulate(r,a),s=0;s<l.length;s+=3)n.push(l.slice(s,s+3));return n}};Pa.prototype=Object.create(ne.prototype),Pa.prototype.constructor=Pa,Pa.prototype.toJSON=function(){var e=ne.prototype.toJSON.call(this),t=this.parameters.shapes,r=this.parameters.options;return Da(t,r,e)},Ca.prototype=Object.create(te.prototype),Ca.prototype.constructor=Ca,Ca.prototype.toJSON=function(){var e=te.prototype.toJSON.call(this),t=this.parameters.shapes,r=this.parameters.options;return Da(t,r,e)};//
var Zd={generateTopUV:function generateTopUV(e,t,r,a,i){var n=t[3*r],o=t[3*r+1],s=t[3*a],l=t[3*a+1],d=t[3*i],p=t[3*i+1];return[new h(n,o),new h(s,l),new h(d,p)]},generateSideWallUV:function generateSideWallUV(e,t,r,a,i,n){var o=t[3*r],s=t[3*r+1],l=t[3*r+2],d=t[3*a],p=t[3*a+1],c=t[3*a+2],u=t[3*i],m=t[3*i+1],g=t[3*i+2],f=t[3*n],y=t[3*n+1],v=t[3*n+2];return .01>zo(s-p)?[new h(o,1-l),new h(d,1-c),new h(u,1-g),new h(f,1-v)]:[new h(s,1-l),new h(p,1-c),new h(m,1-g),new h(y,1-v)]}};Ia.prototype=Object.create(ne.prototype),Ia.prototype.constructor=Ia,Na.prototype=Object.create(Ca.prototype),Na.prototype.constructor=Na,za.prototype=Object.create(ne.prototype),za.prototype.constructor=za,Ua.prototype=Object.create(te.prototype),Ua.prototype.constructor=Ua,Ba.prototype=Object.create(ne.prototype),Ba.prototype.constructor=Ba,Fa.prototype=Object.create(te.prototype),Fa.prototype.constructor=Fa,Oa.prototype=Object.create(ne.prototype),Oa.prototype.constructor=Oa,Ga.prototype=Object.create(te.prototype),Ga.prototype.constructor=Ga,Ha.prototype=Object.create(ne.prototype),Ha.prototype.constructor=Ha,Ha.prototype.toJSON=function(){var e=ne.prototype.toJSON.call(this),t=this.parameters.shapes;return ka(t,e)},Va.prototype=Object.create(te.prototype),Va.prototype.constructor=Va,Va.prototype.toJSON=function(){var e=te.prototype.toJSON.call(this),t=this.parameters.shapes;return ka(t,e)},Wa.prototype=Object.create(te.prototype),Wa.prototype.constructor=Wa,ja.prototype=Object.create(ne.prototype),ja.prototype.constructor=ja,qa.prototype=Object.create(te.prototype),qa.prototype.constructor=qa,Xa.prototype=Object.create(ja.prototype),Xa.prototype.constructor=Xa,Ya.prototype=Object.create(qa.prototype),Ya.prototype.constructor=Ya,Za.prototype=Object.create(ne.prototype),Za.prototype.constructor=Za,Ja.prototype=Object.create(te.prototype),Ja.prototype.constructor=Ja;var Jd=/*#__PURE__*/Object.freeze({__proto__:null,WireframeGeometry:zr,ParametricGeometry:Ur,ParametricBufferGeometry:Br,TetrahedronGeometry:Gr,TetrahedronBufferGeometry:Hr,OctahedronGeometry:Vr,OctahedronBufferGeometry:kr,IcosahedronGeometry:Wr,IcosahedronBufferGeometry:jr,DodecahedronGeometry:qr,DodecahedronBufferGeometry:Xr,PolyhedronGeometry:Fr,PolyhedronBufferGeometry:Or,TubeGeometry:Yr,TubeBufferGeometry:Zr,TorusKnotGeometry:Jr,TorusKnotBufferGeometry:Qr,TorusGeometry:Kr,TorusBufferGeometry:$r,TextGeometry:Ia,TextBufferGeometry:Na,SphereGeometry:za,SphereBufferGeometry:Ua,RingGeometry:Ba,RingBufferGeometry:Fa,PlaneGeometry:ye,PlaneBufferGeometry:ve,LatheGeometry:Oa,LatheBufferGeometry:Ga,ShapeGeometry:Ha,ShapeBufferGeometry:Va,ExtrudeGeometry:Pa,ExtrudeBufferGeometry:Ca,EdgesGeometry:Wa,ConeGeometry:Xa,ConeBufferGeometry:Ya,CylinderGeometry:ja,CylinderBufferGeometry:qa,CircleGeometry:Za,CircleBufferGeometry:Ja,BoxGeometry:jl,BoxBufferGeometry:ql});Qa.prototype=Object.create(H.prototype),Qa.prototype.constructor=Qa,Qa.prototype.isShadowMaterial=!0,Qa.prototype.copy=function(e){return H.prototype.copy.call(this,e),this.color.copy(e.color),this},Ka.prototype=Object.create(le.prototype),Ka.prototype.constructor=Ka,Ka.prototype.isRawShaderMaterial=!0,$a.prototype=Object.create(H.prototype),$a.prototype.constructor=$a,$a.prototype.isMeshStandardMaterial=!0,$a.prototype.copy=function(e){return H.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.vertexTangents=e.vertexTangents,this},ei.prototype=Object.create($a.prototype),ei.prototype.constructor=ei,ei.prototype.isMeshPhysicalMaterial=!0,ei.prototype.copy=function(e){return $a.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,this.sheen=e.sheen?(this.sheen||new U).copy(e.sheen):null,this.transparency=e.transparency,this},ti.prototype=Object.create(H.prototype),ti.prototype.constructor=ti,ti.prototype.isMeshPhongMaterial=!0,ti.prototype.copy=function(e){return H.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},ri.prototype=Object.create(H.prototype),ri.prototype.constructor=ri,ri.prototype.isMeshToonMaterial=!0,ri.prototype.copy=function(e){return H.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},ai.prototype=Object.create(H.prototype),ai.prototype.constructor=ai,ai.prototype.isMeshNormalMaterial=!0,ai.prototype.copy=function(e){return H.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},ii.prototype=Object.create(H.prototype),ii.prototype.constructor=ii,ii.prototype.isMeshLambertMaterial=!0,ii.prototype.copy=function(e){return H.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},ni.prototype=Object.create(H.prototype),ni.prototype.constructor=ni,ni.prototype.isMeshMatcapMaterial=!0,ni.prototype.copy=function(e){return H.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},oi.prototype=Object.create(Tr.prototype),oi.prototype.constructor=oi,oi.prototype.isLineDashedMaterial=!0,oi.prototype.copy=function(e){return Tr.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var Qd=/*#__PURE__*/Object.freeze({__proto__:null,ShadowMaterial:Qa,SpriteMaterial:hr,RawShaderMaterial:Ka,ShaderMaterial:le,PointsMaterial:Ar,MeshPhysicalMaterial:ei,MeshStandardMaterial:$a,MeshPhongMaterial:ti,MeshToonMaterial:ri,MeshNormalMaterial:ai,MeshLambertMaterial:ii,MeshDepthMaterial:rr,MeshDistanceMaterial:ar,MeshBasicMaterial:V,MeshMatcapMaterial:ni,LineDashedMaterial:oi,LineBasicMaterial:Tr,Material:H}),Kd={// same as Array.prototype.slice, but also works on typed arrays
arraySlice:function arraySlice(e,t,r){return Kd.isTypedArray(e)?new e.constructor(e.subarray(t,void 0===r?e.length:r)):e.slice(t,r)},// converts an array to a specific type
convertArray:function convertArray(e,t,r){return e&&(// let 'undefined' and 'null' pass
r||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e;// create Array
},isTypedArray:function isTypedArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},// returns an array by which times and values can be sorted
getKeyframeOrder:function getKeyframeOrder(e){function t(t,r){return e[t]-e[r]}for(var r=e.length,a=Array(r),n=0;n!==r;++n)a[n]=n;return a.sort(t),a},// uses the array previously returned by 'getKeyframeOrder' to sort data
sortedArray:function sortedArray(e,t,r){for(var a=e.length,n=new e.constructor(a),o=0,s=0,l;s!==a;++o){l=r[o]*t;for(var d=0;d!==t;++d)n[s++]=e[l+d]}return n},// function for parsing AOS keyframe formats
flattenJSON:function flattenJSON(e,t,r,a){for(var n=1,o=e[0];o!==void 0&&o[a]===void 0;)o=e[n++];if(void 0!==o){// no data
var s=o[a];if(void 0!==s)// no data
if(Array.isArray(s))do s=o[a],void 0!==s&&(t.push(o.time),r.push.apply(r,s)),o=e[n++];while(void 0!==o);else if(void 0!==s.toArray)// ...assume THREE.Math-ish
do s=o[a],void 0!==s&&(t.push(o.time),s.toArray(r,r.length)),o=e[n++];while(void 0!==o);else// otherwise push as-is
do s=o[a],void 0!==s&&(t.push(o.time),r.push(s)),o=e[n++];while(void 0!==o)}},subclip:function subclip(e,t,r,a,n){n=n||30;var o=e.clone();o.name=t;for(var s=[],l=0;l<o.tracks.length;++l){for(var d=o.tracks[l],p=d.getValueSize(),c=[],u=[],m=0,g;m<d.times.length;++m)if(g=d.times[m]*n,!(g<r||g>=a)){c.push(d.times[m]);for(var f=0;f<p;++f)u.push(d.values[m*p+f])}0===c.length||(d.times=Kd.convertArray(c,d.times.constructor),d.values=Kd.convertArray(u,d.values.constructor),s.push(d))}o.tracks=s;for(var h=1/0,l=0;l<o.tracks.length;++l)h>o.tracks[l].times[0]&&(h=o.tracks[l].times[0]);// shift all tracks such that clip begins at t=0
for(var l=0;l<o.tracks.length;++l)o.tracks[l].shift(-1*h);return o.resetDuration(),o}};/**
   * @author tschw
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   */Object.assign(si.prototype,{evaluate:function evaluate(e){var t=this.parameterPositions,r=this._cachedIndex,a=t[r],i=t[r-1];validate_interval:{seek:{var n;linear_scan:{//- See http://jsperf.com/comparison-to-undefined/3
//- slower code:
//-
//- 				if ( t >= t1 || t1 === undefined ) {
forward_scan:if(!(e<a)){for(var o=r+2;;){if(void 0===a){if(e<i)break forward_scan;// after end
return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,e,i)}if(r===o)break;// this loop
if(i=a,a=t[++r],e<a)// we have arrived at the sought interval
break seek}// prepare binary search on the right side of the index
n=t.length;break linear_scan}//- slower code:
//-					if ( t < t0 || t0 === undefined ) {
if(!(e>=i)){// looping?
var s=t[1];e<s&&(r=2,i=s);// linear reverse scan
for(var o=r-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,a);if(r===o)break;// this loop
if(a=i,i=t[--r-1],e>=i)// we have arrived at the sought interval
break seek}// prepare binary search on the left side of the index
n=r,r=0;break linear_scan}// the interval is valid
break validate_interval}// linear scan
// binary search
for(;r<n;){var l=r+n>>>1;e<t[l]?n=l:r=l+1}// check boundary cases, again
if(a=t[r],i=t[r-1],void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,a);if(void 0===a)return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,i,e)}// seek
this._cachedIndex=r,this.intervalChanged_(r,i,a)}// validate_interval
return this.interpolate_(r,i,e,a)},settings:null,// optional, subclass-specific settings structure
// Note: The indirection allows central control of many interpolants.
// --- Protected interface
DefaultSettings_:{},getSettings_:function getSettings_(){return this.settings||this.DefaultSettings_},copySampleValue_:function copySampleValue_(e){// copies a sample value to the result buffer
for(var t=this.resultBuffer,r=this.sampleValues,a=this.valueSize,n=0;n!==a;++n)t[n]=r[e*a+n];return t},// Template methods for derived classes:
interpolate_:function interpolate_()/* i1, t0, t, t1 */{throw new Error("call to abstract method");// implementations shall return this.resultBuffer
},intervalChanged_:function intervalChanged_()/* i1, t0, t1 */{// empty
}}),Object.assign(si.prototype,{//( 0, t, t0 ), returns this.resultBuffer
beforeStart_:si.prototype.copySampleValue_,//( N-1, tN-1, t ), returns this.resultBuffer
afterEnd_:si.prototype.copySampleValue_}),li.prototype=Object.assign(Object.create(si.prototype),{constructor:li,DefaultSettings_:{endingStart:Qo,endingEnd:Qo},intervalChanged_:function intervalChanged_(e,t,r){var a=this.parameterPositions,i=e-2,n=e+1,o=a[i],s=a[n];if(o===void 0)switch(this.getSettings_().endingStart){case Ko:i=e,o=2*t-r;break;case $o:i=a.length-2,o=t+a[i]-a[i+1];break;default:i=e,o=r;}if(void 0===s)switch(this.getSettings_().endingEnd){case Ko:n=e,s=2*r-t;break;case $o:n=1,s=r+a[1]-a[0];break;default:n=e-1,s=t;}var l=.5*(r-t),d=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(s-r),this._offsetPrev=i*d,this._offsetNext=n*d},interpolate_:function interpolate_(e,r,a,t){// combine data linearly
for(var n=this.resultBuffer,o=this.sampleValues,s=this.valueSize,l=e*s,d=this._offsetPrev,c=this._offsetNext,u=this._weightPrev,m=this._weightNext,g=(a-r)/(t-r),p=g*g,f=p*g,h=0;h!==s;++h)n[h]=(-u*f+2*u*p-u*g)*o[d+h]+((1+u)*f+(-1.5-2*u)*p+(-.5+u)*g+1)*o[l-s+h]+((-1-m)*f+(1.5+m)*p+.5*g)*o[l+h]+(m*f-m*p)*o[c+h];return n}}),di.prototype=Object.assign(Object.create(si.prototype),{constructor:di,interpolate_:function interpolate_(e,r,a,t){for(var n=this.resultBuffer,o=this.sampleValues,s=this.valueSize,l=e*s,d=(a-r)/(t-r),p=0;p!==s;++p)n[p]=o[l-s+p]*(1-d)+o[l+p]*d;return n}}),pi.prototype=Object.assign(Object.create(si.prototype),{constructor:pi,interpolate_:function interpolate_(e/*, t0, t, t1 */){return this.copySampleValue_(e-1)}}),Object.assign(ci,{// Serialization (in static context, because of constructor invocation
// and automatic invocation of .toJSON):
toJSON:function(e){var t=e.constructor,r;// derived classes can define a static toJSON method
if(void 0!==t.toJSON)r=t.toJSON(e);else{r={name:e.name,times:Kd.convertArray(e.times,Array),values:Kd.convertArray(e.values,Array)};var a=e.getInterpolation();a!==e.DefaultInterpolation&&(r.interpolation=a)}// mandatory
return r.type=e.ValueTypeName,r}}),Object.assign(ci.prototype,{constructor:ci,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:Zo,InterpolantFactoryMethodDiscrete:function InterpolantFactoryMethodDiscrete(e){return new pi(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function InterpolantFactoryMethodLinear(e){return new di(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function InterpolantFactoryMethodSmooth(e){return new li(this.times,this.values,this.getValueSize(),e)},setInterpolation:function setInterpolation(e){var t;if(e===Yo?t=this.InterpolantFactoryMethodDiscrete:e===Zo?t=this.InterpolantFactoryMethodLinear:e===Jo?t=this.InterpolantFactoryMethodSmooth:void 0,void 0===t){var r="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant)// fall back to default, unless the default itself is messed up
if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(r);// fatal, in this case
return console.warn("THREE.KeyframeTrack:",r),this}return this.createInterpolant=t,this},getInterpolation:function getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Yo;case this.InterpolantFactoryMethodLinear:return Zo;case this.InterpolantFactoryMethodSmooth:return Jo;}},getValueSize:function getValueSize(){return this.values.length/this.times.length},// move all keyframes either forwards or backwards in time
shift:function shift(e){if(0!==e)for(var t=this.times,r=0,a=t.length;r!==a;++r)t[r]+=e;return this},// scale all keyframe times by a factor (useful for frame <-> seconds conversions)
scale:function scale(e){if(1!==e)for(var t=this.times,r=0,a=t.length;r!==a;++r)t[r]*=e;return this},// removes keyframes before and after animation without changing any values within the range [startTime, endTime].
// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values
trim:function trim(e,t){for(var r=this.times,a=r.length,i=0,n=a-1;i!==a&&r[i]<e;)++i;for(;-1!==n&&r[n]>t;)--n;// inclusive -> exclusive bound
if(++n,0!==i||n!==a){i>=n&&(n=No(n,1),i=n-1);var o=this.getValueSize();this.times=Kd.arraySlice(r,i,n),this.values=Kd.arraySlice(this.values,i*o,n*o)}return this},// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable
validate:function validate(){var e=!0,t=this.getValueSize();0!=t-Po(t)&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);var r=this.times,a=this.values,o=r.length;0===o&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);for(var s=null,l=0,d;l!==o;l++){if(d=r[l],"number"==typeof d&&isNaN(d)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,l,d),e=!1;break}if(null!==s&&s>d){console.error("THREE.KeyframeTrack: Out of order keys.",this,l,d,s),e=!1;break}s=d}if(a!==void 0&&Kd.isTypedArray(a))for(var l=0,p=a.length,n;l!==p;++l)if(n=a[l],isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,n),e=!1;break}return e},// removes equivalent sequential keys as common in morph target sequences
// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)
optimize:function optimize(){// times or values may be shared with other tracks, so overwriting is unsafe
for(var e=Kd.arraySlice(this.times),t=Kd.arraySlice(this.values),r=this.getValueSize(),a=this.getInterpolation()===Jo,n=1,o=e.length-1,s=1;s<o;++s){var l=!1,d=e[s],p=e[s+1];// remove adjacent keyframes scheduled at the same time
if(d!==p&&(1!==s||d!==d[0]))if(!a){// remove unnecessary keyframes same as their neighbors
for(var c=s*r,u=0,m;u!==r;++u)if(m=t[c+u],m!==t[c-r+u]||m!==t[c+r+u]){l=!0;break}}else l=!0;// in-place compaction
if(l){if(s!==n){e[n]=e[s];for(var g=s*r,f=n*r,u=0;u!==r;++u)t[f+u]=t[g+u]}++n}}// flush last keyframe (compaction looks ahead)
if(0<o){e[n]=e[o];for(var g=o*r,f=n*r,u=0;u!==r;++u)t[f+u]=t[g+u];++n}return n===e.length?(this.times=e,this.values=t):(this.times=Kd.arraySlice(e,0,n),this.values=Kd.arraySlice(t,0,n*r)),this},clone:function clone(){var e=Kd.arraySlice(this.times,0),t=Kd.arraySlice(this.values,0),r=this.constructor,a=new r(this.name,e,t);return a.createInterpolant=this.createInterpolant,a}}),ui.prototype=Object.assign(Object.create(ci.prototype),{constructor:ui,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:Yo,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0// Note: Actually this track could have a optimized / compressed
// representation of a single value and a custom interpolant that
// computes "firstValue ^ isOdd( index )".
}),mi.prototype=Object.assign(Object.create(ci.prototype),{constructor:mi,ValueTypeName:"color"// ValueBufferType is inherited
// DefaultInterpolation is inherited
// Note: Very basic implementation and nothing special yet.
// However, this is the place for color space parameterization.
}),gi.prototype=Object.assign(Object.create(ci.prototype),{constructor:gi,ValueTypeName:"number"// ValueBufferType is inherited
// DefaultInterpolation is inherited
}),fi.prototype=Object.assign(Object.create(si.prototype),{constructor:fi,interpolate_:function interpolate_(e,r,a,t){for(var i=this.resultBuffer,n=this.sampleValues,o=this.valueSize,s=e*o,l=s+o;s!==l;s+=4)M.slerpFlat(i,0,n,s-o,n,s,(a-r)/(t-r));return i}}),hi.prototype=Object.assign(Object.create(ci.prototype),{constructor:hi,ValueTypeName:"quaternion",// ValueBufferType is inherited
DefaultInterpolation:Zo,InterpolantFactoryMethodLinear:function InterpolantFactoryMethodLinear(e){return new fi(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0// not yet implemented
}),yi.prototype=Object.assign(Object.create(ci.prototype),{constructor:yi,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:Yo,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),vi.prototype=Object.assign(Object.create(ci.prototype),{constructor:vi,ValueTypeName:"vector"// ValueBufferType is inherited
// DefaultInterpolation is inherited
}),Object.assign(xi,{parse:function parse(e){for(var t=[],r=e.tracks,a=1/(e.fps||1),o=0,s=r.length;o!==s;++o)t.push(bi(r[o]).scale(a));return new xi(e.name,e.duration,t)},toJSON:function(e){for(var t=[],r=e.tracks,a={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid},o=0,s=r.length;o!==s;++o)t.push(ci.toJSON(r[o]));return a},CreateFromMorphTargetSequence:function CreateFromMorphTargetSequence(e,t,r,a){for(var n=t.length,o=[],s=0;s<n;s++){var l=[],d=[];l.push((s+n-1)%n,s,(s+1)%n),d.push(0,1,0);var p=Kd.getKeyframeOrder(l);l=Kd.sortedArray(l,1,p),d=Kd.sortedArray(d,1,p),a||0!==l[0]||(l.push(n),d.push(d[0])),o.push(new gi(".morphTargetInfluences["+t[s].name+"]",l,d).scale(1/r))}return new xi(e,-1,o)},findByName:function findByName(e,t){var r=e;if(!Array.isArray(e)){var a=e;r=a.geometry&&a.geometry.animations||a.animations}for(var n=0;n<r.length;n++)if(r[n].name===t)return r[n];return null},CreateClipsFromMorphTargetSequences:function CreateClipsFromMorphTargetSequences(e,t,r){// sort morph target names into animation groups based
// patterns like Walk_001, Walk_002, Run_001, Run_002
for(var a={},n=0,o=e.length;n<o;n++){var s=e[n],l=s.name.match(/^([\w-]*?)([\d]+)$/);if(l&&1<l.length){var d=l[1],p=a[d];p||(a[d]=p=[]),p.push(s)}}var c=[];for(var d in a)c.push(xi.CreateFromMorphTargetSequence(d,a[d],t,r));return c},// parse the animation.hierarchy format
parseAnimation:function parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var r=function(e,t,r,a,i){// only return track if there are actually keys.
if(0!==r.length){var n=[],o=[];Kd.flattenJSON(r,n,o,a),0!==n.length&&i.push(new e(t,n,o))}},a=[],i=e.name||"default",n=e.length||-1,o=e.fps||30,s=e.hierarchy||[],l=0,d;l<s.length;l++)// skip empty tracks
if(d=s[l].keys,d&&0!==d.length)// process morph targets
if(d[0].morphTargets){// figure out all morph targets used in this track
for(var p={},c=0;c<d.length;c++)if(d[c].morphTargets)for(var u=0;u<d[c].morphTargets.length;u++)p[d[c].morphTargets[u]]=-1;// create a track for each morph target with all zero
// morphTargetInfluences except for the keys in which
// the morphTarget is named.
for(var g in p){for(var f=[],y=[],u=0,v;u!==d[c].morphTargets.length;++u)v=d[c],f.push(v.time),y.push(v.morphTarget===g?1:0);a.push(new gi(".morphTargetInfluence["+g+"]",f,y))}n=p.length*(o||1)}else{// ...assume skeletal animation
var x=".bones["+t[l].name+"]";r(vi,x+".position",d,"pos",a),r(hi,x+".quaternion",d,"rot",a),r(vi,x+".scale",d,"scl",a)}if(0===a.length)return null;var _=new xi(i,n,a);return _}}),Object.assign(xi.prototype,{resetDuration:function resetDuration(){for(var e=this.tracks,t=0,r=0,a=e.length,n;r!==a;++r)n=this.tracks[r],t=No(t,n.times[n.times.length-1]);return this.duration=t,this},trim:function trim(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function validate(){for(var e=!0,t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function optimize(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function clone(){for(var e=[],t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new xi(this.name,this.duration,e)}});/**
   * @author mrdoob / http://mrdoob.com/
   */var $d={enabled:!1,files:{},add:function add(e,t){!1===this.enabled||(// console.log( 'THREE.Cache', 'Adding key:', key );
this.files[e]=t)},get:function get(e){return!1===this.enabled?void 0:this.files[e];// console.log( 'THREE.Cache', 'Checking key:', key );
},remove:function remove(e){delete this.files[e]},clear:function clear(){this.files={}}},ep=new Mi;Object.assign(Si.prototype,{load:function load()/* url, onLoad, onProgress, onError */{},parse:function parse()/* data */{},setCrossOrigin:function setCrossOrigin(e){return this.crossOrigin=e,this},setPath:function setPath(e){return this.path=e,this},setResourcePath:function setResourcePath(e){return this.resourcePath=e,this}});/**
   * @author mrdoob / http://mrdoob.com/
   */var tp={};Ti.prototype=Object.assign(Object.create(Si.prototype),{constructor:Ti,load:function load(e,t,r,a){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var n=this,o=$d.get(e);if(void 0!==o)return n.manager.itemStart(e),setTimeout(function(){t&&t(o),n.manager.itemEnd(e)},0),o;// Check if request is duplicate
if(void 0!==tp[e])return void tp[e].push({onLoad:t,onProgress:r,onError:a});// Check for data: URI
var s=e.match(/^data:(.*?)(;base64)?,(.*)$/);// Safari can not handle Data URIs through XMLHttpRequest so process manually
if(s){var l=s[1],d=!!s[2],p=s[3];p=decodeURIComponent(p),d&&(p=atob(p));try{var c=(this.responseType||"").toLowerCase(),u;switch(c){case"arraybuffer":case"blob":for(var m=new Uint8Array(p.length),g=0;g<p.length;g++)m[g]=p.charCodeAt(g);u="blob"===c?new Blob([m.buffer],{type:l}):m.buffer;break;case"document":var f=new DOMParser;u=f.parseFromString(p,l);break;case"json":u=JSON.parse(p);break;default:u=p;}// Wait for next browser tick like standard XMLHttpRequest event dispatching does
setTimeout(function(){t&&t(u),n.manager.itemEnd(e)},0)}catch(t){setTimeout(function(){a&&a(t),n.manager.itemError(e),n.manager.itemEnd(e)},0)}}else{tp[e]=[],tp[e].push({onLoad:t,onProgress:r,onError:a});var h=new XMLHttpRequest;for(var y in h.open("GET",e,!0),h.addEventListener("load",function(t){var r=this.response,a=tp[e];if(delete tp[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),$d.add(e,r);for(var o=0,s=a.length,l;o<s;o++)l=a[o],l.onLoad&&l.onLoad(r);n.manager.itemEnd(e)}else{for(var o=0,s=a.length,l;o<s;o++)l=a[o],l.onError&&l.onError(t);n.manager.itemError(e),n.manager.itemEnd(e)}},!1),h.addEventListener("progress",function(t){for(var r=tp[e],a=0,n=r.length,o;a<n;a++)o=r[a],o.onProgress&&o.onProgress(t)},!1),h.addEventListener("error",function(t){var r=tp[e];delete tp[e];for(var a=0,o=r.length,s;a<o;a++)s=r[a],s.onError&&s.onError(t);n.manager.itemError(e),n.manager.itemEnd(e)},!1),h.addEventListener("abort",function(t){var r=tp[e];delete tp[e];for(var a=0,o=r.length,s;a<o;a++)s=r[a],s.onError&&s.onError(t);n.manager.itemError(e),n.manager.itemEnd(e)},!1),void 0!==this.responseType&&(h.responseType=this.responseType),void 0!==this.withCredentials&&(h.withCredentials=this.withCredentials),h.overrideMimeType&&h.overrideMimeType(void 0===this.mimeType?"text/plain":this.mimeType),this.requestHeader)h.setRequestHeader(y,this.requestHeader[y]);h.send(null)}return n.manager.itemStart(e),h},setResponseType:function setResponseType(e){return this.responseType=e,this},setWithCredentials:function setWithCredentials(e){return this.withCredentials=e,this},setMimeType:function setMimeType(e){return this.mimeType=e,this},setRequestHeader:function setRequestHeader(e){return this.requestHeader=e,this}}),Ei.prototype=Object.assign(Object.create(Si.prototype),{constructor:Ei,load:function load(e,t,r,a){var i=this,n=new Ti(i.manager);n.setPath(i.path),n.load(e,function(e){t(i.parse(JSON.parse(e)))},r,a)},parse:function parse(e){for(var t=[],r=0,a;r<e.length;r++)a=xi.parse(e[r]),t.push(a);return t}}),wi.prototype=Object.assign(Object.create(Si.prototype),{constructor:wi,load:function load(e,t,r,a){function n(n){d.load(e[n],function(e){var r=o.parse(e,!0);s[n]={width:r.width,height:r.height,format:r.format,mipmaps:r.mipmaps},p+=1,6===p&&(1===r.mipmapCount&&(l.minFilter=jo),l.format=r.format,l.needsUpdate=!0,t&&t(l))},r,a)}var o=this,s=[],l=new Dr;l.image=s;var d=new Ti(this.manager);if(d.setPath(this.path),d.setResponseType("arraybuffer"),Array.isArray(e))for(var p=0,c=0,u=e.length;c<u;++c)n(c);else// compressed cubemap texture stored in a single DDS file
d.load(e,function(e){var r=o.parse(e,!0);if(r.isCubemap)for(var a=r.mipmaps.length/r.mipmapCount,n=0;n<a;n++){s[n]={mipmaps:[]};for(var d=0;d<r.mipmapCount;d++)s[n].mipmaps.push(r.mipmaps[n*r.mipmapCount+d]),s[n].format=r.format,s[n].width=r.width,s[n].height=r.height}else l.image.width=r.width,l.image.height=r.height,l.mipmaps=r.mipmaps;1===r.mipmapCount&&(l.minFilter=jo),l.format=r.format,l.needsUpdate=!0,t&&t(l)},r,a);return l}}),Li.prototype=Object.assign(Object.create(Si.prototype),{constructor:Li,load:function load(e,t,r,a){var i=this,n=new me,o=new Ti(this.manager);return o.setResponseType("arraybuffer"),o.setPath(this.path),o.load(e,function(e){var r=i.parse(e);r&&(void 0===r.image?void 0!==r.data&&(n.image.width=r.width,n.image.height=r.height,n.image.data=r.data):n.image=r.image,n.wrapS=void 0===r.wrapS?ko:r.wrapS,n.wrapT=void 0===r.wrapT?ko:r.wrapT,n.magFilter=void 0===r.magFilter?jo:r.magFilter,n.minFilter=void 0===r.minFilter?jo:r.minFilter,n.anisotropy=void 0===r.anisotropy?1:r.anisotropy,void 0!==r.format&&(n.format=r.format),void 0!==r.type&&(n.type=r.type),void 0!==r.mipmaps&&(n.mipmaps=r.mipmaps,n.minFilter=qo),1===r.mipmapCount&&(n.minFilter=jo),n.needsUpdate=!0,t&&t(n,r))},r,a),n}}),Ai.prototype=Object.assign(Object.create(Si.prototype),{constructor:Ai,load:function load(e,t,r,a){function i(){l.removeEventListener("load",i,!1),l.removeEventListener("error",n,!1),$d.add(e,this),t&&t(this),o.manager.itemEnd(e)}function n(t){l.removeEventListener("load",i,!1),l.removeEventListener("error",n,!1),a&&a(t),o.manager.itemError(e),o.manager.itemEnd(e)}void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var o=this,s=$d.get(e);if(void 0!==s)return o.manager.itemStart(e),setTimeout(function(){t&&t(s),o.manager.itemEnd(e)},0),s;var l=document.createElementNS("http://www.w3.org/1999/xhtml","img");return l.addEventListener("load",i,!1),l.addEventListener("error",n,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(l.crossOrigin=this.crossOrigin),o.manager.itemStart(e),l.src=e,l}}),Ri.prototype=Object.assign(Object.create(Si.prototype),{constructor:Ri,load:function load(e,t,r,a){function n(r){s.load(e[r],function(e){o.images[r]=e,l++,6===l&&(o.needsUpdate=!0,t&&t(o))},void 0,a)}var o=new Pe,s=new Ai(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);for(var l=0,d=0;d<e.length;++d)n(d);return o}}),Pi.prototype=Object.assign(Object.create(Si.prototype),{constructor:Pi,load:function load(e,t,r,a){var i=new v,n=new Ai(this.manager);return n.setCrossOrigin(this.crossOrigin),n.setPath(this.path),n.load(e,function(r){i.image=r;// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.
var a=0<e.search(/\.jpe?g($|\?)/i)||0===e.search(/^data\:image\/jpeg/);i.format=a?Xo:1023,i.needsUpdate=!0,void 0!==t&&t(i)},r,a),i}}),Object.assign(Ci.prototype,{// Virtual base class method to overwrite and implement in subclasses
//	- t [0 .. 1]
getPoint:function getPoint()/* t, optionalTarget */{return console.warn("THREE.Curve: .getPoint() not implemented."),null},// Get point at relative position in curve according to arc length
// - u [0 .. 1]
getPointAt:function getPointAt(e,r){var a=this.getUtoTmapping(e);return this.getPoint(a,r)},// Get sequence of points using getPoint( t )
getPoints:function getPoints(e){e===void 0&&(e=5);for(var t=[],r=0;r<=e;r++)t.push(this.getPoint(r/e));return t},// Get sequence of points using getPointAt( u )
getSpacedPoints:function getSpacedPoints(e){e===void 0&&(e=5);for(var t=[],r=0;r<=e;r++)t.push(this.getPointAt(r/e));return t},// Get total curve arc length
getLength:function getLength(){var e=this.getLengths();return e[e.length-1]},// Get list of cumulative segment lengths
getLengths:function getLengths(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t=[],r=this.getPoint(0),a=0,i,n;for(t.push(0),n=1;n<=e;n++)i=this.getPoint(n/e),a+=i.distanceTo(r),t.push(a),r=i;return this.cacheArcLengths=t,t;// { sums: cache, sum: sum }; Sum is in the last element.
},updateArcLengths:function updateArcLengths(){this.needsUpdate=!0,this.getLengths()},// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant
getUtoTmapping:function getUtoTmapping(e,r){var a=this.getLengths(),n=0,o=a.length,s;s=r?r:e*a[o-1];for(// binary search for the index with largest value smaller than target u distance
var l=0,d=o-1,p;l<=d;)if(n=Po(l+(d-l)/2),p=a[n]-s,0>p)l=n+1;else if(0<p)d=n-1;else{d=n;break;// DONE
}if(n=d,a[n]===s)return n/(o-1);// we could get finer grain at lengths, or use simple interpolation between two points
var c=a[n],u=a[n+1],m=(s-c)/(u-c),g=(n+m)/(o-1);return g},// Returns a unit vector tangent at t
// In case any sub curve does not implement its tangent derivation,
// 2 points a small delta apart will be used to find its gradient
// which seems to give a reasonable approximation
getTangent:function getTangent(e){var t=1e-4,r=e-t,a=e+t;0>r&&(r=0),1<a&&(a=1);var i=this.getPoint(r),n=this.getPoint(a),o=n.clone().sub(i);return o.normalize()},getTangentAt:function getTangentAt(e){var r=this.getUtoTmapping(e);return this.getTangent(r)},computeFrenetFrames:function computeFrenetFrames(e,t){// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf
var r=new S,a=[],n=[],o=[],s=new S,l=new T,d,p,c;// compute the tangent vectors for each segment on the curve
for(d=0;d<=e;d++)p=d/e,a[d]=this.getTangentAt(p),a[d].normalize();// select an initial normal vector perpendicular to the first tangent vector,
// and in the direction of the minimum tangent xyz component
n[0]=new S,o[0]=new S;var m=Number.MAX_VALUE,g=zo(a[0].x),f=zo(a[0].y),h=zo(a[0].z);// compute the slowly-varying normal and binormal vectors for each segment on the curve
for(g<=m&&(m=g,r.set(1,0,0)),f<=m&&(m=f,r.set(0,1,0)),h<=m&&r.set(0,0,1),s.crossVectors(a[0],r).normalize(),n[0].crossVectors(a[0],s),o[0].crossVectors(a[0],n[0]),d=1;d<=e;d++)n[d]=n[d-1].clone(),o[d]=o[d-1].clone(),s.crossVectors(a[d-1],a[d]),s.length()>Mo&&(s.normalize(),c=vo(os.clamp(a[d-1].dot(a[d]),-1,1)),n[d].applyMatrix4(l.makeRotationAxis(s,c))),o[d].crossVectors(a[d],n[d]);// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same
if(!0===t)for(c=vo(os.clamp(n[0].dot(n[e]),-1,1)),c/=e,0<a[0].dot(s.crossVectors(n[0],n[e]))&&(c=-c),d=1;d<=e;d++)// twist a little...
n[d].applyMatrix4(l.makeRotationAxis(a[d],c*d)),o[d].crossVectors(a[d],n[d]);return{tangents:a,normals:n,binormals:o}},clone:function clone(){return new this.constructor().copy(this)},copy:function copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){var e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"},arcLengthDivisions:this.arcLengthDivisions,type:this.type};return e},fromJSON:function fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}),Di.prototype=Object.create(Ci.prototype),Di.prototype.constructor=Di,Di.prototype.isEllipseCurve=!0,Di.prototype.getPoint=function(e,t){// ensures that deltaAngle is 0 .. 2 PI
for(var r=t||new h,a=2*Eo,i=this.aEndAngle-this.aStartAngle,n=zo(i)<Mo;0>i;)i+=a;for(;i>a;)i-=a;i<Mo&&(n?i=0:i=a),!0!==this.aClockwise||n||(i===a?i=-a:i-=a);var o=this.aStartAngle+e*i,s=this.aX+this.xRadius*Ro(o),l=this.aY+this.yRadius*So(o);if(0!==this.aRotation){var d=Ro(this.aRotation),p=So(this.aRotation),c=s-this.aX,u=l-this.aY;// Rotate the point about the center of the ellipse.
s=c*d-u*p+this.aX,l=c*p+u*d+this.aY}return r.set(s,l)},Di.prototype.copy=function(e){return Ci.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},Di.prototype.toJSON=function(){var e=Ci.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e},Di.prototype.fromJSON=function(e){return Ci.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},Ii.prototype=Object.create(Di.prototype),Ii.prototype.constructor=Ii,Ii.prototype.isArcCurve=!0;var rp=new S,ap=new Ni,ip=new Ni,np=new Ni;zi.prototype=Object.create(Ci.prototype),zi.prototype.constructor=zi,zi.prototype.isCatmullRomCurve3=!0,zi.prototype.getPoint=function(e,t){var r=t||new S,a=this.points,i=a.length,n=(i-(this.closed?0:1))*e,o=Po(n),s=n-o;this.closed?o+=0<o?0:(Po(zo(o)/i)+1)*i:0===s&&o===i-1&&(o=i-2,s=1);var l,d,p,c;// 4 points
if(this.closed||0<o?l=a[(o-1)%i]:(rp.subVectors(a[0],a[1]).add(a[0]),l=rp),d=a[o%i],p=a[(o+1)%i],this.closed||o+2<i?c=a[(o+2)%i]:(rp.subVectors(a[i-1],a[i-2]).add(a[i-1]),c=rp),"centripetal"===this.curveType||"chordal"===this.curveType){// init Centripetal / Chordal Catmull-Rom
var u="chordal"===this.curveType?.5:.25,m=Do(l.distanceToSquared(d),u),g=Do(d.distanceToSquared(p),u),f=Do(p.distanceToSquared(c),u);1e-4>g&&(g=1),1e-4>m&&(m=g),1e-4>f&&(f=g),ap.initNonuniformCatmullRom(l.x,d.x,p.x,c.x,m,g,f),ip.initNonuniformCatmullRom(l.y,d.y,p.y,c.y,m,g,f),np.initNonuniformCatmullRom(l.z,d.z,p.z,c.z,m,g,f)}else"catmullrom"===this.curveType&&(ap.initCatmullRom(l.x,d.x,p.x,c.x,this.tension),ip.initCatmullRom(l.y,d.y,p.y,c.y,this.tension),np.initCatmullRom(l.z,d.z,p.z,c.z,this.tension));return r.set(ap.calc(s),ip.calc(s),np.calc(s)),r},zi.prototype.copy=function(e){Ci.prototype.copy.call(this,e),this.points=[];for(var t=0,r=e.points.length,a;t<r;t++)a=e.points[t],this.points.push(a.clone());return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},zi.prototype.toJSON=function(){var e=Ci.prototype.toJSON.call(this);e.points=[];for(var t=0,r=this.points.length,a;t<r;t++)a=this.points[t],e.points.push(a.toArray());return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e},zi.prototype.fromJSON=function(e){Ci.prototype.fromJSON.call(this,e),this.points=[];for(var t=0,r=e.points.length,a;t<r;t++)a=e.points[t],this.points.push(new S().fromArray(a));return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},qi.prototype=Object.create(Ci.prototype),qi.prototype.constructor=qi,qi.prototype.isCubicBezierCurve=!0,qi.prototype.getPoint=function(e,t){var r=t||new h,a=this.v0,i=this.v1,n=this.v2,o=this.v3;return r.set(ji(e,a.x,i.x,n.x,o.x),ji(e,a.y,i.y,n.y,o.y)),r},qi.prototype.copy=function(e){return Ci.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},qi.prototype.toJSON=function(){var e=Ci.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},qi.prototype.fromJSON=function(e){return Ci.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},Xi.prototype=Object.create(Ci.prototype),Xi.prototype.constructor=Xi,Xi.prototype.isCubicBezierCurve3=!0,Xi.prototype.getPoint=function(e,t){var r=t||new S,a=this.v0,i=this.v1,n=this.v2,o=this.v3;return r.set(ji(e,a.x,i.x,n.x,o.x),ji(e,a.y,i.y,n.y,o.y),ji(e,a.z,i.z,n.z,o.z)),r},Xi.prototype.copy=function(e){return Ci.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},Xi.prototype.toJSON=function(){var e=Ci.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},Xi.prototype.fromJSON=function(e){return Ci.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},Yi.prototype=Object.create(Ci.prototype),Yi.prototype.constructor=Yi,Yi.prototype.isLineCurve=!0,Yi.prototype.getPoint=function(e,t){var r=t||new h;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r},Yi.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},Yi.prototype.getTangent=function()/* t */{var e=this.v2.clone().sub(this.v1);return e.normalize()},Yi.prototype.copy=function(e){return Ci.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},Yi.prototype.toJSON=function(){var e=Ci.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},Yi.prototype.fromJSON=function(e){return Ci.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},Zi.prototype=Object.create(Ci.prototype),Zi.prototype.constructor=Zi,Zi.prototype.isLineCurve3=!0,Zi.prototype.getPoint=function(e,t){var r=t||new S;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r},Zi.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},Zi.prototype.copy=function(e){return Ci.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},Zi.prototype.toJSON=function(){var e=Ci.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},Zi.prototype.fromJSON=function(e){return Ci.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},Ji.prototype=Object.create(Ci.prototype),Ji.prototype.constructor=Ji,Ji.prototype.isQuadraticBezierCurve=!0,Ji.prototype.getPoint=function(e,t){var r=t||new h,a=this.v0,i=this.v1,n=this.v2;return r.set(Gi(e,a.x,i.x,n.x),Gi(e,a.y,i.y,n.y)),r},Ji.prototype.copy=function(e){return Ci.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},Ji.prototype.toJSON=function(){var e=Ci.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},Ji.prototype.fromJSON=function(e){return Ci.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},Qi.prototype=Object.create(Ci.prototype),Qi.prototype.constructor=Qi,Qi.prototype.isQuadraticBezierCurve3=!0,Qi.prototype.getPoint=function(e,t){var r=t||new S,a=this.v0,i=this.v1,n=this.v2;return r.set(Gi(e,a.x,i.x,n.x),Gi(e,a.y,i.y,n.y),Gi(e,a.z,i.z,n.z)),r},Qi.prototype.copy=function(e){return Ci.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},Qi.prototype.toJSON=function(){var e=Ci.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},Qi.prototype.fromJSON=function(e){return Ci.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},Ki.prototype=Object.create(Ci.prototype),Ki.prototype.constructor=Ki,Ki.prototype.isSplineCurve=!0,Ki.prototype.getPoint=function(e,t){var r=t||new h,a=this.points,i=(a.length-1)*e,n=Po(i),o=i-n,s=a[0===n?n:n-1],l=a[n],d=a[n>a.length-2?a.length-1:n+1],p=a[n>a.length-3?a.length-1:n+2];return r.set(Ui(o,s.x,l.x,d.x,p.x),Ui(o,s.y,l.y,d.y,p.y)),r},Ki.prototype.copy=function(e){Ci.prototype.copy.call(this,e),this.points=[];for(var t=0,r=e.points.length,a;t<r;t++)a=e.points[t],this.points.push(a.clone());return this},Ki.prototype.toJSON=function(){var e=Ci.prototype.toJSON.call(this);e.points=[];for(var t=0,r=this.points.length,a;t<r;t++)a=this.points[t],e.points.push(a.toArray());return e},Ki.prototype.fromJSON=function(e){Ci.prototype.fromJSON.call(this,e),this.points=[];for(var t=0,r=e.points.length,a;t<r;t++)a=e.points[t],this.points.push(new h().fromArray(a));return this};var op=/*#__PURE__*/Object.freeze({__proto__:null,ArcCurve:Ii,CatmullRomCurve3:zi,CubicBezierCurve:qi,CubicBezierCurve3:Xi,EllipseCurve:Di,LineCurve:Yi,LineCurve3:Zi,QuadraticBezierCurve:Ji,QuadraticBezierCurve3:Qi,SplineCurve:Ki});$i.prototype=Object.assign(Object.create(Ci.prototype),{constructor:$i,add:function add(e){this.curves.push(e)},closePath:function closePath(){// Add a line curve if start and end of lines are not connected
var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Yi(t,e))},// To get accurate point with reference to
// entire path distance at time t,
// following has to be done:
// 1. Length of each sub path have to be known
// 2. Locate and identify type of curve
// 3. Get t for the curve
// 4. Return curve.getPointAt(t')
getPoint:function getPoint(e){// To think about boundaries points.
for(var t=e*this.getLength(),r=this.getCurveLengths(),a=0;a<r.length;){if(r[a]>=t){var n=r[a]-t,o=this.curves[a],s=o.getLength(),l=0===s?0:1-n/s;return o.getPointAt(l)}a++}return null;// loop where sum != 0, sum > d , sum+1 <d
},// We cannot use the default THREE.Curve getPoint() with getLength() because in
// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath
// getPoint() depends on getLength
getLength:function getLength(){var e=this.getCurveLengths();return e[e.length-1]},// cacheLengths must be recalculated.
updateArcLengths:function updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},// Compute lengths and cache them
// We cannot overwrite getLengths() because UtoT mapping uses it.
getCurveLengths:function getCurveLengths(){// We use cache values if curves and cache array are same length
if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;// Get length of sub-curve
// Push sums into cached array
for(var e=[],t=0,r=0,a=this.curves.length;r<a;r++)t+=this.curves[r].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function getSpacedPoints(e){void 0===e&&(e=40);for(var t=[],r=0;r<=e;r++)t.push(this.getPoint(r/e));return this.autoClose&&t.push(t[0]),t},getPoints:function getPoints(e){e=e||12;for(var t=[],r=0,a=this.curves,n;r<a.length;r++)for(var o=a[r],s=o&&o.isEllipseCurve?2*e:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?e*o.points.length:e,l=o.getPoints(s),d=0,p;d<l.length;d++)p=l[d],n&&n.equals(p)||(t.push(p),n=p);return this.autoClose&&1<t.length&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},copy:function copy(e){Ci.prototype.copy.call(this,e),this.curves=[];for(var t=0,r=e.curves.length,a;t<r;t++)a=e.curves[t],this.curves.push(a.clone());return this.autoClose=e.autoClose,this},toJSON:function(){var e=Ci.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(var t=0,r=this.curves.length,a;t<r;t++)a=this.curves[t],e.curves.push(a.toJSON());return e},fromJSON:function fromJSON(e){Ci.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(var t=0,r=e.curves.length,a;t<r;t++)a=e.curves[t],this.curves.push(new op[a.type]().fromJSON(a));return this}}),en.prototype=Object.assign(Object.create($i.prototype),{constructor:en,setFromPoints:function setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function moveTo(e,t){// TODO consider referencing vectors instead of copying?
return this.currentPoint.set(e,t),this},lineTo:function lineTo(e,t){var r=new Yi(this.currentPoint.clone(),new h(e,t));return this.curves.push(r),this.currentPoint.set(e,t),this},quadraticCurveTo:function quadraticCurveTo(e,t,r,a){var i=new Ji(this.currentPoint.clone(),new h(e,t),new h(r,a));return this.curves.push(i),this.currentPoint.set(r,a),this},bezierCurveTo:function bezierCurveTo(e,t,r,a,i,n){var o=new qi(this.currentPoint.clone(),new h(e,t),new h(r,a),new h(i,n));return this.curves.push(o),this.currentPoint.set(i,n),this},splineThru:function splineThru(e/*Array of Vector*/){var t=[this.currentPoint.clone()].concat(e),r=new Ki(t);return this.curves.push(r),this.currentPoint.copy(e[e.length-1]),this},arc:function arc(e,t,r,a,i,n){var o=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(e+o,t+s,r,a,i,n),this},absarc:function absarc(e,t,r,a,i,n){return this.absellipse(e,t,r,r,a,i,n),this},ellipse:function ellipse(e,t,r,a,i,n,o,s){var l=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+l,t+d,r,a,i,n,o,s),this},absellipse:function absellipse(e,t,r,a,i,n,o,s){var l=new Di(e,t,r,a,i,n,o,s);if(0<this.curves.length){// if a previous curve is present, attempt to join
var d=l.getPoint(0);d.equals(this.currentPoint)||this.lineTo(d.x,d.y)}this.curves.push(l);var p=l.getPoint(1);return this.currentPoint.copy(p),this},copy:function copy(e){return $i.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){var e=$i.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function fromJSON(e){return $i.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}),tn.prototype=Object.assign(Object.create(en.prototype),{constructor:tn,getPointsHoles:function getPointsHoles(e){for(var t=[],r=0,a=this.holes.length;r<a;r++)t[r]=this.holes[r].getPoints(e);return t},// get points of shape and holes (keypoints based on segments parameter)
extractPoints:function extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function copy(e){en.prototype.copy.call(this,e),this.holes=[];for(var t=0,r=e.holes.length,a;t<r;t++)a=e.holes[t],this.holes.push(a.clone());return this},toJSON:function(){var e=en.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(var t=0,r=this.holes.length,a;t<r;t++)a=this.holes[t],e.holes.push(a.toJSON());return e},fromJSON:function fromJSON(e){en.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(var t=0,r=e.holes.length,a;t<r;t++)a=e.holes[t],this.holes.push(new en().fromJSON(a));return this}}),rn.prototype=Object.assign(Object.create(L.prototype),{constructor:rn,isLight:!0,copy:function copy(e){return L.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){var t=L.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}),an.prototype=Object.assign(Object.create(rn.prototype),{constructor:an,isHemisphereLight:!0,copy:function copy(e){return rn.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}),Object.assign(nn.prototype,{_projScreenMatrix:new T,_lightPositionWorld:new S,_lookTarget:new S,getViewportCount:function getViewportCount(){return this._viewportCount},getFrustum:function getFrustum(){return this._frustum},updateMatrices:function updateMatrices(e){var t=this.camera,r=this.matrix,a=this._projScreenMatrix,i=this._lookTarget,n=this._lightPositionWorld;n.setFromMatrixPosition(e.matrixWorld),t.position.copy(n),i.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(i),t.updateMatrixWorld(),a.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(a),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiply(t.projectionMatrix),r.multiply(t.matrixWorldInverse)},getViewport:function getViewport(e){return this._viewports[e]},getFrameExtents:function getFrameExtents(){return this._frameExtents},copy:function copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function clone(){return new this.constructor().copy(this)},toJSON:function(){var e={};return 0!==this.bias&&(e.bias=this.bias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}),on.prototype=Object.assign(Object.create(nn.prototype),{constructor:on,isSpotLightShadow:!0,updateMatrices:function updateMatrices(e){var t=this.camera,r=2*os.RAD2DEG*e.angle,a=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;(90!==t.fov||1!==t.aspect||i!==t.far)&&(t.fov=90,t.aspect=1,t.far=i,t.updateProjectionMatrix()),nn.prototype.updateMatrices.call(this,e)}}),sn.prototype=Object.assign(Object.create(rn.prototype),{constructor:sn,isSpotLight:!0,copy:function copy(e){return rn.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),ln.prototype=Object.assign(Object.create(nn.prototype),{constructor:ln,isPointLightShadow:!0,updateMatrices:function updateMatrices(e,t){t===void 0&&(t=0);var r=this.camera,a=this.matrix,i=this._lightPositionWorld,n=this._lookTarget,o=this._projScreenMatrix;i.setFromMatrixPosition(e.matrixWorld),r.position.copy(i),n.copy(r.position),n.add(this._cubeDirections[t]),r.up.copy(this._cubeUps[t]),r.lookAt(n),r.updateMatrixWorld(),a.makeTranslation(-i.x,-i.y,-i.z),o.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}}),dn.prototype=Object.assign(Object.create(rn.prototype),{constructor:dn,isPointLight:!0,copy:function copy(e){return rn.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}),pn.prototype=Object.assign(Object.create(de.prototype),{constructor:pn,isOrthographicCamera:!0,copy:function copy(e,t){return de.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function setViewOffset(e,t,r,a,i,n){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=a,this.view.width=i,this.view.height=n,this.updateProjectionMatrix()},clearViewOffset:function clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function updateProjectionMatrix(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,a=(this.top+this.bottom)/2,i=r-e,n=r+e,o=a+t,s=a-t;if(null!==this.view&&this.view.enabled){var l=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=l*this.view.offsetX,n=i+l*this.view.width,o-=d*this.view.offsetY,s=o-d*this.view.height}this.projectionMatrix.makeOrthographic(i,n,o,s,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){var t=L.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}),cn.prototype=Object.assign(Object.create(nn.prototype),{constructor:cn,isDirectionalLightShadow:!0,updateMatrices:function updateMatrices(e){nn.prototype.updateMatrices.call(this,e)}}),un.prototype=Object.assign(Object.create(rn.prototype),{constructor:un,isDirectionalLight:!0,copy:function copy(e){return rn.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),mn.prototype=Object.assign(Object.create(rn.prototype),{constructor:mn,isAmbientLight:!0}),gn.prototype=Object.assign(Object.create(rn.prototype),{constructor:gn,isRectAreaLight:!0,copy:function copy(e){return rn.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){var t=rn.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}}),fn.prototype=Object.assign(Object.create(Si.prototype),{constructor:fn,load:function load(e,t,r,a){var i=this,n=new Ti(i.manager);n.setPath(i.path),n.load(e,function(e){t(i.parse(JSON.parse(e)))},r,a)},parse:function parse(e){function t(e){return void 0===r[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),r[e]}var r=this.textures,a=new Qd[e.type];// Shader Material
if(void 0!==e.uuid&&(a.uuid=e.uuid),void 0!==e.name&&(a.name=e.name),void 0!==e.color&&a.color.setHex(e.color),void 0!==e.roughness&&(a.roughness=e.roughness),void 0!==e.metalness&&(a.metalness=e.metalness),void 0!==e.sheen&&(a.sheen=new U().setHex(e.sheen)),void 0!==e.emissive&&a.emissive.setHex(e.emissive),void 0!==e.specular&&a.specular.setHex(e.specular),void 0!==e.shininess&&(a.shininess=e.shininess),void 0!==e.clearcoat&&(a.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(a.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.fog&&(a.fog=e.fog),void 0!==e.flatShading&&(a.flatShading=e.flatShading),void 0!==e.blending&&(a.blending=e.blending),void 0!==e.combine&&(a.combine=e.combine),void 0!==e.side&&(a.side=e.side),void 0!==e.opacity&&(a.opacity=e.opacity),void 0!==e.transparent&&(a.transparent=e.transparent),void 0!==e.alphaTest&&(a.alphaTest=e.alphaTest),void 0!==e.depthTest&&(a.depthTest=e.depthTest),void 0!==e.depthWrite&&(a.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(a.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(a.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(a.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(a.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(a.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(a.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(a.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(a.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(a.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(a.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(a.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(a.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(a.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(a.rotation=e.rotation),1!==e.linewidth&&(a.linewidth=e.linewidth),void 0!==e.dashSize&&(a.dashSize=e.dashSize),void 0!==e.gapSize&&(a.gapSize=e.gapSize),void 0!==e.scale&&(a.scale=e.scale),void 0!==e.polygonOffset&&(a.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(a.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(a.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(a.skinning=e.skinning),void 0!==e.morphTargets&&(a.morphTargets=e.morphTargets),void 0!==e.morphNormals&&(a.morphNormals=e.morphNormals),void 0!==e.dithering&&(a.dithering=e.dithering),void 0!==e.vertexTangents&&(a.vertexTangents=e.vertexTangents),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.toneMapped&&(a.toneMapped=e.toneMapped),void 0!==e.userData&&(a.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?a.vertexColors=!!(0<e.vertexColors):a.vertexColors=e.vertexColors),void 0!==e.uniforms)for(var i in e.uniforms){var n=e.uniforms[i];switch(a.uniforms[i]={},n.type){case"t":a.uniforms[i].value=t(n.value);break;case"c":a.uniforms[i].value=new U().setHex(n.value);break;case"v2":a.uniforms[i].value=new h().fromArray(n.value);break;case"v3":a.uniforms[i].value=new S().fromArray(n.value);break;case"v4":a.uniforms[i].value=new x().fromArray(n.value);break;case"m3":a.uniforms[i].value=new y().fromArray(n.value);case"m4":a.uniforms[i].value=new T().fromArray(n.value);break;default:a.uniforms[i].value=n.value;}}if(void 0!==e.defines&&(a.defines=e.defines),void 0!==e.vertexShader&&(a.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(a.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(var o in e.extensions)a.extensions[o]=e.extensions[o];// Deprecated
if(void 0!==e.shading&&(a.flatShading=1===e.shading),void 0!==e.size&&(a.size=e.size),void 0!==e.sizeAttenuation&&(a.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(a.map=t(e.map)),void 0!==e.matcap&&(a.matcap=t(e.matcap)),void 0!==e.alphaMap&&(a.alphaMap=t(e.alphaMap)),void 0!==e.bumpMap&&(a.bumpMap=t(e.bumpMap)),void 0!==e.bumpScale&&(a.bumpScale=e.bumpScale),void 0!==e.normalMap&&(a.normalMap=t(e.normalMap)),void 0!==e.normalMapType&&(a.normalMapType=e.normalMapType),void 0!==e.normalScale){var s=e.normalScale;!1===Array.isArray(s)&&(s=[s,s]),a.normalScale=new h().fromArray(s)}return void 0!==e.displacementMap&&(a.displacementMap=t(e.displacementMap)),void 0!==e.displacementScale&&(a.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(a.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(a.roughnessMap=t(e.roughnessMap)),void 0!==e.metalnessMap&&(a.metalnessMap=t(e.metalnessMap)),void 0!==e.emissiveMap&&(a.emissiveMap=t(e.emissiveMap)),void 0!==e.emissiveIntensity&&(a.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(a.specularMap=t(e.specularMap)),void 0!==e.envMap&&(a.envMap=t(e.envMap)),void 0!==e.envMapIntensity&&(a.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(a.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(a.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(a.lightMap=t(e.lightMap)),void 0!==e.lightMapIntensity&&(a.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(a.aoMap=t(e.aoMap)),void 0!==e.aoMapIntensity&&(a.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(a.gradientMap=t(e.gradientMap)),void 0!==e.clearcoatMap&&(a.clearcoatMap=t(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(a.clearcoatRoughnessMap=t(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(a.clearcoatNormalMap=t(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(a.clearcoatNormalScale=new h().fromArray(e.clearcoatNormalScale)),a},setTextures:function setTextures(e){return this.textures=e,this}});/**
   * @author Don McCurdy / https://www.donmccurdy.com
   */var sp={decodeText:function decodeText(e){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(e);// Avoid the String.fromCharCode.apply(null, array) shortcut, which
// throws a "maximum call stack size exceeded" error for large arrays.
for(var t="",r=0,a=e.length;r<a;r++)// Implicitly assumes little-endian.
t+=String.fromCharCode(e[r]);try{// merges multi-byte utf-8 characters.
return decodeURIComponent(escape(t))}catch(r){// see #16358
return t}},extractUrlBase:function extractUrlBase(e){var t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}};hn.prototype=Object.assign(Object.create(te.prototype),{constructor:hn,isInstancedBufferGeometry:!0,copy:function copy(e){return te.prototype.copy.call(this,e),this.maxInstancedCount=e.maxInstancedCount,this},clone:function clone(){return new this.constructor().copy(this)},toJSON:function(){var e=te.prototype.toJSON.call(this);return e.maxInstancedCount=this.maxInstancedCount,e.isInstancedBufferGeometry=!0,e}}),yn.prototype=Object.assign(Object.create(k.prototype),{constructor:yn,isInstancedBufferAttribute:!0,copy:function copy(e){return k.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){var e=k.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}),vn.prototype=Object.assign(Object.create(Si.prototype),{constructor:vn,load:function load(e,t,r,a){var i=this,n=new Ti(i.manager);n.setPath(i.path),n.load(e,function(e){t(i.parse(JSON.parse(e)))},r,a)},parse:function parse(e){var t=e.isInstancedBufferGeometry?new hn:new te,r=e.data.index;if(void 0!==r){var a=new lp[r.type](r.array);t.setIndex(new k(a,1))}var o=e.data.attributes;for(var s in o){var l=o[s],a=new lp[l.type](l.array),d=l.isInstancedBufferAttribute?yn:k,p=new d(a,l.itemSize,l.normalized);void 0!==l.name&&(p.name=l.name),t.setAttribute(s,p)}var c=e.data.morphAttributes;if(c)for(var s in c){for(var u=c[s],m=[],g=0,f=u.length;g<f;g++){var l=u[g],a=new lp[l.type](l.array),p=new k(a,l.itemSize,l.normalized);void 0!==l.name&&(p.name=l.name),m.push(p)}t.morphAttributes[s]=m}var h=e.data.morphTargetsRelative;h&&(t.morphTargetsRelative=!0);var y=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==y)for(var g=0,v=y.length,n;g!==v;++g)n=y[g],t.addGroup(n.start,n.count,n.materialIndex);var x=e.data.boundingSphere;if(void 0!==x){var _=new S;void 0!==x.center&&_.fromArray(x.center),t.boundingSphere=new C(_,x.radius)}return e.name&&(t.name=e.name),e.userData&&(t.userData=e.userData),t}});var lp={Int8Array:Int8Array,Uint8Array:Uint8Array,// Workaround for IE11 pre KB2929437. See #11440
Uint8ClampedArray:"undefined"==typeof Uint8ClampedArray?Uint8Array:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};xn.prototype=Object.assign(Object.create(Si.prototype),{constructor:xn,load:function load(e,t,r,a){var i=this,n=""===this.path?sp.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;var o=new Ti(i.manager);o.setPath(this.path),o.load(e,function(r){var n=null;try{n=JSON.parse(r)}catch(t){return void 0!==a&&a(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}var o=n.metadata;return void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase()?void console.error("THREE.ObjectLoader: Can't load "+e):void i.parse(n,t)},r,a)},parse:function parse(e,t){var r=this.parseShape(e.shapes),a=this.parseGeometries(e.geometries,r),i=this.parseImages(e.images,function(){void 0!==t&&t(s)}),n=this.parseTextures(e.textures,i),o=this.parseMaterials(e.materials,n),s=this.parseObject(e.object,a,o);return e.animations&&(s.animations=this.parseAnimations(e.animations)),(void 0===e.images||0===e.images.length)&&void 0!==t&&t(s),s},parseShape:function parseShape(e){var t={};if(e!==void 0)for(var r=0,a=e.length,n;r<a;r++)n=new tn().fromJSON(e[r]),t[n.uuid]=n;return t},parseGeometries:function parseGeometries(e,t){var r={};if(e!==void 0)for(var a=new vn,n=0,o=e.length;n<o;n++){var s=e[n],l;switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":l=new Jd[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":l=new Jd[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":l=new Jd[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":l=new Jd[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":l=new Jd[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":l=new Jd[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":l=new Jd[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":l=new Jd[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":l=new Jd[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":l=new Jd[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"TubeGeometry":case"TubeBufferGeometry":l=new Jd[s.type](new op[s.path.type]().fromJSON(s.path),s.tubularSegments,s.radius,s.radialSegments,s.closed);break;case"LatheGeometry":case"LatheBufferGeometry":l=new Jd[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":l=new Jd[s.type](s.vertices,s.indices,s.radius,s.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":for(var d=[],p=0,c=s.shapes.length,u;p<c;p++)u=t[s.shapes[p]],d.push(u);l=new Jd[s.type](d,s.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":for(var d=[],p=0,c=s.shapes.length,u;p<c;p++)u=t[s.shapes[p]],d.push(u);var m=s.options.extrudePath;void 0!==m&&(s.options.extrudePath=new op[m.type]().fromJSON(m)),l=new Jd[s.type](d,s.options);break;case"BufferGeometry":case"InstancedBufferGeometry":l=a.parse(s);break;case"Geometry":console.error("THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.");break;default:console.warn("THREE.ObjectLoader: Unsupported geometry type \""+s.type+"\"");continue;}l.uuid=s.uuid,void 0!==s.name&&(l.name=s.name),!0===l.isBufferGeometry&&void 0!==s.userData&&(l.userData=s.userData),r[s.uuid]=l}return r},parseMaterials:function parseMaterials(e,t){var r={},a={};// MultiMaterial
if(e!==void 0){var n=new fn;n.setTextures(t);for(var o=0,s=e.length,l;o<s;o++)if(l=e[o],"MultiMaterial"===l.type){// Deprecated
for(var d=[],p=0,c;p<l.materials.length;p++)c=l.materials[p],void 0===r[c.uuid]&&(r[c.uuid]=n.parse(c)),d.push(r[c.uuid]);a[l.uuid]=d}else void 0===r[l.uuid]&&(r[l.uuid]=n.parse(l)),a[l.uuid]=r[l.uuid]}return a},parseAnimations:function parseAnimations(e){for(var t=[],r=0;r<e.length;r++){var a=e[r],n=xi.parse(a);a.uuid!==void 0&&(n.uuid=a.uuid),t.push(n)}return t},parseImages:function parseImages(e,t){function r(e){return a.manager.itemStart(e),s.load(e,function(){a.manager.itemEnd(e)},void 0,function(){a.manager.itemError(e),a.manager.itemEnd(e)})}var a=this,n={};if(e!==void 0&&0<e.length){var o=new Mi(t),s=new Ai(o);s.setCrossOrigin(this.crossOrigin);for(var l=0,d=e.length;l<d;l++){var p=e[l],c=p.url;if(Array.isArray(c)){n[p.uuid]=[];for(var u=0,m=c.length;u<m;u++){var g=c[u],f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(g)?g:a.resourcePath+g;n[p.uuid].push(r(f))}}else{// load single image
var f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(p.url)?p.url:a.resourcePath+p.url;n[p.uuid]=r(f)}}}return n},parseTextures:function parseTextures(e,t){function r(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}var a={};if(e!==void 0)for(var n=0,o=e.length,s;n<o;n++){s=e[n],void 0===s.image&&console.warn("THREE.ObjectLoader: No \"image\" specified for",s.uuid),void 0===t[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);var l;l=Array.isArray(t[s.image])?new Pe(t[s.image]):new v(t[s.image]),l.needsUpdate=!0,l.uuid=s.uuid,void 0!==s.name&&(l.name=s.name),void 0!==s.mapping&&(l.mapping=r(s.mapping,dp)),void 0!==s.offset&&l.offset.fromArray(s.offset),void 0!==s.repeat&&l.repeat.fromArray(s.repeat),void 0!==s.center&&l.center.fromArray(s.center),void 0!==s.rotation&&(l.rotation=s.rotation),void 0!==s.wrap&&(l.wrapS=r(s.wrap[0],pp),l.wrapT=r(s.wrap[1],pp)),void 0!==s.format&&(l.format=s.format),void 0!==s.type&&(l.type=s.type),void 0!==s.encoding&&(l.encoding=s.encoding),void 0!==s.minFilter&&(l.minFilter=r(s.minFilter,cp)),void 0!==s.magFilter&&(l.magFilter=r(s.magFilter,cp)),void 0!==s.anisotropy&&(l.anisotropy=s.anisotropy),void 0!==s.flipY&&(l.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(l.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(l.unpackAlignment=s.unpackAlignment),a[s.uuid]=l}return a},parseObject:function parseObject(e,t,r){function a(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function n(e){if(void 0!==e){if(Array.isArray(e)){for(var t=[],a=0,n=e.length,o;a<n;a++)o=e[a],void 0===r[o]&&console.warn("THREE.ObjectLoader: Undefined material",o),t.push(r[o]);return t}return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),r[e]}}var o;switch(e.type){case"Scene":o=new A,void 0!==e.background&&Co(e.background)&&(o.background=new U(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?o.fog=new mr(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(o.fog=new ur(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":o=new pe(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(o.focus=e.focus),void 0!==e.zoom&&(o.zoom=e.zoom),void 0!==e.filmGauge&&(o.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(o.filmOffset=e.filmOffset),void 0!==e.view&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new pn(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(o.zoom=e.zoom),void 0!==e.view&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new mn(e.color,e.intensity);break;case"DirectionalLight":o=new un(e.color,e.intensity);break;case"PointLight":o=new dn(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new gn(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new sn(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new an(e.color,e.groundColor,e.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var s=a(e.geometry),d=n(e.material);o=new re(s,d);break;case"InstancedMesh":var s=a(e.geometry),d=n(e.material),p=e.count,c=e.instanceMatrix;o=new Sr(s,d,p),o.instanceMatrix=new k(new Float32Array(c.array),16);break;case"LOD":o=new xr;break;case"Line":o=new Er(a(e.geometry),n(e.material),e.mode);break;case"LineLoop":o=new Lr(a(e.geometry),n(e.material));break;case"LineSegments":o=new wr(a(e.geometry),n(e.material));break;case"PointCloud":case"Points":o=new Rr(a(e.geometry),n(e.material));break;case"Sprite":o=new yr(n(e.material));break;case"Group":o=new dr;break;default:o=new L;}if(o.uuid=e.uuid,void 0!==e.name&&(o.name=e.name),void 0===e.matrix?(void 0!==e.position&&o.position.fromArray(e.position),void 0!==e.rotation&&o.rotation.fromArray(e.rotation),void 0!==e.quaternion&&o.quaternion.fromArray(e.quaternion),void 0!==e.scale&&o.scale.fromArray(e.scale)):(o.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)),void 0!==e.castShadow&&(o.castShadow=e.castShadow),void 0!==e.receiveShadow&&(o.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(o.shadow.bias=e.shadow.bias),void 0!==e.shadow.radius&&(o.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&o.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(o.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(o.visible=e.visible),void 0!==e.frustumCulled&&(o.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(o.renderOrder=e.renderOrder),void 0!==e.userData&&(o.userData=e.userData),void 0!==e.layers&&(o.layers.mask=e.layers),void 0!==e.children)for(var u=e.children,m=0;m<u.length;m++)o.add(this.parseObject(u[m],t,r));if("LOD"===e.type){void 0!==e.autoUpdate&&(o.autoUpdate=e.autoUpdate);for(var g=e.levels,f=0;f<g.length;f++){var h=g[f],y=o.getObjectByProperty("uuid",h.object);void 0!==y&&o.addLevel(y,h.distance)}}return o}});var dp={UVMapping:Ho,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,SphericalReflectionMapping:305,CubeUVReflectionMapping:306,CubeUVRefractionMapping:307},pp={RepeatWrapping:Vo,ClampToEdgeWrapping:ko,MirroredRepeatWrapping:Wo},cp={NearestFilter:1003,NearestMipmapNearestFilter:1004,NearestMipmapLinearFilter:1005,LinearFilter:jo,LinearMipmapNearestFilter:1007,LinearMipmapLinearFilter:qo};_n.prototype=Object.assign(Object.create(Si.prototype),{constructor:_n,setOptions:function(e){return this.options=e,this},load:function load(t,r,a,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);var n=this,o=$d.get(t);return void 0===o?void(fetch(t).then(function(e){return e.blob()}).then(function(e){return void 0===n.options?createImageBitmap(e):createImageBitmap(e,n.options)}).then(function(e){$d.add(t,e),r&&r(e),n.manager.itemEnd(t)})["catch"](function(r){i&&i(r),n.manager.itemError(t),n.manager.itemEnd(t)}),n.manager.itemStart(t)):(n.manager.itemStart(t),setTimeout(function(){r&&r(o),n.manager.itemEnd(t)},0),o)}}),Object.assign(bn.prototype,{moveTo:function moveTo(e,t){return this.currentPath=new en,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function lineTo(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function quadraticCurveTo(e,t,r,a){return this.currentPath.quadraticCurveTo(e,t,r,a),this},bezierCurveTo:function bezierCurveTo(e,t,r,a,i,n){return this.currentPath.bezierCurveTo(e,t,r,a,i,n),this},splineThru:function splineThru(e){return this.currentPath.splineThru(e),this},toShapes:function toShapes(e,t){function r(e){for(var t=[],r=0,a=e.length;r<a;r++){var n=e[r],o=new tn;o.curves=n.curves,t.push(o)}return t}function a(e,t){for(var r=t.length,a=!1,i=r-1,n=0;n<r;i=n++){var o=t[i],s=t[n],l=s.x-o.x,d=s.y-o.y;if(zo(d)>Mo){if(0>d&&(o=t[n],l=-l,s=t[i],d=-d),e.y<o.y||e.y>s.y)continue;if(e.y!==o.y){var c=d*(e.x-o.x)-l*(e.y-o.y);if(0==c)return!0;// inPt is on contour ?
if(0>c)continue;a=!a}else if(e.x===o.x)return!0;// inPt is on contour ?
// continue;				// no intersection or edgeLowPt => doesn't count !!!
}else{// parallel or collinear
if(e.y!==o.y)continue;// parallel
// edge lies on the same horizontal line as inPt
if(s.x<=e.x&&e.x<=o.x||o.x<=e.x&&e.x<=s.x)return!0;// inPt: Point on contour !
// continue;
}}return a}var n=Yd.isClockWise,o=this.subPaths;if(0===o.length)return[];if(!0===t)return r(o);var s=[],d,p,c;if(1===o.length)return p=o[0],c=new tn,c.curves=p.curves,s.push(c),s;var u=!n(o[0].getPoints());u=e?!u:u;// console.log("Holes first", holesFirst);
var m=[],g=[],f=[],h=0,y;g[h]=void 0,f[h]=[];for(var v=0,x=o.length;v<x;v++)p=o[v],y=p.getPoints(),d=n(y),d=e?!d:d,d?(!u&&g[h]&&h++,g[h]={s:new tn,p:y},g[h].s.curves=p.curves,u&&h++,f[h]=[]):f[h].push({h:p,p:y[0]});// only Holes? -> probably all Shapes with wrong orientation
if(!g[0])return r(o);if(1<g.length){for(var l=!1,_=[],b=0,M=g.length;b<M;b++)m[b]=[];for(var b=0,M=g.length,S;b<M;b++){S=f[b];for(var T=0;T<S.length;T++){for(var E=S[T],w=!0,L=0;L<g.length;L++)a(E.p,g[L].p)&&(b!==L&&_.push({froms:b,tos:L,hole:T}),w?(w=!1,m[L].push(E)):l=!0);w&&m[b].push(E)}}// console.log("ambiguous: ", ambiguous);
0<_.length&&!l&&(f=m)}for(var v=0,A=g.length,R;v<A;v++){c=g[v].s,s.push(c),R=f[v];for(var P=0,C=R.length;P<C;P++)c.holes.push(R[P].h)}//console.log("shape", shapes);
return s}}),Object.assign(Mn.prototype,{isFont:!0,generateShapes:function generateShapes(e,t){t===void 0&&(t=100);for(var r=[],a=Sn(e,t,this.data),i=0,n=a.length;i<n;i++)Array.prototype.push.apply(r,a[i].toShapes());return r}}),En.prototype=Object.assign(Object.create(Si.prototype),{constructor:En,load:function load(e,t,r,a){var i=this,n=new Ti(this.manager);n.setPath(this.path),n.load(e,function(r){var a;try{a=JSON.parse(r)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),a=JSON.parse(r.substring(65,r.length-2))}var n=i.parse(a);t&&t(n)},r,a)},parse:function parse(e){return new Mn(e)}});/**
   * @author mrdoob / http://mrdoob.com/
   */var up={getContext:function getContext(){return void 0===mp&&(mp=new(window.AudioContext||window.webkitAudioContext)),mp},setContext:function setContext(e){mp=e}},mp;wn.prototype=Object.assign(Object.create(Si.prototype),{constructor:wn,load:function load(e,t,r,a){var i=new Ti(this.manager);i.setResponseType("arraybuffer"),i.setPath(this.path),i.load(e,function(e){// Create a copy of the buffer. The `decodeAudioData` method
// detaches the buffer when complete, preventing reuse.
var r=e.slice(0),a=up.getContext();a.decodeAudioData(r,function(e){t(e)})},r,a)}}),Object.assign(Ln.prototype,{isSphericalHarmonics3:!0,set:function set(e){for(var t=0;9>t;t++)this.coefficients[t].copy(e[t]);return this},zero:function zero(){for(var e=0;9>e;e++)this.coefficients[e].set(0,0,0);return this},// get the radiance in the direction of the normal
// target is a Vector3
getAt:function getAt(e,t){// normal is assumed to be unit length
var r=e.x,a=e.y,i=e.z,n=this.coefficients;return t.copy(n[0]).multiplyScalar(.282095),t.addScaledVector(n[1],.488603*a),t.addScaledVector(n[2],.488603*i),t.addScaledVector(n[3],.488603*r),t.addScaledVector(n[4],1.092548*(r*a)),t.addScaledVector(n[5],1.092548*(a*i)),t.addScaledVector(n[6],.315392*(3*i*i-1)),t.addScaledVector(n[7],1.092548*(r*i)),t.addScaledVector(n[8],.546274*(r*r-a*a)),t},// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal
// target is a Vector3
// https://graphics.stanford.edu/papers/envmap/envmap.pdf
getIrradianceAt:function getIrradianceAt(e,t){// normal is assumed to be unit length
var r=e.x,a=e.y,i=e.z,n=this.coefficients;// ( π / 4 ) * 0.546274
return t.copy(n[0]).multiplyScalar(.886227),t.addScaledVector(n[1],.511664*2*a),t.addScaledVector(n[2],.511664*2*i),t.addScaledVector(n[3],.511664*2*r),t.addScaledVector(n[4],.429043*2*r*a),t.addScaledVector(n[5],.429043*2*a*i),t.addScaledVector(n[6],.743125*i*i-.247708),t.addScaledVector(n[7],.429043*2*r*i),t.addScaledVector(n[8],.429043*(r*r-a*a)),t},add:function add(e){for(var t=0;9>t;t++)this.coefficients[t].add(e.coefficients[t]);return this},addScaledSH:function addScaledSH(e,t){for(var r=0;9>r;r++)this.coefficients[r].addScaledVector(e.coefficients[r],t);return this},scale:function scale(e){for(var t=0;9>t;t++)this.coefficients[t].multiplyScalar(e);return this},lerp:function lerp(e,t){for(var r=0;9>r;r++)this.coefficients[r].lerp(e.coefficients[r],t);return this},equals:function(e){for(var t=0;9>t;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0},copy:function copy(e){return this.set(e.coefficients)},clone:function clone(){return new this.constructor().copy(this)},fromArray:function fromArray(e,t){t===void 0&&(t=0);for(var r=this.coefficients,a=0;9>a;a++)r[a].fromArray(e,t+3*a);return this},toArray:function toArray(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);for(var r=this.coefficients,a=0;9>a;a++)r[a].toArray(e,t+3*a);return e}}),Object.assign(Ln,{// evaluate the basis functions
// shBasis is an Array[ 9 ]
getBasisAt:function getBasisAt(e,t){// normal is assumed to be unit length
var r=e.x,a=e.y,i=e.z;// band 0
// band 1
// band 2
t[0]=.282095,t[1]=.488603*a,t[2]=.488603*i,t[3]=.488603*r,t[4]=1.092548*r*a,t[5]=1.092548*a*i,t[6]=.315392*(3*i*i-1),t[7]=1.092548*r*i,t[8]=.546274*(r*r-a*a)}}),An.prototype=Object.assign(Object.create(rn.prototype),{constructor:An,isLightProbe:!0,copy:function copy(e){return rn.prototype.copy.call(this,e),this.sh.copy(e.sh),this.intensity=e.intensity,this},toJSON:function(e){var t=rn.prototype.toJSON.call(this,e);// data.sh = this.sh.toArray(); // todo
return t}}),Rn.prototype=Object.assign(Object.create(An.prototype),{constructor:Rn,isHemisphereLightProbe:!0,copy:function copy(e){return An.prototype.copy.call(this,e),this},toJSON:function(e){var t=An.prototype.toJSON.call(this,e);// data.sh = this.sh.toArray(); // todo
return t}}),Pn.prototype=Object.assign(Object.create(An.prototype),{constructor:Pn,isAmbientLightProbe:!0,copy:function copy(e){return An.prototype.copy.call(this,e),this},toJSON:function(e){var t=An.prototype.toJSON.call(this,e);// data.sh = this.sh.toArray(); // todo
return t}});var gp=new T,fp=new T;Object.assign(/**
   * @author mrdoob / http://mrdoob.com/
   */function(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new pe,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new pe,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}.prototype,{update:function update(e){var t=this._cache,r=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(r){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;// Off-axis stereoscopic effect based on
// http://paulbourke.net/stereographics/stereorender/
var a=e.projectionMatrix.clone(),i=t.eyeSep/2,n=i*t.near/t.focus,o=t.near*ho(.5*(os.DEG2RAD*t.fov))/t.zoom,s,l;// translate xOffset
// for left eye
// for right eye
fp.elements[12]=-i,gp.elements[12]=i,s=-o*t.aspect+n,l=o*t.aspect+n,a.elements[0]=2*t.near/(l-s),a.elements[8]=(l+s)/(l-s),this.cameraL.projectionMatrix.copy(a),s=-o*t.aspect-n,l=o*t.aspect-n,a.elements[0]=2*t.near/(l-s),a.elements[8]=(l+s)/(l-s),this.cameraR.projectionMatrix.copy(a)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(fp),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(gp)}}),Object.assign(Cn.prototype,{start:function start(){// see #10732
this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function getElapsedTime(){return this.getDelta(),this.elapsedTime},getDelta:function getDelta(){var e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var t=("undefined"==typeof performance?Date:performance).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}});/**
   * @author mrdoob / http://mrdoob.com/
   */var hp=new S,yp=new M,vp=new S,xp=new S;Dn.prototype=Object.assign(Object.create(L.prototype),{constructor:Dn,getInput:function getInput(){return this.gain},removeFilter:function removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function getFilter(){return this.filter},setFilter:function setFilter(e){return null===this.filter?this.gain.disconnect(this.context.destination):(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function getMasterVolume(){return this.gain.gain.value},setMasterVolume:function setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this},updateMatrixWorld:function updateMatrixWorld(e){L.prototype.updateMatrixWorld.call(this,e);var t=this.context.listener,r=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(hp,yp,vp),xp.set(0,0,-1).applyQuaternion(yp),t.positionX){// code path for Chrome (see #14393)
var a=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(hp.x,a),t.positionY.linearRampToValueAtTime(hp.y,a),t.positionZ.linearRampToValueAtTime(hp.z,a),t.forwardX.linearRampToValueAtTime(xp.x,a),t.forwardY.linearRampToValueAtTime(xp.y,a),t.forwardZ.linearRampToValueAtTime(xp.z,a),t.upX.linearRampToValueAtTime(r.x,a),t.upY.linearRampToValueAtTime(r.y,a),t.upZ.linearRampToValueAtTime(r.z,a)}else t.setPosition(hp.x,hp.y,hp.z),t.setOrientation(xp.x,xp.y,xp.z,r.x,r.y,r.z)}}),In.prototype=Object.assign(Object.create(L.prototype),{constructor:In,getOutput:function getOutput(){return this.gain},setNodeSource:function setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this},setMediaElementSource:function setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this},setMediaStreamSource:function setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this},setBuffer:function setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function play(e){if(void 0===e&&(e=0),!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._pausedAt+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()},pause:function pause(){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(!0===this.isPlaying&&(this._pausedAt+=No(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.source.stop(),this.source.onended=null,this.isPlaying=!1),this)},stop:function stop(){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this._pausedAt=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this)},connect:function connect(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function disconnect(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function getFilters(){return this.filters},setFilters:function setFilters(e){return e||(e=[]),!0===this.isPlaying?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this},setDetune:function setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this;// only set detune when available
},getDetune:function getDetune(){return this.detune},getFilter:function getFilter(){return this.getFilters()[0]},setFilter:function setFilter(e){return this.setFilters(e?[e]:[])},setPlaybackRate:function setPlaybackRate(e){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this)},getPlaybackRate:function getPlaybackRate(){return this.playbackRate},onEnded:function onEnded(){this.isPlaying=!1},getLoop:function getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function setLoop(e){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this)},setLoopStart:function setLoopStart(e){return this.loopStart=e,this},setLoopEnd:function setLoopEnd(e){return this.loopEnd=e,this},getVolume:function getVolume(){return this.gain.gain.value},setVolume:function setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}});/**
   * @author mrdoob / http://mrdoob.com/
   */var _p=new S,bp=new M,Mp=new S,Sp=new S;Nn.prototype=Object.assign(Object.create(In.prototype),{constructor:Nn,getOutput:function getOutput(){return this.panner},getRefDistance:function getRefDistance(){return this.panner.refDistance},setRefDistance:function setRefDistance(e){return this.panner.refDistance=e,this},getRolloffFactor:function getRolloffFactor(){return this.panner.rolloffFactor},setRolloffFactor:function setRolloffFactor(e){return this.panner.rolloffFactor=e,this},getDistanceModel:function getDistanceModel(){return this.panner.distanceModel},setDistanceModel:function setDistanceModel(e){return this.panner.distanceModel=e,this},getMaxDistance:function getMaxDistance(){return this.panner.maxDistance},setMaxDistance:function setMaxDistance(e){return this.panner.maxDistance=e,this},setDirectionalCone:function setDirectionalCone(e,t,r){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=r,this},updateMatrixWorld:function updateMatrixWorld(e){if(L.prototype.updateMatrixWorld.call(this,e),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(_p,bp,Mp),Sp.set(0,0,1).applyQuaternion(bp);var t=this.panner;if(t.positionX){// code path for Chrome and Firefox (see #14393)
var r=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(_p.x,r),t.positionY.linearRampToValueAtTime(_p.y,r),t.positionZ.linearRampToValueAtTime(_p.z,r),t.orientationX.linearRampToValueAtTime(Sp.x,r),t.orientationY.linearRampToValueAtTime(Sp.y,r),t.orientationZ.linearRampToValueAtTime(Sp.z,r)}else t.setPosition(_p.x,_p.y,_p.z),t.setOrientation(Sp.x,Sp.y,Sp.z)}}}),Object.assign(zn.prototype,{getFrequencyData:function getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function getAverageFrequency(){for(var e=0,t=this.getFrequencyData(),r=0;r<t.length;r++)e+=t[r];return e/t.length}}),Object.assign(Un.prototype,{// accumulate data in the 'incoming' region into 'accu<i>'
accumulate:function accumulate(e,t){// note: happily accumulating nothing when weight = 0, the caller knows
// the weight and shouldn't have made the call in the first place
var r=this.buffer,a=this.valueSize,n=e*a+a,o=this.cumulativeWeight;if(0===o){// accuN := incoming * weight
for(var s=0;s!==a;++s)r[n+s]=r[s];o=t}else{o+=t;var l=t/o;this._mixBufferRegion(r,n,0,l,a)}this.cumulativeWeight=o},// apply the state of 'accu<i>' to the binding when accus differ
apply:function apply(e){var t=this.valueSize,r=this.buffer,a=e*t+t,n=this.cumulativeWeight,o=this.binding;if(this.cumulativeWeight=0,1>n){// accuN := accuN + original * ( 1 - cumulativeWeight )
this._mixBufferRegion(r,a,3*t,1-n,t)}for(var s=t;s!==t+t;++s)if(r[s]!==r[s+t]){o.setValue(r,a);break}},// remember the state of the bound property and copy it to both accus
saveOriginalState:function saveOriginalState(){var e=this.binding,t=this.buffer,r=this.valueSize,a=3*r;e.getValue(t,a);// accu[0..1] := orig -- initially detect changes against the original
for(var n=r;n!==a;++n)t[n]=t[a+n%r];this.cumulativeWeight=0},// apply the state previously taken via 'saveOriginalState' to the binding
restoreOriginalState:function restoreOriginalState(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)},// mix functions
_select:function _select(e,r,a,n,t){if(.5<=n)for(var o=0;o!==t;++o)e[r+o]=e[a+o]},_slerp:function _slerp(e,r,a,i){M.slerpFlat(e,r,e,r,e,a,i)},_lerp:function _lerp(e,r,a,n,t){for(var o=0,s;o!==t;++o)s=r+o,e[s]=e[s]*(1-n)+e[a+o]*n}});/**
   *
   * A reference to a real property in the scene graph.
   *
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */ // Characters [].:/ are reserved for track binding syntax.
var Tp="[^\\[\\]\\.:\\/]",Ep="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",wp=/((?:WC+[\/:])*)/.source.replace("WC",Tp),Lp=/(WCOD+)?/.source.replace("WCOD",Ep),Ap=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Tp),Rp=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Tp),Pp=new RegExp("^"+wp+Lp+Ap+Rp+"$"),Cp=["material","materials","bones"];Object.assign(Bn.prototype,{getValue:function getValue(e,t){this.bind();// bind all binding
var r=this._targetGroup.nCachedObjects_,a=this._bindings[r];// and only call .getValue on the first
a!==void 0&&a.getValue(e,t)},setValue:function setValue(e,t){for(var r=this._bindings,a=this._targetGroup.nCachedObjects_,o=r.length;a!==o;++a)r[a].setValue(e,t)},bind:function bind(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].bind()},unbind:function unbind(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].unbind()}}),Object.assign(Fn,{Composite:Bn,create:function create(e,t,r){return e&&e.isAnimationObjectGroup?new Fn.Composite(e,t,r):new Fn(e,t,r)},/**
  	 * Replaces spaces with underscores and removes unsupported characters from
  	 * node names, to ensure compatibility with parseTrackName().
  	 *
  	 * @param {string} name Node name to be sanitized.
  	 * @return {string}
  	 */sanitizeNodeName:function sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(/[\[\]\.:\/]/g,"")},parseTrackName:function parseTrackName(e){var t=Pp.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var r={// directoryName: matches[ 1 ], // (tschw) currently unused
nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],// required
propertyIndex:t[6]},a=r.nodeName&&r.nodeName.lastIndexOf(".");if(a!==void 0&&-1!==a){var i=r.nodeName.substring(a+1);// Object names must be checked against a whitelist. Otherwise, there
// is no way to parse 'foo.bar.baz': 'baz' must be a property, but
// 'bar' could be the objectName, or part of a nodeName (which can
// include '.' characters).
-1!==Cp.indexOf(i)&&(r.nodeName=r.nodeName.substring(0,a),r.objectName=i)}if(null===r.propertyName||0===r.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return r},findNode:function findNode(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;// search into skeleton bones.
if(e.skeleton){var r=e.skeleton.getBoneByName(t);if(void 0!==r)return r}// search into node subtree.
if(e.children){var a=function(e){for(var r=0,n;r<e.length;r++){if(n=e[r],n.name===t||n.uuid===t)return n;var o=a(n.children);if(o)return o}return null},i=a(e.children);if(i)return i}return null}}),Object.assign(Fn.prototype,{// prototype, continued
// these are used to "bind" a nonexistent property
_getValue_unavailable:function _getValue_unavailable(){},_setValue_unavailable:function _setValue_unavailable(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){for(var r=this.resolvedProperty,a=0,o=r.length;a!==o;++a)e[t++]=r[a]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[// Direct
function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[// EntireArray
function(e,t){for(var r=this.resolvedProperty,a=0,o=r.length;a!==o;++a)r[a]=e[t++]},function(e,t){for(var r=this.resolvedProperty,a=0,o=r.length;a!==o;++a)r[a]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){for(var r=this.resolvedProperty,a=0,o=r.length;a!==o;++a)r[a]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[// ArrayElement
function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[// HasToFromArray
function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},// create getter / setter pair for a property in the scene graph
bind:function bind(){var e=this.node,t=this.parsedPath,r=t.objectName,a=t.propertyName,n=t.propertyIndex;// ensure there is a value node
if(e||(e=Fn.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(r){var o=t.objectIndex;// special cases were we need to reach deeper into the hierarchy to get the face materials....
switch(r){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);// potential future optimization: skip this if propertyIndex is already an integer
// and convert the integer string to a true integer.
e=e.skeleton.bones;// support resolving morphTarget names into indices.
for(var s=0;s<e.length;s++)if(e[s].name===o){o=s;break}break;default:if(void 0===e[r])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[r];}if(void 0!==o){if(void 0===e[o])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[o]}}// resolve property
var l=e[a];if(void 0===l){var d=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+d+"."+a+" but it wasn't found.",e)}// determine versioning scheme
var p=this.Versioning.None;this.targetObject=e,void 0===e.needsUpdate?void 0!==e.matrixWorldNeedsUpdate&&(p=this.Versioning.MatrixWorldNeedsUpdate):p=this.Versioning.NeedsUpdate;// determine how the property gets bound
var c=this.BindingType.Direct;if(void 0!==n){// access a sub element of the property array (only primitives are supported right now)
if("morphTargetInfluences"===a){// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.
// support resolving morphTarget names into indices.
if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);for(var s=0;s<this.node.geometry.morphAttributes.position.length;s++)if(e.geometry.morphAttributes.position[s].name===n){n=s;break}}else{if(!e.geometry.morphTargets)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);for(var s=0;s<this.node.geometry.morphTargets.length;s++)if(e.geometry.morphTargets[s].name===n){n=s;break}}}c=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=n}else void 0!==l.fromArray&&void 0!==l.toArray?(// must use copy for Object3D.Euler/Quaternion
c=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(c=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=a;// select getter / setter
this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][p]},unbind:function unbind(){// back to the prototype version of getValue / setValue
// note: avoiding to mutate the shape of 'this' via 'delete'
this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Fn.prototype,{// initial state of these methods that calls 'bind'
_getValue_unbound:Fn.prototype.getValue,_setValue_unbound:Fn.prototype.setValue}),Object.assign(On.prototype,{isAnimationObjectGroup:!0,add:function add(){for(var e=this._objects,t=e.length,r=this.nCachedObjects_,a=this._indicesByUUID,o=this._paths,s=this._parsedPaths,l=this._bindings,d=l.length,p=void 0,c=0,u=arguments.length;c!==u;++c){var n=arguments[c],g=n.uuid,f=a[g];if(f===void 0){f=t++,a[g]=f,e.push(n);// accounting is done, now do the same for all bindings
for(var h=0,y=d;h!==y;++h)l[h].push(new Fn(n,o[h],s[h]))}else if(f<r){p=e[f];// move existing object to the ACTIVE region
var v=--r,x=e[v];a[x.uuid]=f,e[f]=x,a[g]=v,e[v]=n;// accounting is done, now do the same for all bindings
for(var h=0,y=d;h!==y;++h){var _=l[h],b=_[v],M=_[f];_[f]=b,M===void 0&&(M=new Fn(n,o[h],s[h])),_[v]=M}}else e[f]!==p&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");// else the object is already where we want it to be
}// for arguments
this.nCachedObjects_=r},remove:function remove(){for(var e=this._objects,t=this.nCachedObjects_,r=this._indicesByUUID,a=this._bindings,o=a.length,s=0,l=arguments.length;s!==l;++s){var n=arguments[s],d=n.uuid,p=r[d];if(p!==void 0&&p>=t){// move existing object into the CACHED region
var c=t++,u=e[c];r[u.uuid]=p,e[p]=u,r[d]=c,e[c]=n;// accounting is done, now do the same for all bindings
for(var m=0;m!==o;++m){var g=a[m],f=g[c],h=g[p];g[p]=f,g[c]=h}}}// for arguments
this.nCachedObjects_=t},// remove & forget
uncache:function uncache(){for(var e=this._objects,t=e.length,r=this.nCachedObjects_,a=this._indicesByUUID,o=this._bindings,s=o.length,l=0,d=arguments.length;l!==d;++l){var n=arguments[l],p=n.uuid,c=a[p];if(void 0!==c)if(delete a[p],c<r){// object is cached, shrink the CACHED region
var u=--r,g=e[u],f=--t,h=e[f];// last cached object takes this object's place
a[g.uuid]=c,e[c]=g,a[h.uuid]=u,e[u]=h,e.pop();// accounting is done, now do the same for all bindings
for(var y=0,v=s;y!==v;++y){var x=o[y],_=x[u],b=x[f];x[c]=_,x[u]=b,x.pop()}}else{// object is active, just swap with the last and pop
var f=--t,h=e[f];a[h.uuid]=c,e[c]=h,e.pop();// accounting is done, now do the same for all bindings
for(var y=0,v=s,x;y!==v;++y)x=o[y],x[c]=x[f],x.pop()}// cached or active
// if object is known
}// for arguments
this.nCachedObjects_=r},// Internal interface used by befriended PropertyBinding.Composite:
subscribe_:function subscribe_(e,t){// returns an array of bindings for the given path that is changed
// according to the contained objects in the group
var r=this._bindingsIndicesByPath,a=r[e],o=this._bindings;if(a!==void 0)return o[a];var s=this._paths,l=this._parsedPaths,d=this._objects,p=d.length,c=this.nCachedObjects_,u=Array(p);a=o.length,r[e]=a,s.push(e),l.push(t),o.push(u);for(var m=c,g=d.length,n;m!==g;++m)n=d[m],u[m]=new Fn(n,e,t);return u},unsubscribe_:function unsubscribe_(e){// tells the group to forget about a property path and no longer
// update the array previously obtained with 'subscribe_'
var t=this._bindingsIndicesByPath,r=t[e];if(r!==void 0){var a=this._paths,i=this._parsedPaths,n=this._bindings,o=n.length-1,s=n[o],l=e[o];t[l]=r,n[r]=s,n.pop(),i[r]=i[o],i.pop(),a[r]=a[o],a.pop()}}}),Object.assign(Gn.prototype,{// State & Scheduling
play:function play(){return this._mixer._activateAction(this),this},stop:function stop(){return this._mixer._deactivateAction(this),this.reset()},reset:function reset(){// forget scheduling
return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},// return true when play has been called
isScheduled:function isScheduled(){return this._mixer._isActiveAction(this)},startAt:function startAt(e){return this._startTime=e,this},setLoop:function setLoop(e,t){return this.loop=e,this.repetitions=t,this},// Weight
// set the weight stopping any scheduled fading
// although .enabled = false yields an effective weight of zero, this
// method does *not* change .enabled, because it would be confusing
setEffectiveWeight:function setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},// return the weight considering fading and .enabled
getEffectiveWeight:function getEffectiveWeight(){return this._effectiveWeight},fadeIn:function fadeIn(e){return this._scheduleFading(e,0,1)},fadeOut:function fadeOut(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function crossFadeFrom(e,t,r){if(e.fadeOut(t),this.fadeIn(t),r){var a=this._clip.duration,i=e._clip.duration;e.warp(1,i/a,t),this.warp(a/i,1,t)}return this},crossFadeTo:function crossFadeTo(e,t,r){return e.crossFadeFrom(this,t,r)},stopFading:function stopFading(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},// Time Scale Control
// set the time scale stopping any scheduled warping
// although .paused = true yields an effective time scale of zero, this
// method does *not* change .paused, because it would be confusing
setEffectiveTimeScale:function setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},// return the time scale considering warping and .paused
getEffectiveTimeScale:function getEffectiveTimeScale(){return this._effectiveTimeScale},setDuration:function setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function halt(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function warp(e,t,r){var a=this._mixer,i=a.time,n=this._timeScaleInterpolant,o=this.timeScale;null===n&&(n=a._lendControlInterpolant(),this._timeScaleInterpolant=n);var s=n.parameterPositions,l=n.sampleValues;return s[0]=i,s[1]=i+r,l[0]=e/o,l[1]=t/o,this},stopWarping:function stopWarping(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},// Object Accessors
getMixer:function getMixer(){return this._mixer},getClip:function getClip(){return this._clip},getRoot:function getRoot(){return this._localRoot||this._mixer._root},// Interna
_update:function _update(e,t,r,a){// called by the mixer
if(!this.enabled)return void this._updateWeight(e);var i=this._startTime;if(null!==i){// check for scheduled start of action
var n=(e-i)*r;if(0>n||0===r)return;// yet to come / don't decide when delta = 0
// start
// unschedule
this._startTime=null,t=r*n}// apply time scale and advance time
t*=this._updateTimeScale(e);var o=this._updateTime(t),s=this._updateWeight(e);// note: _updateTime may disable the action resulting in
// an effective weight of 0
if(0<s)for(var l=this._interpolants,d=this._propertyBindings,p=0,c=l.length;p!==c;++p)l[p].evaluate(o),d[p].accumulate(a,s)},_updateWeight:function _updateWeight(e){var t=0;if(this.enabled){t=this.weight;var r=this._weightInterpolant;if(null!==r){var a=r.evaluate(e)[0];t*=a,e>r.parameterPositions[1]&&(this.stopFading(),0===a&&(this.enabled=!1))}}return this._effectiveWeight=t,t},_updateTimeScale:function _updateTimeScale(e){var t=0;if(!this.paused){t=this.timeScale;var r=this._timeScaleInterpolant;if(null!==r){var a=r.evaluate(e)[0];t*=a,e>r.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t},_updateTime:function _updateTime(e){var t=this.time+e,r=this._clip.duration,a=this.loop,i=this._loopCount,n=a===2202;if(0===e)return-1===i?t:n&&1==(1&i)?r-t:t;if(a===2200){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(t>=r)t=r;else if(0>t)t=0;else{this.time=t;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=t,this._mixer.dispatchEvent({type:"finished",action:this,direction:0>e?-1:1})}}else{if(-1===i&&(0<=e?(i=0,this._setEndings(!0,0===this.repetitions,n)):this._setEndings(0===this.repetitions,!0,n)),t>=r||0>t){// wrap around
var o=Po(t/r);// signed
t-=r*o,i+=zo(o);var s=this.repetitions-i;if(0>=s)this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=0<e?r:0,this.time=t,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<e?1:-1});else{// keep running
if(1===s){// entering the last round
var l=0>e;this._setEndings(l,!l,n)}else this._setEndings(!1,!1,n);this._loopCount=i,this.time=t,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=t;if(n&&1==(1&i))// invert time for the "pong round"
return r-t}return t},_setEndings:function _setEndings(e,t,r){var a=this._interpolantSettings;r?(a.endingStart=Ko,a.endingEnd=Ko):(a.endingStart=e?this.zeroSlopeAtStart?Ko:Qo:$o,a.endingEnd=t?this.zeroSlopeAtEnd?Ko:Qo:$o)},_scheduleFading:function _scheduleFading(e,t,r){var a=this._mixer,i=a.time,n=this._weightInterpolant;null===n&&(n=a._lendControlInterpolant(),this._weightInterpolant=n);var o=n.parameterPositions,s=n.sampleValues;return o[0]=i,s[0]=t,o[1]=i+e,s[1]=r,this}}),Hn.prototype=Object.assign(Object.create(f.prototype),{constructor:Hn,_bindAction:function _bindAction(e,t){var r=e._localRoot||this._root,a=e._clip.tracks,n=a.length,o=e._propertyBindings,s=e._interpolants,l=r.uuid,d=this._bindingsByRootAndName,p=d[l];p===void 0&&(p={},d[l]=p);for(var c=0;c!==n;++c){var u=a[c],m=u.name,g=p[m];if(void 0!==g)o[c]=g;else{if(g=o[c],void 0!==g){null===g._cacheIndex&&(++g.referenceCount,this._addInactiveBinding(g,l,m));continue}var f=t&&t._propertyBindings[c].binding.parsedPath;g=new Un(Fn.create(r,m,f),u.ValueTypeName,u.getValueSize()),++g.referenceCount,this._addInactiveBinding(g,l,m),o[c]=g}s[c].resultBuffer=g.buffer}},_activateAction:function _activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){// this action has been forgotten by the cache, but the user
// appears to be still using it -> rebind
var t=(e._localRoot||this._root).uuid,r=e._clip.uuid,a=this._actionsByClip[r];this._bindAction(e,a&&a.knownActions[0]),this._addInactiveAction(e,r,t)}// increment reference counts / sort out state
for(var o=e._propertyBindings,s=0,l=o.length,n;s!==l;++s)n=o[s],0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState());this._lendAction(e)}},_deactivateAction:function _deactivateAction(e){if(this._isActiveAction(e)){// decrement reference counts / sort out state
for(var t=e._propertyBindings,r=0,a=t.length,n;r!==a;++r)n=t[r],0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n));this._takeBackAction(e)}},// Memory manager
_initMemoryManager:function _initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},// Memory management for AnimationAction objects
_isActiveAction:function _isActiveAction(e){var t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function _addInactiveAction(e,t,r){var a=this._actions,i=this._actionsByClip,n=i[t];if(n===void 0)n={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=n;else{var o=n.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=a.length,a.push(e),n.actionByRoot[r]=e},_removeInactiveAction:function _removeInactiveAction(e){var t=this._actions,r=t[t.length-1],a=e._cacheIndex;r._cacheIndex=a,t[a]=r,t.pop(),e._cacheIndex=null;var i=e._clip.uuid,n=this._actionsByClip,o=n[i],s=o.knownActions,l=s[s.length-1],d=e._byClipCacheIndex;l._byClipCacheIndex=d,s[d]=l,s.pop(),e._byClipCacheIndex=null;var p=o.actionByRoot,c=(e._localRoot||this._root).uuid;delete p[c],0===s.length&&delete n[i],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function _removeInactiveBindingsForAction(e){for(var t=e._propertyBindings,r=0,a=t.length,n;r!==a;++r)n=t[r],0==--n.referenceCount&&this._removeInactiveBinding(n)},_lendAction:function _lendAction(e){// [ active actions |  inactive actions  ]
// [  active actions >| inactive actions ]
//                 s        a
//                  <-swap->
//                 a        s
var t=this._actions,r=e._cacheIndex,a=this._nActiveActions++,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=r,t[r]=i},_takeBackAction:function _takeBackAction(e){// [  active actions  | inactive actions ]
// [ active actions |< inactive actions  ]
//        a        s
//         <-swap->
//        s        a
var t=this._actions,r=e._cacheIndex,a=--this._nActiveActions,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=r,t[r]=i},// Memory management for PropertyMixer objects
_addInactiveBinding:function _addInactiveBinding(e,t,r){var a=this._bindingsByRootAndName,i=a[t],n=this._bindings;i===void 0&&(i={},a[t]=i),i[r]=e,e._cacheIndex=n.length,n.push(e)},_removeInactiveBinding:function _removeInactiveBinding(e){var t=this._bindings,r=e.binding,a=r.rootNode.uuid,i=r.path,n=this._bindingsByRootAndName,o=n[a],s=t[t.length-1],l=e._cacheIndex;s._cacheIndex=l,t[l]=s,t.pop(),delete o[i],0===Object.keys(o).length&&delete n[a]},_lendBinding:function _lendBinding(e){var t=this._bindings,r=e._cacheIndex,a=this._nActiveBindings++,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=r,t[r]=i},_takeBackBinding:function _takeBackBinding(e){var t=this._bindings,r=e._cacheIndex,a=--this._nActiveBindings,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=r,t[r]=i},// Memory management of Interpolants for weight and time scale
_lendControlInterpolant:function _lendControlInterpolant(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,r=e[t];return void 0===r&&(r=new di(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),r.__cacheIndex=t,e[t]=r),r},_takeBackControlInterpolant:function _takeBackControlInterpolant(e){var t=this._controlInterpolants,r=e.__cacheIndex,a=--this._nActiveControlInterpolants,i=t[a];e.__cacheIndex=a,t[a]=e,i.__cacheIndex=r,t[r]=i},_controlInterpolantsResultBuffer:new Float32Array(1),// return an action for a clip optionally using a custom root target
// object (this method allocates a lot of dynamic memory in case a
// previously unknown clip/root combination is specified)
clipAction:function clipAction(e,t){var r=t||this._root,a=r.uuid,i="string"==typeof e?xi.findByName(r,e):e,n=null===i?e:i.uuid,o=this._actionsByClip[n],s=null;if(void 0!==o){var l=o.actionByRoot[a];if(void 0!==l)return l;// we know the clip, so we don't have to parse all
// the bindings again but can just copy
s=o.knownActions[0],null===i&&(i=s._clip)}// clip must be known when specified via string
if(null===i)return null;// allocate all resources required to run it
var d=new Gn(this,i,t);return this._bindAction(d,s),this._addInactiveAction(d,n,a),d},// get an existing action
existingAction:function existingAction(e,t){var r=t||this._root,a=r.uuid,i="string"==typeof e?xi.findByName(r,e):e,n=i?i.uuid:e,o=this._actionsByClip[n];return void 0===o?null:o.actionByRoot[a]||null},// deactivates all previously scheduled actions
stopAllAction:function stopAllAction(){var e=this._actions,t=this._nActiveActions,r=this._bindings,a=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var n=0;n!==t;++n)e[n].reset();for(var n=0;n!==a;++n)r[n].useCount=0;return this},// advance the time and update apply the animation
update:function update(e){e*=this.timeScale;// run active actions
for(var t=this._actions,r=this._nActiveActions,a=this.time+=e,n=bo(e),o=this._accuIndex^=1,s=0,l;s!==r;++s)l=t[s],l._update(a,e,n,o);// update scene graph
for(var d=this._bindings,p=this._nActiveBindings,s=0;s!==p;++s)d[s].apply(o);return this},// Allows you to seek to a specific time in an animation.
setTime:function setTime(e){this.time=0;// Zero out time attribute for AnimationMixer object;
for(var t=0;t<this._actions.length;t++)this._actions[t].time=0;// Zero out time attribute for all associated AnimationAction objects.
return this.update(e);// Update used to set exact time. Returns "this" AnimationMixer object.
},// return this mixer's root target object
getRoot:function getRoot(){return this._root},// free all resources specific to a particular clip
uncacheClip:function uncacheClip(e){var t=this._actions,r=e.uuid,a=this._actionsByClip,o=a[r];if(o!==void 0){// note: just calling _removeInactiveAction would mess up the
// iteration state and also require updating the state we can
// just throw away
for(var s=o.knownActions,l=0,d=s.length,n;l!==d;++l){n=s[l],this._deactivateAction(n);var p=n._cacheIndex,c=t[t.length-1];n._cacheIndex=null,n._byClipCacheIndex=null,c._cacheIndex=p,t[p]=c,t.pop(),this._removeInactiveBindingsForAction(n)}delete a[r]}},// free all resources specific to a particular root target object
uncacheRoot:function uncacheRoot(e){var t=e.uuid,r=this._actionsByClip;for(var a in r){var i=r[a].actionByRoot,n=i[t];n!==void 0&&(this._deactivateAction(n),this._removeInactiveAction(n))}var o=this._bindingsByRootAndName,s=o[t];if(s!==void 0)for(var l in s){var d=s[l];d.restoreOriginalState(),this._removeInactiveBinding(d)}},// remove a targeted clip from the cache
uncacheAction:function uncacheAction(e,t){var r=this.existingAction(e,t);null!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}}),Vn.prototype.clone=function(){return new Vn(this.value.clone===void 0?this.value:this.value.clone())},kn.prototype=Object.assign(Object.create(gr.prototype),{constructor:kn,isInstancedInterleavedBuffer:!0,copy:function copy(e){return gr.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}}),Object.assign(Wn.prototype,{set:function set(e,t){// direction is assumed to be normalized (for accurate distance calculations)
this.ray.set(e,t)},setFromCamera:function setFromCamera(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function intersectObject(e,t,r){var a=r||[];return qn(e,this,a,t),a.sort(jn),a},intersectObjects:function intersectObjects(e,t,r){var a=r||[];if(!1===Array.isArray(e))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),a;for(var n=0,o=e.length;n<o;n++)qn(e[n],this,a,t);return a.sort(jn),a}}),Object.assign(/**
   * @author bhouston / http://clara.io
   * @author WestLangley / http://github.com/WestLangley
   *
   * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system
   *
   * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.
   * The azimuthal angle (theta) is measured from the positive z-axis.
   */function(e,t,r){// azimuthal angle
return this.radius=void 0===e?1:e,this.phi=void 0===t?0:t,this.theta=void 0===r?0:r,this}.prototype,{set:function set(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this},clone:function clone(){return new this.constructor().copy(this)},copy:function copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},// restrict phi to be betwee EPS and PI-EPS
makeSafe:function makeSafe(){var e=1e-6;return this.phi=No(e,Io(Eo-e,this.phi)),this},setFromVector3:function setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function setFromCartesianCoords(e,t,r){return this.radius=wo(e*e+t*t+r*r),0===this.radius?(this.theta=0,this.phi=0):(this.theta=To(e,r),this.phi=vo(os.clamp(t/this.radius,-1,1))),this}}),Object.assign(/**
   * @author Mugen87 / https://github.com/Mugen87
   *
   * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system
   *
   */function(e,t,r){// height above the x-z plane
return this.radius=void 0===e?1:e,this.theta=void 0===t?0:t,this.y=void 0===r?0:r,this}.prototype,{set:function set(e,t,r){return this.radius=e,this.theta=t,this.y=r,this},clone:function clone(){return new this.constructor().copy(this)},copy:function copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this},setFromVector3:function setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function setFromCartesianCoords(e,t,r){return this.radius=wo(e*e+r*r),this.theta=To(e,r),this.y=t,this}});/**
   * @author bhouston / http://clara.io
   */var Dp=new h;Object.assign(Xn.prototype,{set:function set(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function setFromPoints(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function setFromCenterAndSize(e,t){var r=Dp.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this},clone:function clone(){return new this.constructor().copy(this)},copy:function copy(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function makeEmpty(){return this.min.x=this.min.y=+Infinity,this.max.x=this.max.y=-Infinity,this},isEmpty:function isEmpty(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes
return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function getCenter(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new h),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function getSize(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new h),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function expandByPoint(e){return this.min.min(e),this.max.max(e),this},expandByVector:function expandByVector(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function getParameter(e,t){return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new h),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function intersectsBox(e){// using 4 splitting planes to rule out intersections
return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new h),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function distanceToPoint(e){var t=Dp.copy(e).clamp(this.min,this.max);return t.sub(e).length()},intersect:function intersect(e){return this.min.max(e.min),this.max.min(e.max),this},union:function union(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function translate(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});/**
   * @author bhouston / http://clara.io
   */var Ip=new S,Np=new S;Object.assign(Yn.prototype,{set:function set(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function clone(){return new this.constructor().copy(this)},copy:function copy(e){return this.start.copy(e.start),this.end.copy(e.end),this},getCenter:function getCenter(e){return void 0===e&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new S),e.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function delta(e){return void 0===e&&(console.warn("THREE.Line3: .delta() target is now required"),e=new S),e.subVectors(this.end,this.start)},distanceSq:function distanceSq(){return this.start.distanceToSquared(this.end)},distance:function distance(){return this.start.distanceTo(this.end)},at:function at(e,t){return void 0===t&&(console.warn("THREE.Line3: .at() target is now required"),t=new S),this.delta(t).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function closestPointToPointParameter(e,r){Ip.subVectors(e,this.start),Np.subVectors(this.end,this.start);var a=Np.dot(Np),i=Np.dot(Ip),n=i/a;return r&&(n=os.clamp(n,0,1)),n},closestPointToPoint:function closestPointToPoint(e,r,a){var i=this.closestPointToPointParameter(e,r);return void 0===a&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),a=new S),this.delta(a).multiplyScalar(i).add(this.start)},applyMatrix4:function applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}),Zn.prototype=Object.create(L.prototype),Zn.prototype.constructor=Zn,Zn.prototype.isImmediateRenderObject=!0;/**
   * @author alteredq / http://alteredqualia.com/
   * @author mrdoob / http://mrdoob.com/
   * @author WestLangley / http://github.com/WestLangley
   */var zp=new S;Jn.prototype=Object.create(L.prototype),Jn.prototype.constructor=Jn,Jn.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},Jn.prototype.update=function(){this.light.updateMatrixWorld();var e=this.light.distance?this.light.distance:1e3,t=e*ho(this.light.angle);this.cone.scale.set(t,t,e),zp.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(zp),this.color===void 0?this.cone.material.color.copy(this.light.color):this.cone.material.color.set(this.color)};/**
   * @author Sean Griffin / http://twitter.com/sgrif
   * @author Michael Guerrero / http://realitymeltdown.com
   * @author mrdoob / http://mrdoob.com/
   * @author ikerr / http://verold.com
   * @author Mugen87 / https://github.com/Mugen87
   */var Up=new S,Bp=new T,Fp=new T;Kn.prototype=Object.create(wr.prototype),Kn.prototype.constructor=Kn,Kn.prototype.isSkeletonHelper=!0,Kn.prototype.updateMatrixWorld=function(e){var t=this.bones,r=this.geometry,a=r.getAttribute("position");Fp.getInverse(this.root.matrixWorld);for(var n=0,o=0,s;n<t.length;n++)s=t[n],s.parent&&s.parent.isBone&&(Bp.multiplyMatrices(Fp,s.matrixWorld),Up.setFromMatrixPosition(Bp),a.setXYZ(o,Up.x,Up.y,Up.z),Bp.multiplyMatrices(Fp,s.parent.matrixWorld),Up.setFromMatrixPosition(Bp),a.setXYZ(o+1,Up.x,Up.y,Up.z),o+=2);r.getAttribute("position").needsUpdate=!0,L.prototype.updateMatrixWorld.call(this,e)},$n.prototype=Object.create(re.prototype),$n.prototype.constructor=$n,$n.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},$n.prototype.update=function(){this.color===void 0?this.material.color.copy(this.light.color):this.material.color.set(this.color)};/**
   * @author alteredq / http://alteredqualia.com/
   * @author mrdoob / http://mrdoob.com/
   * @author Mugen87 / https://github.com/Mugen87
   */var Op=new S,Gp=new U,Hp=new U;eo.prototype=Object.create(L.prototype),eo.prototype.constructor=eo,eo.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},eo.prototype.update=function(){var e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{var t=e.geometry.getAttribute("color");Gp.copy(this.light.color),Hp.copy(this.light.groundColor);for(var r=0,a=t.count,n;r<a;r++)n=r<a/2?Gp:Hp,t.setXYZ(r,n.r,n.g,n.b);t.needsUpdate=!0}e.lookAt(Op.setFromMatrixPosition(this.light.matrixWorld).negate())},to.prototype=Object.assign(Object.create(wr.prototype),{constructor:to,copy:function copy(e){return wr.prototype.copy.call(this,e),this.geometry.copy(e.geometry),this.material.copy(e.material),this},clone:function clone(){return new this.constructor().copy(this)}}),ro.prototype=Object.create(wr.prototype),ro.prototype.constructor=ro;/**
   * @author alteredq / http://alteredqualia.com/
   * @author mrdoob / http://mrdoob.com/
   * @author WestLangley / http://github.com/WestLangley
   */var Vp=new S,kp=new S,Wp=new S;ao.prototype=Object.create(L.prototype),ao.prototype.constructor=ao,ao.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},ao.prototype.update=function(){Vp.setFromMatrixPosition(this.light.matrixWorld),kp.setFromMatrixPosition(this.light.target.matrixWorld),Wp.subVectors(kp,Vp),this.lightPlane.lookAt(kp),this.color===void 0?(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)):(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)),this.targetLine.lookAt(kp),this.targetLine.scale.z=Wp.length()};/**
   * @author alteredq / http://alteredqualia.com/
   * @author Mugen87 / https://github.com/Mugen87
   *
   *	- shows frustum, line of sight and up of the camera
   *	- suitable for fast updates
   * 	- based on frustum visualization in lightgl.js shadowmap example
   *		http://evanw.github.com/lightgl.js/tests/shadowmap.html
   */var jp=new S,qp=new de;io.prototype=Object.create(wr.prototype),io.prototype.constructor=io,io.prototype.update=function(){var e=this.geometry,t=this.pointMap,r=1,a=1;// we need just camera projection matrix inverse
// world matrix must be identity
// center / target
// near
// far
// up
// cross
qp.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),no("c",t,e,qp,0,0,-1),no("t",t,e,qp,0,0,1),no("n1",t,e,qp,-r,-a,-1),no("n2",t,e,qp,r,-a,-1),no("n3",t,e,qp,-r,a,-1),no("n4",t,e,qp,r,a,-1),no("f1",t,e,qp,-r,-a,1),no("f2",t,e,qp,r,-a,1),no("f3",t,e,qp,-r,a,1),no("f4",t,e,qp,r,a,1),no("u1",t,e,qp,.7*r,1.1*a,-1),no("u2",t,e,qp,.7*-r,1.1*a,-1),no("u3",t,e,qp,0,2*a,-1),no("cf1",t,e,qp,-r,0,1),no("cf2",t,e,qp,r,0,1),no("cf3",t,e,qp,0,-a,1),no("cf4",t,e,qp,0,a,1),no("cn1",t,e,qp,-r,0,-1),no("cn2",t,e,qp,r,0,-1),no("cn3",t,e,qp,0,-a,-1),no("cn4",t,e,qp,0,a,-1),e.getAttribute("position").needsUpdate=!0};var Xp=new R;oo.prototype=Object.create(wr.prototype),oo.prototype.constructor=oo,oo.prototype.update=function(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Xp.setFromObject(this.object),!Xp.isEmpty()){var t=Xp.min,r=Xp.max,a=this.geometry.attributes.position,i=a.array;i[0]=r.x,i[1]=r.y,i[2]=r.z,i[3]=t.x,i[4]=r.y,i[5]=r.z,i[6]=t.x,i[7]=t.y,i[8]=r.z,i[9]=r.x,i[10]=t.y,i[11]=r.z,i[12]=r.x,i[13]=r.y,i[14]=t.z,i[15]=t.x,i[16]=r.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=r.x,i[22]=t.y,i[23]=t.z,a.needsUpdate=!0,this.geometry.computeBoundingSphere()}},oo.prototype.setFromObject=function(e){return this.object=e,this.update(),this},oo.prototype.copy=function(e){return wr.prototype.copy.call(this,e),this.object=e.object,this},oo.prototype.clone=function(){return new this.constructor().copy(this)},so.prototype=Object.create(wr.prototype),so.prototype.constructor=so,so.prototype.updateMatrixWorld=function(e){var t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),L.prototype.updateMatrixWorld.call(this,e))},lo.prototype=Object.create(Er.prototype),lo.prototype.constructor=lo,lo.prototype.updateMatrixWorld=function(e){var t=-this.plane.constant;// sign does not matter
// renderer flips side when determinant < 0; flipping not wanted here
1e-8>zo(t)&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=0>t?Oo:Fo,this.lookAt(this.plane.normal),L.prototype.updateMatrixWorld.call(this,e)};/**
   * @author WestLangley / http://github.com/WestLangley
   * @author zz85 / http://github.com/zz85
   * @author bhouston / http://clara.io
   *
   * Creates an arrow for visualizing directions
   *
   * Parameters:
   *  dir - Vector3
   *  origin - Vector3
   *  length - Number
   *  color - color in hex value
   *  headLength - Number
   *  headWidth - Number
   */var Yp=new S,Zp,Jp;po.prototype=Object.create(L.prototype),po.prototype.constructor=po,po.prototype.setDirection=function(e){// dir is assumed to be normalized
if(.99999<e.y)this.quaternion.set(0,0,0,1);else if(-.99999>e.y)this.quaternion.set(1,0,0,0);else{Yp.set(e.z,0,-e.x).normalize();var t=vo(e.y);this.quaternion.setFromAxisAngle(Yp,t)}},po.prototype.setLength=function(e,t,r){// see #17458
t===void 0&&(t=.2*e),r===void 0&&(r=.2*t),this.line.scale.set(1,No(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()},po.prototype.setColor=function(e){this.line.material.color.set(e),this.cone.material.color.set(e)},po.prototype.copy=function(e){return L.prototype.copy.call(this,e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this},po.prototype.clone=function(){return new this.constructor().copy(this)},co.prototype=Object.create(wr.prototype),co.prototype.constructor=co;/**
   * @author Emmett Lalish / elalish
   *
   * This class generates a Prefiltered, Mipmapped Radiance Environment Map
   * (PMREM) from a cubeMap environment texture. This allows different levels of
   * blur to be quickly accessed based on material roughness. It is packed into a
   * special CubeUV format that allows us to perform custom interpolation so that
   * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap
   * chain, it only goes down to the LOD_MIN level (above), and then creates extra
   * even more filtered 'mips' at the same LOD_MIN resolution, associated with
   * higher roughness levels. In this way we maintain resolution to smoothly
   * interpolate diffuse lighting while limiting sampling computation.
   */var Qp=[.125,.215,.35,.446,.526,.582],Kp=8-4+1+Qp.length,$p=(Bo={},_defineProperty(Bo,es,0),_defineProperty(Bo,ts,1),_defineProperty(Bo,3002,2),_defineProperty(Bo,3004,3),_defineProperty(Bo,3005,4),_defineProperty(Bo,3006,5),_defineProperty(Bo,3007,6),Bo),ec=new pn,tc=function(e){var t=new Float32Array(e),r=new S(0,1,0),a=new Ka({defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r},inputEncoding:{value:$p[3000]},outputEncoding:{value:$p[3000]}},vertexShader:mo(),fragmentShader:"\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform int samples;\nuniform float weights[n];\nuniform bool latitudinal;\nuniform float dTheta;\nuniform float mipInt;\nuniform vec3 poleAxis;\n\n".concat(go(),"\n\n#define ENVMAP_TYPE_CUBE_UV\n#include <cube_uv_reflection_fragment>\n\nvec3 getSample(float theta, vec3 axis) {\n\tfloat cosTheta = cos(theta);\n\t// Rodrigues' axis-angle rotation\n\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t+ cross(axis, vOutputDirection) * sin(theta)\n\t\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\n\treturn bilinearCubeUV(envMap, sampleDirection, mipInt);\n}\n\nvoid main() {\n\tvec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\n\tif (all(equal(axis, vec3(0.0))))\n\t\taxis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);\n\taxis = normalize(axis);\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb += weights[0] * getSample(0.0, axis);\n\tfor (int i = 1; i < n; i++) {\n\t\tif (i >= samples)\n\t\t\tbreak;\n\t\tfloat theta = dTheta * float(i);\n\t\tgl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);\n\t\tgl_FragColor.rgb += weights[i] * getSample(theta, axis);\n\t}\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t"),blending:0,depthTest:!1,depthWrite:!1});return a.type="SphericalGaussianBlur",a}(20),rc=uo(),ac=rc._lodPlanes,ic=rc._sizeLods,nc=rc._sigmas;Ci.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(Ci.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Object.assign($i.prototype,{createPointsGeometry:function createPointsGeometry(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");// generate geometry from path points (for Line or Points objects)
var t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function createSpacedPointsGeometry(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");// generate geometry from equidistant sampling along the path
var t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function createGeometry(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var t=new ne,r=0,a=e.length,n;r<a;r++)n=e[r],t.vertices.push(new S(n.x,n.y,n.z||0));return t}}),Object.assign(en.prototype,{fromPoints:function fromPoints(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}}),fo.prototype=Object.create(zi.prototype),Object.assign(fo.prototype,{initFromArray:function initFromArray()/* a */{console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function getControlPointsArray()/* optionalTarget */{console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function reparametrizeByArcLength()/* samplingCoef */{console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),to.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Kn.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(Si.prototype,{extractUrlBase:function extractUrlBase(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),sp.extractUrlBase(e)}}),Si.Handlers={add:function add()/* regex, loader */{console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function get()/* file */{console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(xn.prototype,{setTexturePath:function setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}),Object.assign(Xn.prototype,{center:function center(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function empty(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function isIntersectionBox(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function size(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(R.prototype,{center:function center(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function empty(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function isIntersectionBox(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function isIntersectionSphere(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function size(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}}),ge.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Yn.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Object.assign(os,{random16:function random16(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function nearestPowerOfTwo(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),os.floorPowerOfTwo(e)},nextPowerOfTwo:function nextPowerOfTwo(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),os.ceilPowerOfTwo(e)}}),Object.assign(y.prototype,{flattenToArrayOffset:function flattenToArrayOffset(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function multiplyVector3(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function multiplyVector3Array()/* a */{console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function applyToBufferAttribute(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function applyToVector3Array()/* array, offset, length */{console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(T.prototype,{extractPosition:function extractPosition(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function flattenToArrayOffset(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function getPosition(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new S().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function setRotationFromQuaternion(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function multiplyToArray(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function multiplyVector3(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function multiplyVector4(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function multiplyVector3Array()/* a */{console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function rotateAxis(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function crossVector(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function translate(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function rotateX(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function rotateY(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function rotateZ(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function rotateByAxis(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function applyToBufferAttribute(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function applyToVector3Array()/* array, offset, length */{console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function makeFrustum(e,t,r,a,i,n){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,a,r,i,n)}}),I.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},M.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Object.assign(D.prototype,{isIntersectionBox:function isIntersectionBox(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function isIntersectionPlane(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function isIntersectionSphere(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(N.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function barycoordFromPoint(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function midpoint(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function normal(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function plane(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}}),Object.assign(N,{barycoordFromPoint:function barycoordFromPoint(e,t,r,a,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),N.getBarycoord(e,t,r,a,i)},normal:function normal(e,t,r,a){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),N.getNormal(e,t,r,a)}}),Object.assign(tn.prototype,{extractAllPoints:function extractAllPoints(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function extrude(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Pa(this,e)},makeGeometry:function makeGeometry(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Ha(this,e)}}),Object.assign(h.prototype,{fromAttribute:function fromAttribute(e,t,r){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},distanceToManhattan:function distanceToManhattan(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function lengthManhattan(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(S.prototype,{setEulerFromRotationMatrix:function setEulerFromRotationMatrix(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function setEulerFromQuaternion(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function getPositionFromMatrix(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function getScaleFromMatrix(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function getColumnFromMatrix(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function applyProjection(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function fromAttribute(e,t,r){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},distanceToManhattan:function distanceToManhattan(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function lengthManhattan(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(x.prototype,{fromAttribute:function fromAttribute(e,t,r){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},lengthManhattan:function lengthManhattan(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(ne.prototype,{computeTangents:function computeTangents(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function computeLineDistances(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function applyMatrix(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.assign(L.prototype,{getChildByName:function getChildByName(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function renderDepth(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function translate(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function getWorldRotation(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function applyMatrix(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(L.prototype,{eulerOrder:{get:function get(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function set(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function get(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function set(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(re.prototype,{setDrawMode:function setDrawMode(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(re.prototype,{drawMode:{get:function get(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function set(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(xr.prototype,{objects:{get:function get(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(br.prototype,"useVertexTexture",{get:function get(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function set(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),_r.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Ci.prototype,"__arcLengthDivisions",{get:function get(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function set(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),pe.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),t!==void 0&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(rn.prototype,{onlyShadow:{set:function set(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function set(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function set(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function set(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function set(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function set(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function set(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function set(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function set(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function set(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function set(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function set(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function set(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(k.prototype,{length:{get:function get(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function get(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===as},set:function set()/* value */{console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(as)}}}),Object.assign(k.prototype,{setDynamic:function setDynamic(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?as:rs),this},copyIndicesArray:function copyIndicesArray()/* indices */{console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function setArray()/* array */{console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(te.prototype,{addIndex:function addIndex(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function addAttribute(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new k(arguments[1],arguments[2])))},addDrawCall:function addDrawCall(e,t,r){r!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function clearDrawCalls(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function computeTangents(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function computeOffsets(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function removeAttribute(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function applyMatrix(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(te.prototype,{drawcalls:{get:function get(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function get(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(Wn.prototype,{linePrecision:{get:function get(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function set(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}}),Object.defineProperties(gr.prototype,{dynamic:{get:function get(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===as},set:function set(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}}),Object.assign(gr.prototype,{setDynamic:function setDynamic(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?as:rs),this},setArray:function setArray()/* array */{console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(Ca.prototype,{getArrays:function getArrays(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function addShapeList(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function addShape(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.defineProperties(Vn.prototype,{dynamic:{set:function set(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function value(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(H.prototype,{wrapAround:{get:function get(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function set(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function get(){console.warn("THREE.Material: .overdraw has been removed.")},set:function set(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function get(){return console.warn("THREE.Material: .wrapRGB has been removed."),new U}},shading:{get:function get(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function set(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===Go}},stencilMask:{get:function get(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function set(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(ti.prototype,{metal:{get:function get(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function set(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(le.prototype,{derivatives:{get:function get(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function set(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Object.assign(cr.prototype,{clearTarget:function clearTarget(e,t,r,a){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,r,a)},animate:function animate(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function getCurrentRenderTarget(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function getMaxAnisotropy(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function getPrecision(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function resetGLState(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function supportsFloatTextures(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function supportsHalfFloatTextures(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function supportsStandardDerivatives(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function supportsCompressedTextureS3TC(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function supportsCompressedTexturePVRTC(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function supportsBlendMinMax(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function supportsVertexTextures(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function supportsInstancedArrays(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function enableScissorTest(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function initMaterial(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function addPrePlugin(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function addPostPlugin(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function updateShadowMap(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function setFaceCulling(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function allocTextureUnit(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function setTexture(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function setTexture2D(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function setTextureCube(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function getActiveMipMapLevel(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(cr.prototype,{shadowMapEnabled:{get:function get(){return this.shadowMap.enabled},set:function set(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function get(){return this.shadowMap.type},set:function set(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function get(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function set()/* value */{console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function get(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function get(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function get(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function set(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function get(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function set(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?ts:es}}}),Object.defineProperties(ir.prototype,{cullFace:{get:function get(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function set()/* cullFace */{console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function get(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function set(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function get(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function set(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(_.prototype,{wrapS:{get:function get(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function set(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function get(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function set(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function get(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function set(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function get(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function set(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function get(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function set(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function get(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function set(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function get(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function set(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function get(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function set(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function get(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function set(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function get(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function set(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Object.defineProperties(In.prototype,{load:{value:function value(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var t=this,r=new wn;return r.load(e,function(e){t.setBuffer(e)}),this}},startTime:{set:function set(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),zn.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},ce.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},ss.crossOrigin=void 0,ss.loadTexture=function(e,t,r,a){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var i=new Pi;i.setCrossOrigin(this.crossOrigin);var n=i.load(e,r,void 0,a);return t&&(n.mapping=t),n},ss.loadTextureCube=function(e,t,r,a){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var i=new Ri;i.setCrossOrigin(this.crossOrigin);var n=i.load(e,r,void 0,a);return t&&(n.mapping=t),n},ss.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},ss.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"115"}}));var oc=/*#__PURE__*/function(){function e(r){t(this,e),Object.assign(this,r),this.renderer=new cr,this.renderer.setClearColor(0,0),this.renderer.setSize(this.width,this.height),this.renderer.setPixelRatio(window.devicePixelRatio),this.el=this.renderer.domElement}return n(e,[{key:"setTexture",value:function(e){this.texture=e,this.mesh=this.createMesh()}},{key:"setSize",value:function(e){var t=e.height,r=e.width;this.height=t,this.width=r,this.renderer.setSize(r,t)}},{key:"createMesh",value:function(){this.material=new V({map:this.texture}),this.geometry=new za(1,50,50),this.geometry.scale(-1,1,1);var e=new re(this.geometry,this.material);return e}},{key:"destroy",value:function(){this.geometry.dispose(),this.material.dispose(),this.renderer.dispose()}},{key:"render",value:function(e,t,r){r&&this.renderer.render(e,t)}}]),e}(),sc=function(e){var t=1.70158;return--e*e*((t+1)*e+t)+1},lc=/*#__PURE__*/function(){function e(a){var i=this;t(this,e),Object.assign(this,a),this.el=this.renderer.el,this.theta=this.initialYaw*r/180,this.phi=0,this.velo=.02,this.rotateStart=new h,this.rotateEnd=new h,this.rotateDelta=new h,this.orientation=new M,this.euler=new E,this.momentum=!1,this.isUserInteracting=!1,this.addDraggableStyle(),this.onMouseMove=this.onMouseMove.bind(this),this.onMouseDown=this.onMouseDown.bind(this),this.onMouseUp=this.onMouseUp.bind(this),this.onTouchStart=function(e){return i.onMouseDown({clientX:e.touches[0].pageX,clientY:e.touches[0].pageY})},this.onTouchMove=function(e){return i.onMouseMove({clientX:e.touches[0].pageX,clientY:e.touches[0].pageY})},this.onTouchEnd=function(){return i.onMouseUp()},this.onDeviceMotion=this.onDeviceMotion.bind(this),this.onMessage=this.onMessage.bind(this),this.bindEvents()}var r=Eo;return n(e,[{key:"bindEvents",value:function(){this.el.addEventListener("mouseleave",this.onMouseUp),this.el.addEventListener("mousemove",this.onMouseMove),this.el.addEventListener("mousedown",this.onMouseDown),this.el.addEventListener("mouseup",this.onMouseUp),this.el.addEventListener("touchstart",this.onTouchStart),this.el.addEventListener("touchmove",this.onTouchMove),this.el.addEventListener("touchend",this.onTouchEnd),this.isInIframe()||window.addEventListener("devicemotion",this.onDeviceMotion),window.addEventListener("message",this.onMessage)}},{key:"centralize",value:function(){var t=this,a=this.initialYaw*r/180,n=this.theta,e=this.phi,o=Date.now(),s=function(){var r=Date.now()-o,i=r/750;return(i=1<i?1:i,r>=750)?cancelAnimationFrame(l):(t.theta=n+(a-n)*sc(i),t.phi=e+(0-e)*sc(i),requestAnimationFrame(s))},l=s()}},{key:"isInIframe",value:function(){try{return window.self!==window.top}catch(e){return!0}}},{key:"destroy",value:function(){this.el.removeEventListener("mouseleave",this.onMouseUp),this.el.removeEventListener("mousemove",this.onMouseMove),this.el.removeEventListener("mousedown",this.onMouseDown),this.el.removeEventListener("mouseup",this.onMouseUp),this.el.removeEventListener("touchstart",this.onTouchStart),this.el.removeEventListener("touchmove",this.onTouchMove),this.el.removeEventListener("touchend",this.onTouchEnd),window.removeEventListener("devicemotion",this.onDeviceMotion),window.removeEventListener("message",this.onMessage)}},{key:"getCurrentStyle",value:function(){return"height: ".concat(parseInt(this.el.style.height,10),"px; width: ").concat(parseInt(this.el.style.width,10),"px; user-select: none; -webkit-user-select: none; -webkit-touch-callout: none; -webkit-tap-highlight-color: rgba(0,0,0,0);")}},{key:"addDraggingStyle",value:function(){this.el.setAttribute("style","".concat(this.getCurrentStyle()," cursor: -webkit-grabbing; cursor: -moz-grabbing; cursor: grabbing;"))}},{key:"addDraggableStyle",value:function(){this.el.setAttribute("style","".concat(this.getCurrentStyle()," cursor: -webkit-grab; cursor: -moz-grab; cursor: grab;"))}},{key:"onMessage",value:function(t){var r=t.data,a=r.orientation,i=r.portrait,n=r.rotationRate;n&&this.onDeviceMotion({orientation:a,portrait:i,rotationRate:n})}},{key:"onDeviceMotion",value:function(t){var r=void 0===t.portrait?window.matchMedia("(orientation: portrait)").matches:t.portrait,a;a=void 0===t.orientation?void 0===window.orientation?-90:window.orientation:t.orientation;var i=os.degToRad(t.rotationRate.alpha),n=os.degToRad(t.rotationRate.beta);r?(this.phi=this.verticalPanning?this.phi+i*this.velo:this.phi,this.theta-=-1*(n*this.velo)):(this.verticalPanning&&(this.phi=-90===a?this.phi+n*this.velo:this.phi-n*this.velo),this.theta=-90===a?this.theta-i*this.velo:this.theta+i*this.velo),this.adjustPhi()}},{key:"onMouseMove",value:function(e){this.isUserInteracting&&(this.rotateEnd.set(e.clientX,e.clientY),this.rotateDelta.subVectors(this.rotateEnd,this.rotateStart),this.rotateStart.copy(this.rotateEnd),this.phi=this.verticalPanning?this.phi+.3*(2*r*this.rotateDelta.y/this.renderer.height):this.phi,this.theta+=.5*(2*r*this.rotateDelta.x/this.renderer.width),this.adjustPhi())}},{key:"adjustPhi",value:function(){this.phi=os.clamp(this.phi,-r/1.95,r/1.95)}},{key:"onMouseDown",value:function(e){this.addDraggingStyle(),this.rotateStart.set(e.clientX,e.clientY),this.isUserInteracting=!0,this.momentum=!1,this.onDragStart&&this.onDragStart()}},{key:"inertia",value:function(){this.momentum&&(this.rotateDelta.y*=.9,this.rotateDelta.x*=.9,this.theta+=.005*this.rotateDelta.x,this.phi=this.verticalPanning?this.phi+.005*this.rotateDelta.y:this.phi,this.adjustPhi())}},{key:"onMouseUp",value:function(){this.isUserInteracting&&this.onDragStop&&this.onDragStop(),this.addDraggableStyle(),this.isUserInteracting=!1,this.momentum=!0,this.inertia()}},{key:"update",value:function(){return(this.phi!==this.previousPhi||this.theta!==this.previousTheta)&&(this.previousPhi=this.phi,this.previousTheta=this.theta,this.euler.set(this.phi,this.theta,0,"YXZ"),this.orientation.setFromEuler(this.euler),this.camera.quaternion.copy(this.orientation),this.inertia(),!0)}}]),e}(),dc=console,pc=/*#__PURE__*/function(){function r(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};t(this,r),Object.assign(this,{height:360,width:640,initialYaw:90,verticalPanning:!0},a);var n=this.height,o=this.width,s=this.container,e=this.containerId,l=this.initialYaw,d=this.verticalPanning,p=this.onDragStart,i=this.onDragStop;this.renderer=new oc({height:n,width:o}),this.camera=new pe(80,this.width/this.height,.1,100),this.controls=new lc({camera:this.camera,renderer:this.renderer,initialYaw:l,verticalPanning:d,onDragStart:p,onDragStop:i}),this.stopVideoLoop=this.stopVideoLoop.bind(this),this.onError=this.onError.bind(this),this.startVideoLoop=this.startVideoLoop.bind(this),this.needsUpdate=!1,this.scene=this.createScene(),this.element=this.getElement(),this.elementReady=!1,this.element.addEventListener("playing",this.startVideoLoop),this.element.addEventListener("pause",this.stopVideoLoop),this.element.addEventListener("ended",this.stopVideoLoop),this.element.addEventListener("loadedmetadata",this.initAfterLoadedMetadata.bind(this)),this.target=this.container?this.container:document.querySelector(this.containerId)}return n(r,[{key:"initAfterLoadedMetadata",value:function(){1<=this.element.readyState&&!this.elementReady&&(this.texture=this.createTexture(),this.renderer.setTexture(this.texture),this.scene.add(this.renderer.mesh),this.elementReady=!0)}},{key:"play",value:function(){this.element.play&&this.element.play()}},{key:"pause",value:function(){this.element.pause&&this.element.pause()}},{key:"centralize",value:function(){this.controls.centralize()}},{key:"stopVideoLoop",value:function(){this.needsUpdate=!1}},{key:"destroy",value:function(){this.element.style.display="",clearInterval(this.videoLoopId),cancelAnimationFrame(this.animationFrameId),this.element.pause&&this.element.pause(),this.target.removeChild(this.renderer.el),this.controls.destroy(),this.renderer.destroy()}},{key:"setSize",value:function(e){var t=e.height,r=e.width;this.camera.aspect=r/t,this.camera.updateProjectionMatrix(),this.renderer.setSize({height:t,width:r})}},{key:"getElement",value:function(){if(this.source&&this.source.tagName)return this.source;var e=document.createElement("video");return e.loop=this.loop||!1,e.muted=this.muted||!1,e.setAttribute("crossorigin","anonymous"),e.setAttribute("webkit-playsinline","true"),e.setAttribute("playsinline","true"),e.setAttribute("src",this.source),e.autoplay=void 0===this.autoplay||this.autoplay,e.addEventListener("error",this.onError),e}},{key:"createTexture",value:function(){var e=new Cr(this.element);return e.minFilter=jo,e.magFilter=jo,e.format=Xo,e.generateMipmaps=!1,e.needsUpdate=!0,e}},{key:"createScene",value:function(){var e=new A;return e}},{key:"onError",value:function(e){dc.error("error loading",this.source,e)}},{key:"startVideoLoop",value:function(){this.needsUpdate=!0}},{key:"render",value:function(){var e=this;this.target.appendChild(this.renderer.el),this.element.style.display="none";var t=function(){var t=e.controls.update();e.renderer.render(e.scene,e.camera,e.needsUpdate||t)},r=function(){e.videoLoopId=setInterval(function(){e.animationFrameId=requestAnimationFrame(t)},1e3/30)},a=function(){return 0!=e.element.videoWidth&&0!=e.element.videoHeight?void r():void setTimeout(a,100)};a()}}]),r}(),cc=/*#__PURE__*/function(e){function r(e){return t(this,r),i.call(this,e)}o(r,e);var i=u(r);return r}(pc),uc=/*#__PURE__*/function(e){function r(e){var a;return t(this,r),a=i.call(this,e),a.texture=a.createTexture(),a.renderer.setTexture(a.texture),a.scene.add(a.renderer.mesh),a}o(r,e);var i=u(r);return n(r,[{key:"getElement",value:function(){if(this.source&&this.source.tagName)return this.source;var e=document.createElement("img");return e.setAttribute("crossorigin","anonymous"),e.src=this.source,e}},{key:"createTexture",value:function(){var e=new v(this.element);return e.minFilter=jo,e.magFilter=jo,e.format=Xo,e.generateMipmaps=!1,e.needsUpdate=!0,e}},{key:"render",value:function(){var e=this;this.target.appendChild(this.renderer.el),this.element.style.display="none";var t=function(){var t=e.controls.update();e.renderer.render(e.scene,e.camera,t)};(function(){e.videoLoopId=setInterval(function(){e.animationFrameId=requestAnimationFrame(t)},1e3/30)})()}}]),r}(pc),mc=/*#__PURE__*/function(e){function r(e){var a;return t(this,r),a=i.call(this,e),a.canvas=null,a}o(r,e);var i=u(r);return n(r,[{key:"createTexture",value:function(){this.canvas=document.createElement("canvas"),this.context=this.canvas.getContext("2d");var e=new Ir(this.canvas);//TODO: we can pass all this info through the constructor
return e.minFilter=jo,e.magFilter=jo,e.format=Xo,e.generateMipmaps=!1,e.needsUpdate=!0,e}},{key:"render",value:function(){var e=this;this.target.appendChild(this.renderer.el),this.element.style.display="none";var t=function(){!0==e.needsUpdate&&(e.element.videoWidth!=e.videoWidth&&(e.videoWidth=e.element.videoWidth,e.canvas.width=e.videoWidth),e.element.videoHeight!=e.videoHeight&&(e.videoHeight=e.element.videoHeight,e.canvas.height=e.videoHeight),e.context.drawImage(e.element,0,0,e.videoWidth,e.videoHeight),e.texture.needsUpdate=!0);var t=e.controls.update();e.renderer.render(e.scene,e.camera,e.needsUpdate||t)},r=function(){e.videoLoopId=setInterval(function(){e.animationFrameId=requestAnimationFrame(t)},1e3/30)},a=function(){return e.canvas&&0!=e.element.videoWidth&&0!=e.element.videoHeight?(e.videoWidth=e.element.videoWidth,e.videoHeight=e.element.videoHeight,e.canvas.width=e.videoWidth,e.canvas.height=e.videoHeight,void r()):void setTimeout(a,100)};a()}}]),r}(pc),gc=/*#__PURE__*/function(e){function r(e){var a;return t(this,r),a=i.call(this,e),a.driver.addEventListener("playing",a.startVideoLoop),a.driver.addEventListener("pause",a.stopVideoLoop),a.driver.addEventListener("ended",a.stopVideoLoop),a.driver.addEventListener("stalled",a.stopVideoLoop),a.driverInitialized=!1,a}o(r,e);var i=u(r);return n(r,[{key:"play",value:function(){this.driver.play()}},{key:"pause",value:function(){this.driver.pause()}},{key:"getElement",value:function(){this.source&&this.source.tagName?this.driver=this.source:(this.driver=document.createElement("audio"),this.driver.src=this.source,this.driver.loop=this.loop||!1,this.driver.muted=this.muted||!1,this.driver.setAttribute("crossorigin","anonymous"),this.driver.autoplay=this.autoplay||!0),this.source=this.driver.src,this.driver.src="",this.driver.load();var e=document.createElement("video");return e.setAttribute("crossorigin","anonymous"),e.src=this.source,e.load(),e.addEventListener("error",this.onError),e}},{key:"createTexture",value:function(){var e=new Cr(this.element);//TODO: we can pass all this info through the constructor
return e.minFilter=jo,e.magFilter=jo,e.format=Xo,e.generateMipmaps=!1,e.needsUpdate=!0,e}},{key:"destroy",value:function(){this.driver.style.display="",g(s(r.prototype),"destroy",this).call(this)}},{key:"render",value:function(){var e=this;this.target.appendChild(this.renderer.el),this.element.style.display="none",this.driver.style.display="none";var t=function(){e.element.currentTime=e.driver.currentTime;var t=e.controls.update();e.renderer.render(e.scene,e.camera,e.needsUpdate||t)},r=function(){e.videoLoopId=setInterval(function(){e.animationFrameId=requestAnimationFrame(t)},1e3/30)},a=function(){if(0!=e.element.videoWidth&&0!=e.element.videoHeight){var t=e.element.readyState>=e.element.HAVE_FUTURE_DATA&&!e.driverInitialized;if(t)return e.driver.src=e.source,e.driver.load(),e.onDriverReady&&e.onDriverReady(),e.driverInitialized=!0,void r()}setTimeout(a,100)};a()}}]),r}(pc);e.Image=uc,e.Video=function video(e){return Uo.shouldUseAudioDriver()?new gc(e):Uo.shouldUseCanvasInBetween()?new mc(e):new cc(e)},Object.defineProperty(e,"__esModule",{value:!0})});

